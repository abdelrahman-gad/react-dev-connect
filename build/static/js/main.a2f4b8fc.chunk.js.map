{"version":3,"sources":["components/layout/helpers.js","components/recources/UI/helpers.js","components/layout/SignedInLinks.jsx","store/actions/authActions.js","store/actions/actions.js","store/actions/notificationsActions.js","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/recources/UI/Jumbotron.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/dashboard/Educations.jsx","store/actions/profilesActions.js","components/dashboard/Experiences.jsx","components/dashboard/AuthUserDetails.jsx","components/dashboard/Dashboard.jsx","components/posts/comments/AddComment.jsx","store/actions/commentsActions.js","store/actions/reactsActions.js","components/posts/ReactsBar.jsx","components/posts/comments/Comment.jsx","components/posts/comments/Comments.jsx","components/posts/PostDetails.jsx","components/posts/AddPost.jsx","store/actions/postsActions.js","components/posts/PostSummary.jsx","components/posts/Posts.jsx","components/recources/formikComponents/TextError.js","components/recources/formikComponents/Input.js","components/recources/formikComponents/Textarea.js","components/recources/formikComponents/Select.js","components/recources/formikComponents/RadioButtons.js","components/recources/formikComponents/CheckboxGroup.js","components/recources/formikComponents/DatePicker.js","components/recources/formikComponents/FormikControl.js","components/dashboard/EditProfile.jsx","components/dashboard/AddExperience.jsx","components/dashboard/AddEducation.jsx","config/fbConfig.js","components/dashboard/EditProfileImage.jsx","components/layout/NotFoundPage.jsx","components/layout/HomePage.jsx","components/profiles/Developers.jsx","components/profiles/DeveloperDetails.jsx","components/profiles/DeveloperPosts.jsx","components/posts/EditPost.jsx","components/auth/PrivateRoute.jsx","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/dataReducers/profileReducer.js","store/reducers/dataReducers/postReducer.js","store/reducers/dataReducers/commentReducer.js","store/reducers/dataReducers/reactReducer.js","store/reducers/dataReducers/notificationReducer.js","store/reducers/rootReducer.js","index.js"],"names":["isActive","history","path","location","pathname","color","Loading","msg","className","formatDate","date","console","log","diff","Date","sec","Math","floor","min","d","getDate","getMonth","getFullYear","getHours","getMinutes","map","component","slice","join","withRouter","compose","connect","state","notifications","firestore","ordered","auth","firebase","filter","notification","notifiedId","uid","notifierId","sort","a","b","createdAt","seconds","dispatch","ownProps","logOut","getState","getFirebase","signOut","then","type","catch","err","payload","message","readNotification","notificationId","getFirestore","collection","doc","update","read","firestoreConnect","useState","showNotifs","setShowNotifs","unreadNotifications","unreadNotificationsCount","length","exact","style","to","onClick","e","preventDefault","handleShowNotifs","id","notifiableLink","key","handleReadNotication","body","toDate","onSubmit","profile","links","Jumbotron","title","description","children","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","props","showError","initialValues","validationSchema","Yup","required","values","name","placeholder","error","signUp","newUser","createUserWithEmailAndPassword","resp","user","updateProfile","photoURL","set","handle","imageUrl","userId","passwordConfirmation","oneOf","educations","education","deleteEducation","educationId","delete","userEducation","school","field","degree","confirmAlert","buttons","label","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","handleDelete","experiences","experience","deleteExperience","experienceId","userExperience","company","jobTitle","deleteAccount","currentUser","showConfirmModal","showConfirm","setShowConfirm","handleCancelDelete","deleteElementId","handleConfirmDelete","undefined","src","alt","addComment","comment","commentId","uuid4","posts","data","post","postId","notifiableId","setSubmitting","setTimeout","as","rows","notifyReact","react","comments","notifiable","notificationBody","find","reactableId","reactedId","reactorId","addReact","oldReact","reacts","oldReactObj","reactType","reactId","reactableType","handleReact","likeReacts","dislikeReacts","loveReacts","deleteComment","Comments","match","params","users","commentReacts","addPost","authorId","commentCount","likeCount","userHandle","deletePost","getComments","getReacts","reactable","completePosts","filteredComments","TextError","Input","rest","Textarea","Select","options","option","value","RadioButtons","Fragment","checked","htmlFor","CheckboxGroup","includes","DatePicker","form","setFieldValue","selected","onChange","val","FormikControl","control","profiles","editProfile","newProfile","useEffect","setInitialValues","website","skills","githubUsername","bio","facebook","twitter","linkedin","youtube","instagram","handleChange","target","urlRegex","nullable","matches","enableReinitialize","formik","cols","addExperience","fromDate","resetForm","addEducation","peyload","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","editProfileImage","profileImage","profileImageUrl","setProfileImage","uploadProgress","setUploadPrgress","noSelectedImgError","setNoSelectedImgError","files","max","ref","put","on","snapshot","progress","round","bytesTransferred","totalBytes","child","getDownloadURL","url","NotFoundPage","React","Component","HomePage","this","developers","matchedProfile","developer","split","skill","i","handleUrl","window","href","Object","keys","showDeveloper","loading","showLoading","developerId","editPost","updPost","render","from","configure","App","Dashboard","SignIn","SignUp","EditProfile","AddExperience","AddEducation","EditProfileImage","Developers","DeveloperDetails","exaxt","DeveloperPosts","Posts","PostDetails","EditPost","Boolean","hostname","initState","deleteAccountError","authReducer","action","editProfileErr","addExperienceErr","addEducationErr","editProfileImageErr","profileReducer","deleteEducationErr","postReducer","deletePostError","editPostError","addCommentError","deleteCommentError","commentReducer","addReactError","deleteReactError","reactReducer","readNotificationError","notificationReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","AuthIsLoaded","useSelector","isLoaded","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2f4b8fc.chunk.js","sourcesContent":["export  const isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: \"#0278ae\" };\r\n    } else {\r\n        return { color: \"#17a2b2\" };\r\n    }\r\n};","import React from 'react';\r\n\r\nexport const showLoading = ( loading , message = 'Loading data .....' ) => {\r\n\r\n    return ( loading &&  <div className=\"container\">\r\n              <h2 className=\"text-primary  text-center loading \"> {message} </h2>\r\n            </div>);\r\n    } \r\n  \r\n\r\nexport  const Loading = ( msg ) => {\r\n      return (\r\n          <div className=\"container\">\r\n               <h2 className=\"text-primary text-center loading\"> {msg} </h2>\r\n          </div> \r\n      );    \r\n}\r\n\r\n\r\n\r\nexport const   formatDate = ( date ) => {\r\n    console.log(date);\r\n    // covert createdAt to timeStamp\r\n    // let date = createdAt.seconds *1000; // in milliseconds\r\n    let diff = new Date() - date; // the difference in milliseconds\r\n  \r\n    if (diff < 1000) { // less than 1 second\r\n      return 'right now';\r\n    }\r\n  \r\n    let sec = Math.floor(diff / 1000); // convert diff to seconds\r\n  \r\n    if (sec < 60) {\r\n      return sec + ' sec. ago';\r\n    }\r\n  \r\n    let min = Math.floor(diff / 60000); // convert diff to minutes\r\n    if (min < 60) {\r\n      return min + ' min. ago';\r\n    }\r\n  \r\n    // format the date\r\n    // add leading zeroes to single-digit day/month/hours/minutes\r\n    let d = date;\r\n    d = [\r\n      '0' + d.getDate(),\r\n      '0' + (d.getMonth() + 1),\r\n      '' + d.getFullYear(),\r\n      '0' + d.getHours(),\r\n      '0' + d.getMinutes()\r\n    ].map(component => component.slice(-2)); // take last 2 digits of every component\r\n  \r\n    // join the components into date\r\n    return d.slice(0, 3).join('.') + ' ' + d.slice(3).join(':');\r\n  }\r\n\r\n\r\n  \r\n  ","import React, { useState  } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {logOut} from '../../store/actions/authActions';\r\nimport {readNotification} from '../../store/actions/notificationsActions';\r\nimport { compose } from 'redux';\r\nimport { NavLink , Redirect , withRouter } from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport { isActive } from './helpers';\r\nimport {formatDate} from '../recources/UI/helpers';\r\n\r\nconst SigndInLinks  = ( { logOut , readNotification  , notifications , history } )  => {\r\n      \r\n        const [showNotifs , setShowNotifs] = useState(false);\r\n\r\n\r\n        const  handleLogout = (e) => {\r\n                  e.preventDefault();\r\n                  //console.log(this.props);\r\n                  logOut();\r\n                  return <Redirect exact to=\"/\"  />              \r\n          }\r\n        const  handleShowNotifs= (e) =>{\r\n            e.preventDefault();\r\n            setShowNotifs(!showNotifs);\r\n          }\r\n        const  handleReadNotication = (e , notificationId) => {\r\n            e.preventDefault();\r\n            readNotification(notificationId);\r\n        }\r\n\r\n\r\n   \r\n\r\n      \r\n      const  unreadNotifications= notifications ? [...notifications.filter(notification=>notification.read === false)]:[]; \r\n      let unreadNotificationsCount = unreadNotifications ? unreadNotifications.length:0;\r\n     \r\n      return (\r\n            \r\n    <ul>\r\n        <li>\r\n          <NavLink\r\n             exact \r\n             style={ isActive(history, '/dashboard') }\r\n             to=\"/dashboard\"> \r\n            <i className=\"fa fa-user\"></i> \r\n            <span className=\"hide-sm\"> Dashboard </span> \r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n           exact \r\n           style={ isActive(history, '/developers') }\r\n           to=\"/developers\">   Developers </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink \r\n           exact \r\n           style={ isActive(history, '/posts') }\r\n           to=\"/posts\">Posts</NavLink>\r\n        </li>\r\n        <li  className=\"notifs\">            \r\n            <button \r\n              onClick={(e)=>handleShowNotifs(e)}\r\n              id=\"notifs\"\r\n              className=\"notifs\"\r\n              >\r\n            <i className=\"fas fa-globe\"></i>\r\n            <span className=\"hide-sm\">Notifications</span>\r\n            <span className=\"notifs-number\">  {unreadNotificationsCount}  </span>\r\n          </button>\r\n          \r\n          <div\r\n            className={showNotifs?\"notifs-block show\":\"notifs-block\"}\r\n            id=\"notifs-block\"      \r\n          >\r\n          {\r\n            ( notifications && notifications.length >= 1)?notifications.map(notification=>{\r\n              return      ( \r\n                            <NavLink \r\n                                  exact to={notification.notifiableLink}\r\n                                  key={notification.notificationId}\r\n                                  className={notification.read?\"seen\":\"\"} \r\n                                  >                             \r\n                                    <span \r\n                                        onClick={(e)=>{handleReadNotication(e,notification.notificationId)}}\r\n                                      > \r\n                                      {notification.body}\r\n                                    </span> \r\n                                    <span> at  {formatDate(notification.createdAt.toDate())}  </span>\r\n                              </NavLink>                            \r\n                            );\r\n                  }):<NavLink \r\n                      to=\"/\"\r\n                      className=\"seen\"\r\n                    \r\n                       >                             \r\n                        <span> \r\n                         No notifications yet ):\r\n                        </span> \r\n                      \r\n                  </NavLink>    \r\n          }\r\n             \r\n          </div>\r\n        </li>\r\n      \r\n\r\n        <form  onSubmit={handleLogout} >\r\n            <button className=\"logout-btn\"> Logout  </button>\r\n        </form>\r\n          \r\n      </ul>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch,ownProps) => {\r\n  return {\r\n    logOut: () => dispatch(logOut()),\r\n    readNotification:(notificationId)=>dispatch(readNotification(notificationId))\r\n  }\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n  let notifications = state.firestore.ordered.notifications;\r\n  let auth  = state.firebase.auth;\r\n  //console.log(auth.uid);\r\n  if(notifications){\r\n     notifications = notifications.filter(notification => notification.notifiedId === auth.uid && notification.notifiedId !== notification.notifierId )\r\n     notifications = notifications.sort( (a,b) => b.createdAt.seconds - a.createdAt.seconds );\r\n   //  console.log(notifications);  \r\n  }\r\n  return {\r\n       notifications\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default  withRouter (compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  firestoreConnect([\r\n     {collection:'notifications'}      \r\n    ])\r\n)\r\n(SigndInLinks));\r\n\r\n\r\n","import {   \r\n             SIGNUP_SUCCESS , \r\n             SIGNUP_ERROR , \r\n             SIGNIN_SUCCESS ,\r\n             SIGNIN_ERROR ,\r\n             LOGOUT_SUCCESS,\r\n             LOGOUT_ERROR ,\r\n             ACCOUNT_DELETE_SUCCESS,\r\n             ACCOUNT_DELETE_ERROR\r\n            \r\n            } from './actions';\r\n\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch , getState , {getFirebase,getFirestore})=> {\r\n      const firebase = getFirebase();\r\n    \r\n     firebase.auth().signInWithEmailAndPassword(credentials.email,credentials.password)\r\n      .then( () => dispatch({type:SIGNIN_SUCCESS}))\r\n      .catch( err => {         \r\n            dispatch({type:SIGNIN_ERROR,payload:err.message});\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const  logOut = () =>{\r\n    return (dispatch , getState , {getFirebase} )=>{\r\n        const firebase = getFirebase();\r\n  \r\n        firebase.auth().signOut().then(() => {\r\n          dispatch({ type: LOGOUT_SUCCESS });\r\n        }).catch(err=> dispatch({type:LOGOUT_ERROR , payload: err.message}) );\r\n\r\n    }\r\n}\r\n \r\nexport const signUp = (newUser) =>{\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n         console.log( 'from actions ' , newUser);\r\n     firebase.auth().createUserWithEmailAndPassword( \r\n             newUser.email,\r\n             newUser.password\r\n         ).then( resp => {\r\n            resp.user.updateProfile({\r\n                photoURL:'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200'\r\n            });\r\n            return firestore.collection('users')\r\n            .doc(resp.user.uid)\r\n            .set({\r\n                handle:newUser.name,\r\n                imageUrl:'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200',\r\n                email:newUser.email,\r\n                createdAt:new Date(),\r\n                userId:resp.user.uid\r\n             })\r\n           }).then(()=>{\r\n               \r\n                dispatch({type:SIGNUP_SUCCESS});\r\n           }).catch(err => {\r\n                dispatch({type:SIGNUP_ERROR,payload:err.message});\r\n           });\r\n             \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const deleteAccount = (  ) => {\r\n    console.log('delete account from actions');\r\n  //  console.log(accountId);\r\n    return (dispatch, getState , {getFirebase , getFirestore} )=>{\r\n        const firebase= getFirebase();\r\n         var  account = firebase.auth().currentUser;\r\n     //    console.log(account);\r\n         account.delete().then(() => dispatch({type:ACCOUNT_DELETE_SUCCESS}))\r\n        .catch( err => dispatch( {type:ACCOUNT_DELETE_ERROR, payload:err.message}));\r\n    }\r\n}","\r\n// auth actions\r\n\r\nconst SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nconst SIGNUP_ERROR = 'SIGNUP_ERROR';\r\nconst SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\r\nconst SIGNIN_ERROR = 'SIGNIN_ERROR';\r\nconst LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nconst LOGOUT_ERROR = 'LOGOUT_ERROR'; \r\n\r\n// account  actions\r\nconst ACCOUNT_DELETE_SUCCESS = 'ACCOUNT_DELETE_SUCCESS';\r\nconst ACCOUNT_DELETE_ERROR='ACCOUNT_DELETE_ERROR';\r\n\r\n\r\n\r\n\r\n// comments actions \r\nconst ADD_COMMENT_SUCCESS= 'ADD_COMMENT_SUCCESS';\r\nconst ADD_COMMENT_ERROR = 'ADD_COMMENT_ERROR';\r\nconst DELETE_COMMENT_SUCCESS='DELETE_COMMENT_SUCCESS';\r\nconst DELETE_COMMENT_ERROR='DELETE_COMMENT_ERROR';\r\n\r\n// notifications actions\r\nconst READ_NOTIFICATION_SUCCESS='READ_NOTIFICATION_SUCCESS';\r\n\r\n// post actions\r\nconst FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\r\nconst FETCH_POSTS_SUCCESS= 'FETCH_POSTS_SUCCESS';\r\nconst FETCH_POSTS_ERROR='FETCH_POSTS_ERROR'\r\nconst ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nconst ADD_POST_ERROR = 'ADD_POST_ERROR';\r\nconst DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nconst DELETE_POST_ERROR= 'DELETE_POST_ERROR';\r\nconst EDIT_POST_SUCCESS='EDIT_POST_SUCCESS';\r\nconst EDIT_POST_ERROR='EDIT_POST_ERROR';\r\n\r\n\r\n// profile actions\r\nconst EDIT_PROFILEIMAGE_SUCCESS='EDIT_PROFILEIMAGE_SUCCESS';\r\nconst EDIT_PROFILEIMAGE_ERROR='EDIT_PROFILEIMAGE_ERROR';\r\nconst EDIT_PROFILE_SUCCESS='EDIT_PROFILE_SUCCESS';\r\nconst EDIT_PROFILE_ERROR='EDIT_PROFILE_ERROR';\r\nconst ADD_EXPERIENCE_SUCCESS='ADD_EXPERIENCE_SUCCESS';\r\nconst ADD_EXPERIENCE_ERROR='ADD_EXPERIENCE_ERROR';\r\nconst DELETE_EXPERIENCE_SUCCESS='DELETE_EXPERIENCE_SUCCESS';\r\nconst DELETE_EXPERIENCE_ERROR='DELETE_EXPERIENCE_ERROR';\r\nconst ADD_EDUCATION_SUCCESS='ADD_EDUCATION_SUCCESS';\r\nconst ADD_EDUCATION_ERROR='ADD_EDUCATION_ERROR';\r\nconst DELETE_EDUCATION_SUCCESS='DELETE_EDUCATION_SUCCESS';\r\nconst DELETE_EDUCATION_ERROR='DELETE_EDUCATION_ERROR';\r\n\r\n\r\n\r\n// reacts actions\r\nconst ADD_REACT_SUCCESS='ADD_REACT_SUCCESS';\r\nconst ADD_REACT_ERROR='ADD_REACT_ERROR';\r\nconst DELETE_REACT_SUCCESS='DELETE_REACT_SUCCESS';\r\nconst DELETE_REACT_ERROR='DELETE_REACT_ERROR';\r\n\r\n\r\nexport {\r\n        SIGNUP_SUCCESS , SIGNUP_ERROR , SIGNIN_SUCCESS  , SIGNIN_ERROR  , LOGOUT_SUCCESS , LOGOUT_ERROR , ACCOUNT_DELETE_SUCCESS,ACCOUNT_DELETE_ERROR,\r\n        ADD_COMMENT_SUCCESS ,ADD_COMMENT_ERROR, DELETE_COMMENT_SUCCESS ,  DELETE_COMMENT_ERROR,\r\n        READ_NOTIFICATION_SUCCESS ,\r\n        FETCH_POSTS_REQUEST, FETCH_POSTS_SUCCESS, FETCH_POSTS_ERROR , ADD_POST_SUCCESS ,ADD_POST_ERROR ,DELETE_POST_SUCCESS , DELETE_POST_ERROR, EDIT_POST_SUCCESS , EDIT_POST_ERROR,\r\n        EDIT_PROFILEIMAGE_SUCCESS , EDIT_PROFILEIMAGE_ERROR , EDIT_PROFILE_SUCCESS , EDIT_PROFILE_ERROR , ADD_EXPERIENCE_SUCCESS , ADD_EXPERIENCE_ERROR , DELETE_EXPERIENCE_SUCCESS , DELETE_EXPERIENCE_ERROR , ADD_EDUCATION_SUCCESS , ADD_EDUCATION_ERROR , DELETE_EDUCATION_SUCCESS ,DELETE_EDUCATION_ERROR ,\r\n        ADD_REACT_SUCCESS ,ADD_REACT_ERROR , DELETE_REACT_SUCCESS ,DELETE_REACT_ERROR\r\n  }\r\n","\r\nimport { READ_NOTIFICATION_SUCCESS } from './actions';\r\n\r\nexport const readNotification = (notificationId)=>{\r\n    return (dispatch,getState , {getFirebase,getFirestore})=>{\r\n          const firestore = getFirestore();\r\n          firestore.collection('notifications').doc(notificationId).update({           \r\n              read:true\r\n          }).then(()=>dispatch({type:READ_NOTIFICATION_SUCCESS}));\r\n                 console.log('notification read Succesfuly');\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink, withRouter} from 'react-router-dom';\r\nimport { isActive }  from './helpers'; \r\n\r\nconst SignedOutLinks = ( {history} ) => {\r\n\r\n return (\r\n     <ul>\r\n        <li>\r\n         <NavLink to=\"/signup\"  style={ isActive(history, '/signup') } >SignUp </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/signin\" style={ isActive(history, '/signin') }> Login </NavLink>\r\n        </li>\r\n         \r\n     </ul>\r\n );\r\n}\r\n\r\nexport default withRouter(SignedOutLinks);\r\n\r\n\r\n\r\n","import React  from 'react';\r\nimport SigndInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { isActive } from './helpers';\r\n\r\n\r\nconst  Navbar = ( { auth , profile , history  } ) =>   {\r\n\r\n\r\n           const  links = auth.uid ?  <SigndInLinks  profile={profile} />:<SignedOutLinks />;\r\n                    \r\n                return (\r\n                  \r\n                            <nav className=\"navbar bg-dark\">\r\n                                <h3>\r\n                                <NavLink \r\n                                    style={isActive( history ,'/dashboard')}\r\n                                    to=\"/dashboard\">\r\n                                    <i className=\"fas fa-code\"></i>DevConnect\r\n                                </NavLink>               \r\n                                </h3>\r\n                                <ul>\r\n                                 {links}\r\n                                </ul>\r\n                            </nav>                      \r\n                    );\r\n    \r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const auth = state.firebase.auth;\r\n    const profile=state.firebase.profile;\r\n     return{\r\n         auth,\r\n         profile\r\n     }\r\n}\r\n\r\nexport default withRouter(  connect(mapStateToProps) (Navbar) );","import React, { Fragment } from \"react\";\r\n\r\nconst Jumbotron = ({\r\n    title = \"Title\",\r\n    description = \"Description\",\r\n    className,\r\n    children\r\n}) => (\r\n     <Fragment>\r\n            <h1 className=\"large text-primary\">  {title} </h1>   \r\n            <p className=\"lead\"> {children} {description} </p>\r\n     </Fragment>\r\n);\r\n\r\nexport default Jumbotron;\r\n","import React   from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect,NavLink} from 'react-router-dom';\r\nimport {signIn } from '../../store/actions/authActions';\r\nimport Jumbotron from '../recources/UI/Jumbotron';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nconst  SignIn = ( props )  =>  {\r\nconst { auth , authError , signIn } = props;\r\nconst validate = () => Yup.object({\r\n    email:Yup.string().email('Invalid Email Address').required('Please fill up email address field'),\r\n    password:Yup.string()\r\n    .required('Please provide a password') \r\n    .min(6, 'Password is too short - should be 6 chars minimum.')\r\n });\r\n \r\n\r\nconst signinForm = () => {\r\n return (\r\n    <Formik\r\n      //1- initial values\r\n      initialValues={{ email:'' , password:'' }}\r\n      //2- validation [ I used Yup package ]\r\n      validationSchema={validate()}\r\n      //3-  add Submit handler method\r\n      onSubmit={ ( values ) => {\r\n           signIn(values);\r\n      } }\r\n      >\r\n     <Form className=\"form\">   \r\n        <Field className=\"form-control\"  name=\"email\" type=\"text\" placeholder=\"email\" />\r\n        <p  className=\"text-danger\"> <ErrorMessage name=\"email\"  /></p> \r\n     \r\n        <Field  className=\"form-control\"  name=\"password\" type=\"password\"  placeholder=\"password\"/>\r\n        <p className=\"text-danger\"> <ErrorMessage name=\"password\"  /> </p>\r\n        \r\n        <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>          \r\n     </Form>\r\n    </Formik>\r\n );\r\n\r\n}\r\n\r\nconst  showError = authError => (authError ? <div className=\"alert alert-danger\"> {authError} </div>:\"\"); \r\nconst  signupLink = () => (<p className=\"my-1\">Don't have an account ? <NavLink exact to=\"/signup\"> Sign Up  </NavLink></p>)  \r\n\r\n  if( authError || ! auth.uid ) {\r\n  return (\r\n    <section className=\"container\">\r\n      <Jumbotron title=\"Sign in \" description=\"Sign in an existing account \" > <i className=\"fas fa-user\"></i> </Jumbotron>\r\n      {showError(authError)}\r\n      {signinForm()}\r\n      {signupLink()}     \r\n    </section>  \r\n  );\r\n\r\n  } else if(auth.uid){ \r\n    return <Redirect exact to=\"/dashboard\" />\r\n  }  \r\n \r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nconst mapStateToProps =  ( state ) => {\r\n    const auth =  state.firebase.auth;\r\n    return  { authError:state.auth.authError , auth };\r\n\r\n }\r\nexport default connect( mapStateToProps , mapDispatchToProps) (SignIn);","import React  from 'react';\r\nimport {connect } from 'react-redux';\r\n// import {compose} from 'redux';\r\n// import { firestoreConnect } from 'react-redux-firebase';\r\nimport {signUp } from '../../store/actions/authActions';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport Jumbotron from '../recources/UI/Jumbotron';\r\nimport { Formik, Field , Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nconst  SignUp  = ( props ) => {\r\n\r\n  const validate = () => Yup.object({\r\n    name:Yup.string()\r\n      .min(3 , 'name is too short should be 3 chars minimum. '),\r\n    email:Yup.string()\r\n     .email('Invalid Email Address')\r\n     .required('Please fill up email address field'),\r\n    password:Yup.string()\r\n     .required('Please provide a password') \r\n     .min(6, 'Password is too short - should be 6 chars minimum.'),\r\n    passwordConfirmation:Yup.string()\r\n     .oneOf([Yup.ref('password'), null], 'Passwords must match')     \r\n });\r\n\r\n   const signupForm = () =>  (\r\n    <Formik\r\n      //1- initial values\r\n      initialValues={{ name:'' ,  email:'' , password:'' , passwordConfirmation:'' }}\r\n      //2- validation [ I used Yup package ]\r\n      validationSchema={validate()}\r\n      //3-  add Submit handler method\r\n      onSubmit={ ( values ) => {\r\n           const { name , email , password } = values;\r\n           const user = {name , email , password}\r\n           console.log(user);\r\n           props.signUp(user);\r\n          //  props.history.push('/dashboard');\r\n         // console.log(props.auth);\r\n       }}\r\n      >\r\n     <Form className=\"form\">   \r\n        <Field className=\"form-control\"  name=\"name\" type=\"text\" placeholder=\"name\" />\r\n        <p  className=\"text-danger\"> <ErrorMessage name=\"name\"  /></p> \r\n      \r\n        <Field className=\"form-control\"  name=\"email\" type=\"email\"  placeholder=\"email\" />\r\n        <p  className=\"text-danger\"> <ErrorMessage name=\"email\"  /></p> \r\n       \r\n        <Field  className=\"form-control\"  name=\"password\" type=\"password\"  placeholder=\"password\" id=\"password\" />\r\n        <p className=\"text-danger\"> <ErrorMessage name=\"password\"   /> </p>\r\n        \r\n        <Field  className=\"form-control\"  name=\"passwordConfirmation\" type=\"password\" placeholder=\"confirm password\" />\r\n        <p className=\"text-danger\"> <ErrorMessage name=\"passwordConfirmation\"  /> </p>\r\n     \r\n        <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>          \r\n     </Form>\r\n    </Formik>\r\n   );\r\n\r\n  \r\nconst signinLink = ( ) => (<p className=\"my-1\"> Already have an account ? <NavLink to=\"/signin\"> sign in </NavLink></p>);\r\n \r\n   const { auth } = props;\r\n   console.log(auth);\r\n   if(auth.uid){\r\n     return <Redirect exact to=\"/dashboard\" />\r\n   } else {\r\n    return (\r\n      <section className=\"container\" >    \r\n        <Jumbotron title=\"Sign Up\" description=\"Create New  Account\" >  <i className=\"fas fa-user\"></i>  </Jumbotron>\r\n        {signupForm()}\r\n        {signinLink()}\r\n      </section>\r\n    );\r\n   }\r\n  \r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const auth = state.firebase.auth;\r\n    return {\r\n        authError:state.auth.error,\r\n        auth\r\n    }\r\n}\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        signUp:(newUser)=> dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps , mapDispatchToProps ) (SignUp);","import React  from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport {deleteEducation} from '../../store/actions/profilesActions';\r\nimport {toast} from 'react-toastify';\r\nimport {confirmAlert} from 'react-confirm-alert';\r\n\r\nconst  Educations = ({deleteEducation , educations}) => {\r\n       \r\n\r\n    const  handleDelete = (e , educationId ) => {\r\n                e.preventDefault();\r\n                confirmAlert({\r\n                title: 'Confirm to Delete',\r\n                message: 'Are you sure to delete Eduacation element ',\r\n                buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n                        deleteEducation(educationId);\r\n                        toast.success(`You have deleted education element successfully`,{\r\n                        position:toast.POSITION.BOTTOM_RIGHT,\r\n                        autoClose:8000\r\n                        });                            \r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => { return; }\r\n                }\r\n                ]\r\n            });\r\n            } \r\n\r\n        if(educations && educations.length > 0){\r\n          \r\n            return (\r\n                <div>\r\n                 <h2 className=\"my-2\">\r\n                  Education Credential\r\n                 </h2>\r\n                 <table className=\"table\">\r\n                 <thead>\r\n                     <tr>\r\n                     <th>School</th>\r\n                      <th>Field</th>\r\n                     <th className=\"hide-sm\">Degree</th>\r\n                     <th className=\"hide-sm\">Years</th>\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                    {\r\n                        educations.map(userEducation=>(\r\n                                <tr key={userEducation.id}>\r\n                                    <td> {userEducation.school} </td>\r\n                                    <td> {userEducation.field} </td>\r\n                                    <td> {userEducation.degree} </td>\r\n                                    {/* <td>  {userEducation.fromDate} / {userEducation.toDate} </td> */}\r\n                                    <td>\r\n                                        <button \r\n                                            className=\"btn btn-danger\" \r\n                                            onClick={(e)=> handleDelete( e , userEducation.id)} \r\n                                            >\r\n                                           delete\r\n                                        </button>         \r\n                                    </td>\r\n                                </tr>\r\n                        ))\r\n                    }\r\n                 </tbody>\r\n               </table>\r\n              </div>\r\n             );\r\n        }else {\r\n          return null;\r\n     }\r\n}\r\n\r\nconst  mapStateToProps = state => {\r\n    const userId=state.firebase.auth.uid;\r\n    let educations = state.firestore.ordered.educations;\r\n    const profile = state.firebase.profile;\r\n    const auth = state.firebase.auth;\r\n     if(educations){\r\n         educations = educations.filter(education=>education.userId === userId);\r\n         return{\r\n            auth,\r\n            profile,\r\n            educations\r\n       }\r\n    }else return{auth};      \r\n}\r\nconst mapDispatchToProps=( dispatch )=>{     \r\n    return {\r\n        deleteEducation:(educationId)=>dispatch(deleteEducation(educationId))\r\n    }\r\n}\r\n\r\nexport default \r\n        compose(\r\n            connect(mapStateToProps,mapDispatchToProps),\r\n            firestoreConnect([\r\n                {collection:'educations'}])\r\n                )\r\n        (Educations);","import {v4 as uuid4} from 'uuid';\r\nimport {  \r\n            EDIT_PROFILEIMAGE_SUCCESS , \r\n            EDIT_PROFILEIMAGE_ERROR , \r\n            EDIT_PROFILE_SUCCESS , \r\n            EDIT_PROFILE_ERROR , \r\n            ADD_EXPERIENCE_SUCCESS , \r\n            ADD_EXPERIENCE_ERROR , \r\n            DELETE_EXPERIENCE_SUCCESS ,\r\n            DELETE_EXPERIENCE_ERROR , \r\n            ADD_EDUCATION_SUCCESS , \r\n            ADD_EDUCATION_ERROR , \r\n            DELETE_EDUCATION_SUCCESS ,\r\n            DELETE_EDUCATION_ERROR \r\n        } \r\n        from './actions';\r\n\r\nexport const editProfileImage = ( profileImageUrl ) => {\r\n    return (dispatch,getState,{ getFirebase , getFirestore})=>{\r\n        console.log('editprofile image from actions');\r\n        const firestore = getFirestore();\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('users').doc(authorId).update({\r\n            imageUrl:profileImageUrl\r\n        }).then(()=>{\r\n            dispatch({type:EDIT_PROFILEIMAGE_SUCCESS});\r\n        }).catch(err=>{\r\n           dispatch( {type:EDIT_PROFILEIMAGE_ERROR, peyload: err.message});\r\n        });\r\n    }\r\n}\r\n\r\nexport const editProfile = (newProfile) => {\r\n    return (dispatch,getState,{ getFirebase , getFirestore})=>{\r\n            console.log('edit profile from actions');\r\n            const firestore = getFirestore();\r\n            const profile = getState().firebase.profile;\r\n            console.log(newProfile);\r\n                    \r\n            const authorId  = getState().firebase.auth.uid;\r\n            console.log(authorId);\r\n            firestore.collection('profiles').doc(authorId).set({\r\n                ...newProfile,\r\n                userHandle:profile.handle,      \r\n                userId:authorId\r\n            }).then(()=>{\r\n                 dispatch({type:EDIT_PROFILE_SUCCESS});\r\n            }).catch(err=> dispatch({type:EDIT_PROFILE_ERROR, payload: err.message}));\r\n    }\r\n}\r\n\r\nexport const addExperience = ( experience ) => { \r\n       return (dispatch , getState , { getFirebase  ,  getFirestore})=>{\r\n             //  console.log(experience);\r\n             const firestore = getFirestore();\r\n       \r\n             const authorId  = getState().firebase.auth.uid;\r\n   \r\n             let experienceId = uuid4();\r\n   \r\n             firestore.collection('experiences').doc(experienceId).set({\r\n                       ...experience,\r\n                       id:experienceId,\r\n                       userId:authorId\r\n                    }).then(()=>{\r\n                        dispatch({type:ADD_EXPERIENCE_SUCCESS});\r\n                    }).catch(err=>{\r\n                        dispatch({type:ADD_EXPERIENCE_ERROR, payload:err.message});\r\n                    });\r\n                    \r\n    }\r\n}\r\n\r\n\r\nexport const deleteExperience=(experienceId)=>{\r\n    console.log('from actions');\r\n    console.log(experienceId);\r\n   return (dispatch,getState,{getFirebase,getFirestore}) =>{\r\n        const firestore = getFirestore();\r\n        firestore.collection('experiences').doc(experienceId).delete()\r\n           .then(()=>{\r\n                dispatch({type:DELETE_EXPERIENCE_SUCCESS});\r\n            }).catch(err=>{\r\n                dispatch({type:DELETE_EXPERIENCE_ERROR,payload:err.message});\r\n            });                \r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addEducation = (education)=>{\r\n    return (dispatch,getState,{getFirebase,getFirestore}) =>{\r\n            \r\n             //  console.log(experience);\r\n          const firestore = getFirestore();\r\n       \r\n          const authorId  = getState().firebase.auth.uid;\r\n\r\n          let educationId = uuid4();\r\n\r\n          firestore.collection('educations').doc(educationId).set({\r\n                    ...education,\r\n                    id:educationId,\r\n                    userId:authorId\r\n                 }).then(()=>{\r\n                     dispatch({type:ADD_EDUCATION_SUCCESS});\r\n                 }).catch(err=>{\r\n                     dispatch({type:ADD_EDUCATION_ERROR , peyload: err.message });\r\n                 });\r\n  }\r\n}\r\n\r\nexport const deleteEducation=(educationId)=>{\r\n    console.log('from actions');\r\n    console.log(educationId);\r\n   return (dispatch,getState,{getFirebase,getFirestore}) =>{\r\n        const firestore = getFirestore();\r\n        firestore.collection('educations').doc(educationId).delete()\r\n           .then(()=>{\r\n                dispatch({type:DELETE_EDUCATION_SUCCESS});\r\n            }).catch(err=>{\r\n                dispatch({type:DELETE_EDUCATION_ERROR , payload: err.message });\r\n            });                \r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport {deleteExperience} from '../../store/actions/profilesActions';\r\nimport {confirmAlert} from 'react-confirm-alert';\r\nimport { toast } from 'react-toastify';\r\n// import {formatDate} from '../recources/UI/helpers';\r\n\r\n\r\nconst  Experiences = ( {deleteExperience , experiences } ) =>{\r\n\r\n     \r\n    const  handleDelete = (e , experienceId ) => {\r\n        e.preventDefault();\r\n        confirmAlert({\r\n         title: 'Confirm to Delete',\r\n         message: 'Are you sure to delete exprience element ',\r\n         buttons: [\r\n           {\r\n             label: 'Yes',\r\n             onClick: () => {\r\n                deleteExperience(experienceId);\r\n                toast.success(`You have deleted exprience element successfully`,{\r\n                  position:toast.POSITION.BOTTOM_RIGHT,\r\n                  autoClose:8000\r\n                });                            \r\n             }\r\n           },\r\n           {\r\n             label: 'No',\r\n             onClick: () => { return; }\r\n           }\r\n         ]\r\n       });\r\n     } \r\n       \r\n\r\n     \r\n\r\n\r\n        if(experiences && experiences.length>0){\r\n          \r\n            return (\r\n                <div>\r\n \r\n               \r\n                 <h2 className=\"my-2\">\r\n                    Experience Credential\r\n                 </h2>\r\n                 <table className=\"table\">\r\n                 <thead>\r\n                     <tr>\r\n                        <th>company</th>\r\n                        <th className=\"hide-sm\">jobTitle</th>\r\n                        <th className=\"hide-sm\">location</th>\r\n                        {/* <th className=\"hide-sm\">duration</th> */}\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                    {\r\n                        experiences.map(userExperience=>{\r\n                            return(\r\n                                <tr key={userExperience.id}>\r\n                                    <td> {userExperience.company} </td>\r\n                                    <td> {userExperience.jobTitle} </td>\r\n                                    <td> {userExperience.location} </td>\r\n\r\n                                    {/* <td>   { formatDate() JSON.stringify(createdAt) }/  {formatDate(userExperience?.createdAt?.toDate())} </td> */}\r\n                                    <td>\r\n                                        <button \r\n                                            className=\"btn btn-danger\" \r\n                                            onClick={(e)=>handleDelete(e,userExperience.id)} \r\n                                            >\r\n                                           delete\r\n                                        </button>\r\n                                            \r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }\r\n                 </tbody>\r\n               </table>\r\n              </div>\r\n         \r\n              );\r\n        }else{\r\n            return null;\r\n        }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    const userId=state.firebase.auth.uid;\r\n    let experiences=state.firestore.ordered.experiences;\r\n    const auth = state.firebase.auth;\r\n    const profile=state.firebase.profile;\r\n  \r\n      if(experiences){\r\n          experiences = experiences.filter(experience => experience.userId===userId);\r\n        return{\r\n            auth,\r\n            profile,\r\n            experiences\r\n       }  \r\n      } else return {};\r\n      \r\n}\r\nconst mapDispatchToProps=(dispatch,ownProps)=>{\r\n  //  console.log(ownProps);\r\n    return {\r\n        deleteExperience:(experienceId)=>dispatch(deleteExperience(experienceId))\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default \r\ncompose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([\r\n         {\r\n            collection:'experiences',         \r\n         }\r\n        ]))\r\n(Experiences);","import React ,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport Educations from './Educations';\r\nimport Experiences from './Experiences';\r\nimport {deleteAccount} from '../../store/actions/authActions';\r\nconst  AuthUserDetails = ({ deleteAccount }) => {\r\n\r\n   const [showConfirm , setShowConfirm] = useState(false);\r\n   const  handleDelete= e => {\r\n        e.preventDefault();\r\n       setShowConfirm(true);       \r\n    }\r\n\r\n   const  handleConfirmDelete = e=>{\r\n      deleteAccount(this.state.deleteElementId);\r\n       e.preventDefault();\r\n       setShowConfirm(false);\r\n    }\r\n\r\n   const  handleCancelDelete= e => {\r\n        e.preventDefault();\r\n        setShowConfirm(false);\r\n    }\r\n\r\n  const confirmModal = ( showConfirmModal ) => ( \r\n    <div  className={showConfirmModal ? \"modal modal-show\" : \"modal\"  } >\r\n        <p className=\"modal-text text-primary\"> Are you sure you want to delete  your account ? </p>\r\n        <p className=\"modal-actions text-center\"> \r\n            <button \r\n                className=\"btn btn-primary\"\r\n                onClick={ (e) => handleCancelDelete(e)}> cancel </button>   \r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick = {(e)=>handleConfirmDelete(e)}>  yes </button>\r\n        </p> \r\n    </div>\r\n  )\r\n\r\n  const deleteAccountButton = () => (\r\n    <div className=\"my-2\">\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={(e) => handleDelete( e ) }\r\n                >\r\n                <i className=\"fas fa-user-minus\">Delete My Account</i>\r\n            </button>\r\n     </div>\r\n     )\r\n\r\n        return  (\r\n            <div>\r\n                 <Experiences />           \r\n                 <Educations/>\r\n                 {confirmModal(showConfirm)}\r\n                 {deleteAccountButton()}\r\n            </div>\r\n         );\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    \r\n    const profile = state.firebase.profile;\r\n    return {\r\n      \r\n       profile    \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch )=>{\r\n    return {\r\n        deleteAccount: () => dispatch(deleteAccount()) \r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([{collection:'profiles'}])\r\n  )\r\n  (AuthUserDetails);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport AuthUserDetails from './AuthUserDetails';\r\nimport Jumbotron from '../recources/UI/Jumbotron';\r\nconst  Dashboard = ({auth , profile}) => {\r\n          //console.log(profile.imageUrl);\r\n          return (\r\n                <section className=\"container\"> \r\n                   <Jumbotron title=\"Dashboard\" description=\"welcome to dashboard\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                   </Jumbotron>\r\n                       {/* user actions */}\r\n                       <div className=\"row py-1\">\r\n                         <div className=\"col-sm-12 col-md-3\">   \r\n                              { \r\n                              profile.imageUrl!== undefined ?\r\n                              <img  className=\"profile-img img-rounded\"  src={profile.imageUrl} alt=\"user\"/>:\r\n                              <img  className=\"profile-img img-rounded\" src={process.env.PUBLIC_URL+'/imgs/default-user-img.jpeg'}  alt=\"user\" />\r\n                              }\r\n                         </div>\r\n                         <div className=\"col-sm-12 col-md-9 mt-3 dash-button\">\r\n                                   <NavLink to={\"/editProfile/\"+auth.uid} className=\"btn\">\r\n                                        <i className=\"fas fa-user-circle text-primary\"></i>\r\n                                        <span>  Edit Profile  </span>\r\n                                   </NavLink>\r\n                                   <NavLink exact to={\"/editProfileImage/\"+auth.uid} className=\"btn\">\r\n                                        <i className=\"fas fa-camera-retro\"></i>\r\n                                        <span>  Edit Profile Image </span>\r\n                                   </NavLink>\r\n                                   <NavLink to={\"/addExperience/\"+auth.uid} className=\"btn\">\r\n                                        <i className=\"fab fa-black-tie text-primary mr-2\"></i>\r\n                                        <span> Add Exprerience  </span>\r\n                                   </NavLink>\r\n                                   <NavLink to={\"/addEducation/\"+auth.uid } className=\"btn\">\r\n                                        <i className=\"fas fa-graduation-cap text-primary mr-2\"></i>\r\n                                        <span> Add Eduction  </span>\r\n                                   </NavLink>\r\n                                   <NavLink className=\"btn\" exact to={\"/developerPosts/\"+auth.uid} >\r\n                                        <i className=\"fas fa-comment-alt text-primary mr-2\"></i>\r\n                                        <span>  my Posts </span> \r\n                                   </NavLink>                             \r\n                         </div>\r\n                       </div>\r\n                       <AuthUserDetails  />\r\n               </section>\r\n        ); \r\n     \r\n        \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   const   auth   = state.firebase.auth;\r\n   const   profile =state.firebase.profile;\r\n     return {\r\n        auth,\r\n        profile\r\n     }\r\n}\r\n\r\n\r\nexport default compose(\r\n     connect(mapStateToProps,null),\r\n     firestoreConnect([{collection:'profiles'}])\r\n   )\r\n   (Dashboard);","import React , { Fragment } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addComment} from '../../../store/actions/commentsActions';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AddComment = (  { addComment , postId , auth } ) => {\r\n        const initialValues = { comment:'' };\r\n   \r\n        const validate = (  ) => Yup.object({\r\n            comment: Yup.string()\r\n             .min(3,'minimum comment length is 3 characters' )\r\n             .required('Required'),\r\n        });\r\n         \r\n        const AddCommentForm = ( ) => {\r\n          return (\r\n              <Formik \r\n                  initialValues={ initialValues }\r\n                  validationSchema={validate()}\r\n                  onSubmit = { (values , { setSubmitting }  )  => {\r\n                    setTimeout(() => {\r\n                      console.log('from submit');\r\n                       const userId = auth.uid;\r\n                       let comment = {body:values.comment , postId , userId };\r\n                       addComment(comment);            \r\n                       values.comment = '';\r\n                       setSubmitting(false);\r\n                       toast.success(`You have commented on post successfully `,{\r\n                         position:toast.POSITION.BOTTOM_RIGHT,\r\n                         autoClose:8000\r\n                       });\r\n                    },400);\r\n                    }}\r\n                  >\r\n                <Form className=\"form my-1\">   \r\n                  <Field        \r\n                        name=\"comment\"  \r\n                        as=\"textarea\"\r\n                        rows=\"4\"\r\n                        placeholder=\"append comment on post ....\"    \r\n                        id=\"comment\"\r\n                    />\r\n                    <p  className=\"text-danger\"> <ErrorMessage name=\"comment\" /></p>              \r\n                    <button type=\"submit\" className=\"btn btn-dark my-1\" >Comment</button>  \r\n                </Form>   \r\n              </Formik>\r\n          );\r\n        } \r\n    return (\r\n        <Fragment> \r\n            {AddCommentForm()}\r\n        </Fragment>                \r\n      );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        addComment:(comment)=>dispatch(addComment(comment))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (AddComment);\r\n\r\n","import {v4 as uuid4} from 'uuid'; \r\nimport {\r\n      ADD_COMMENT_SUCCESS ,\r\n      ADD_COMMENT_ERROR,\r\n      DELETE_COMMENT_SUCCESS , \r\n      DELETE_COMMENT_ERROR \r\n    }  from './actions';\r\n\r\n\r\nexport const addComment = (comment) =>{\r\n   //  console.log(comment);\r\n    return (dispatch, getState , {getFirebase,getFirestore})=>{\r\n\r\n        let   commentId = uuid4(); \r\n        const firestore = getFirestore();\r\n         console.log(commentId);\r\n         console.log(comment);\r\n        firestore.collection('comments').doc(commentId).set({\r\n            ...comment,\r\n            commentId:commentId,\r\n            createdAt:new Date()     \r\n        }).then(()=>dispatch({type:ADD_COMMENT_SUCCESS}))\r\n          .catch(err=>dispatch({type:ADD_COMMENT_ERROR,payload:err.message}));\r\n\r\n\r\n         let notificationId = uuid4(); \r\n\r\n         // notifiedId \r\n        let   posts =  getState().firestore.data.posts;\r\n        let   post  = posts ? posts[comment.postId]:undefined;\r\n      \r\n        if(post){\r\n            firestore.collection('notifications').doc(notificationId).set({\r\n                notificationId,\r\n                notifierId:comment.userId,\r\n                notifiableId:comment.postId,\r\n                notifiableLink:\"/post/\"+comment.postId,\r\n                notifiedId:post.userId,            \r\n                createdAt:new Date(),\r\n                read:false,\r\n                body:'someone commented on on your post'\r\n          });\r\n        }\r\n       \r\n\r\n    }\r\n}\r\n\r\nexport const deleteComment= (commentId)=>{\r\n    return (dispatch,getState, {getFirebase, getFirestore } )=>{\r\n       const firestore= getFirestore();\r\n       firestore.collection('comments').doc(commentId).delete()\r\n       .then(()=>dispatch({type:DELETE_COMMENT_SUCCESS}))\r\n       .catch(err=>dispatch({type:DELETE_COMMENT_ERROR , payload: err.message }))\r\n\r\n    }\r\n}\r\n\r\n","import {v4 as uuid4} from 'uuid';\r\nimport {  \r\n           ADD_REACT_SUCCESS,\r\n           ADD_REACT_ERROR , \r\n           DELETE_REACT_SUCCESS ,\r\n           DELETE_REACT_ERROR\r\n } from './actions';\r\n\r\nexport const addReact = ( react ) => {\r\n   // console.log(react);\r\n    return (dispatch, getState , { getFirebase , getFirestore})=>{\r\n\r\n        // let   commentId = uuid4(); \r\n        const firestore = getFirestore();\r\n        const posts = getState().firestore.ordered.posts;\r\n        const comments= getState().firestore.ordered.comments;\r\n        const oldReacts = getState().firestore.ordered.reacts;\r\n        // console.log(oldReacts);\r\n         //console.log(react); \r\n\r\n         let oldReact = oldReacts.filter( oldReact => {\r\n             if( oldReact.reactorId === react.reactorId  && oldReact.reactableId === react.reactableId  ) return true;\r\n             else return false; \r\n         });\r\n              \r\n           \r\n          //  console.log(oldReact);\r\n            if(oldReact.length > 0){ // there is a react already exists belongs to this user \r\n                let oldReactObj = oldReact[0];\r\n               // console.log(oldReactObj);\r\n                if(oldReactObj.reactType === react.reactType){\r\n                    // toggle React delete there is a record\r\n                    firestore.collection('reacts').doc(oldReactObj.reactId).delete()\r\n                              .then(()=>dispatch({type:DELETE_REACT_SUCCESS}))\r\n                              .catch(err=>dispatch({type:DELETE_REACT_ERROR,payload:err.message}));\r\n\r\n                }else{\r\n                    firestore.collection('reacts').doc(oldReactObj.reactId).set({\r\n                        ...oldReactObj,\r\n                        reactId:oldReactObj.reactId, \r\n                        reactType:react.reactType,\r\n                        createdAt:new Date()     \r\n    \r\n                    }).then(()=>dispatch({type:ADD_REACT_SUCCESS}))\r\n                    .catch(err=>dispatch({type:ADD_REACT_ERROR , payload:err.message}));\r\n                     notifyReact(react, posts, comments,firestore);\r\n                }\r\n            \r\n            }else{\r\n                // there is no reacts already in the \r\n                let reactId = uuid4();\r\n                console.log('new record');\r\n                firestore.collection('reacts').doc(reactId).set({\r\n                    ...react,\r\n                    reactId,\r\n                    createdAt:new Date()     \r\n                }).then(()=>dispatch({type:ADD_REACT_SUCCESS}))\r\n                .catch(err=>dispatch({type:ADD_REACT_ERROR,payload:err.message}));\r\n                \r\n                notifyReact(react,posts,comments,firestore);\r\n            }        \r\n    }\r\n}\r\n\r\nconst notifyReact=(react, posts , comments, firestore)=>{\r\n   // console.log(posts);\r\n    //console.log(comments);\r\n    // check if the reacted is post or comment \r\n    const notificationId = uuid4();\r\n    let notifiable;\r\n    let notificationBody;\r\n\r\n     if(posts.find(post => post.postId === react.reactableId)){\r\n           notifiable = posts.find(post => post.postId === react.reactableId);\r\n           notificationBody = \"someone reacted on your post\";\r\n           //console.log(react);    \r\n         //  console.log(notifiable);     \r\n     }else{\r\n        if(comments.find(comment => comment.commentId === react.reactableId)){\r\n            //console.log('comment');\r\n            notifiable = comments.find(comment => comment.commentId === react.reactableId);\r\n           // notifiable.id = notifiable.postId;\r\n            notificationBody = \"someone reacted on your comment\";              \r\n     }\r\n  }\r\n\r\n    firestore.collection('notifications').doc(notificationId).set({\r\n        notificationId:notificationId,\r\n        body:notificationBody,\r\n        createdAt:new Date(),\r\n        notifiableLink:'/post/'+notifiable.postId, //link to post \r\n        notifiableId:notifiable.postId, //post id \r\n        notifiedId:react.reactedId,\r\n        notifierId:react.reactorId,\r\n        read:false\r\n    }); \r\n\r\n   // console.log(react);\r\n}\r\n\r\n","import React  from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addReact} from '../../store/actions/reactsActions';\r\nimport {compose} from 'redux';\r\nimport { Fragment } from 'react';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst  ReactsBar = ({addReact  , auth ,  reactableId , reactedId , reacts  , reactableType  }) => {\r\n   \r\n    const   handleReact = ( \r\n        e,\r\n        reactableId,\r\n        reactorId,\r\n        reactedId,\r\n        reactType\r\n        ) => { \r\n\r\n        e.preventDefault();\r\n        \r\n        let react = {\r\n            reactableId,\r\n            reactType,\r\n            reactedId,\r\n            reactorId\r\n        }\r\n      \r\n        addReact(react);\r\n      \r\n        toast.success( ` You have ${react.reactType}d  ${reactableType} successfully` ,{\r\n            position:toast.POSITION.BOTTOM_RIGHT,\r\n            autoClose:8000\r\n        });\r\n     }   \r\n         const reactorId = auth.uid;\r\n         let likeReacts = reacts.filter(react=>react.reactType==='like');\r\n         let dislikeReacts= reacts.filter(react=>react.reactType==='dislike');\r\n         let loveReacts= reacts.filter(react=>react.reactType==='love');\r\n        \r\n        return(\r\n            <Fragment>\r\n                \r\n                    <span className=\"reacts-bar\">\r\n                        <button \r\n                            className={likeReacts.find(react => react.reactorId === reactorId ) ? \"btn  btn-primary\" : \"btn\" }\r\n                            onClick={ e => handleReact(e,reactableId,reactorId,reactedId,'like')}\r\n                        >\r\n                        <i className=\"fas fa-thumbs-up\"></i> <span >  {likeReacts.length}   </span>\r\n                        </button>\r\n                        <button \r\n                            className={dislikeReacts.find(react=>react.reactorId === reactorId)?\"btn btn-primary\":\"btn\"}\r\n                            onClick={ (e) => handleReact(e,reactableId,reactorId,reactedId,'dislike')}\r\n                        >\r\n                        <i className=\"fas fa-thumbs-down\"></i> <span>  {dislikeReacts.length} </span>\r\n                        </button>\r\n                        <button \r\n                            className={loveReacts.find(react=>react.reactorId === reactorId)?\"btn btn-primary\":\"btn\"}\r\n                            onClick={ (e) => handleReact(e,reactableId,reactorId,reactedId,'love')}\r\n                        >\r\n                            <i className=\"fas fa-heart\"></i> <span>  {loveReacts.length}  </span>\r\n                        </button>\r\n                </span>\r\n            </Fragment>\r\n            \r\n     );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch ) => {\r\n     return {\r\n         addReact: (react) => dispatch(addReact(react))\r\n     }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,mapDispatchToProps))(ReactsBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactsBar from './../ReactsBar';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { deleteComment}  from '../../../store/actions/commentsActions';\r\nimport { Loading} from '../../recources/UI/helpers';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { toast } from 'react-toastify';\r\nimport { formatDate } from '../../recources/UI/helpers';\r\n\r\nconst  Comment  = ( props ) => {\r\n    const { deleteComment , comment , auth } = props;\r\n\r\n    const  handleDelete = (e , postId ) => {\r\n      e.preventDefault();\r\n      confirmAlert({\r\n       title: 'Confirm to Delete',\r\n       message: 'Are you sure to delete Comment',\r\n       buttons: [\r\n         {\r\n           label: 'Yes',\r\n           onClick: () => {\r\n              deleteComment(postId);\r\n              toast.success(`You have deleted comment successfully`,{\r\n                position:toast.POSITION.BOTTOM_RIGHT,\r\n                autoClose:8000\r\n              });                            \r\n           }\r\n         },\r\n         {\r\n           label: 'No',\r\n           onClick: () => { return; }\r\n         }\r\n       ]\r\n     });\r\n   } \r\n   \r\n      if(! ( comment && comment.reacts && comment.user)){\r\n             Loading('Loading comments .....') \r\n         }\r\n         else{\r\n           //  showReadableTime(comment.createdAt);\r\n            return (               \r\n                <div className=\"comment\">\r\n                   <div className=\"comment-info\">\r\n                      <div className=\"user\">            \r\n                            <NavLink exact to={\"/profile/\"+comment.user.userId}>\r\n                                <img\r\n                                 className=\"round-img user-img\"\r\n                                 src={comment.user.imageUrl?comment.user.imageUrl:\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200\"}\r\n                                 alt={comment.user.handle?comment.user.handle:'user'}\r\n                                />\r\n                                <h4>  {comment.user.handle} </h4>\r\n                            </NavLink>\r\n                        </div>\r\n                        <p  className=\"body\">\r\n                            <span> {comment.body} </span>\r\n                              <br/>\r\n                              <span className=\"comment-reacts\" > \r\n                                <br/><br/> \r\n                                <ReactsBar  \r\n                                  reacts={comment.reacts}  \r\n                                  reactableId={comment.commentId}\r\n                                  reactedId={comment.user.userId} \r\n                                  reactorId={auth.uid}   \r\n                                  reactableType={\"comment\"} \r\n                                />  \r\n                                { \r\n                                        auth.uid === comment.userId?  \r\n                                        <button className=\"btn\"\r\n                                        onClick={ e => handleDelete(e , comment.commentId)}\r\n                                        >\r\n                                          <i className=\"fas fa-trash text-danger\">  </i>\r\n                                        </button>:null\r\n                                 }\r\n                                <span className=\"text-primary\"> {formatDate(comment.createdAt.toDate())}  </span>\r\n                           </span>   \r\n                          </p>\r\n                    </div>\r\n                     \r\n                 </div>\r\n             );          \r\n }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        deleteComment: (commentId)=>dispatch(deleteComment(commentId)) \r\n    }\r\n}\r\n\r\n\r\nexport default  connect( null, mapDispatchToProps )  (Comment);\r\n\r\n","import React from 'react';\r\nimport AddComment from './AddComment';\r\nimport Comment from './Comment';\r\n\r\nconst Comments  = (props) => {\r\n\r\n        const { postId , comments  , auth } = props;\r\n        //console.log(postId);\r\n      //  console.log(comments);\r\n        return (\r\n              <div className=\"post-interaction\">\r\n                  <AddComment postId={postId}  auth={auth}  /> \r\n                  <div className=\"comments\">\r\n                      {comments && comments.map(comment=><Comment key={comment.commentId} comment={comment} auth={auth}   />) }\r\n                  </div>\r\n                </div>\r\n             );\r\n}\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport Comments from './comments/Comments';\r\nimport ReactsBar from './ReactsBar';\r\nimport { Loading } from '../recources/UI/helpers';\r\n\r\nimport {formatDate} from '../recources/UI/helpers';\r\n\r\nconst PostDetails = ( props ) => {\r\n\r\n                    let { post  , auth } = props;                   \r\n                    \r\n                       \r\n                      if(!(post && post.user && post.comments  && post.reacts) ){\r\n                       return  Loading('Loading Post .......');\r\n                      }else{\r\n                          let {body , postId ,createdAt , user , comments , reacts} = post;\r\n                           return (\r\n                                <section className=\"container\">\r\n                                  <NavLink exact to=\"/posts\" className=\"btn\">Back To Posts</NavLink>\r\n                                  <div className=\"post\">\r\n                                    <div className=\"post-info\">\r\n                                        <div className=\"user\">\r\n                                          <NavLink exact to={\"/profile/\"+user.userId}>\r\n                                            <img\r\n                                              className=\"img-rounded\"\r\n                                              src={user.imageUrl}\r\n                                              alt={user.handle}\r\n                                            />\r\n                                            <h4 className=\"user-name\"> {user.handle} </h4>\r\n                                          </NavLink>                    \r\n                                        </div>\r\n                                        <div className=\"content\">\r\n                                          <h2 className=\"title\"> {body.slice(0,20)}..  </h2>\r\n                                          <p className=\"body\"> \r\n                                            {body}\r\n                                          </p>\r\n                                          <h4>posted at : <span className=\"text-primary\">  {formatDate(createdAt.toDate())}</span>  </h4>\r\n                                        </div>  \r\n                                    </div> \r\n                                  </div>                        \r\n                                  <div className=\"post-reacts\">\r\n                                   <ReactsBar  reacts={reacts} reactableType={\"post\"}  reactableId={postId} reactedId={user.userId} reactorId={auth.uid}  />\r\n                                      <button  className=\"btn\">\r\n                                          <i className=\"fas fa-comments\"></i>  <span> {comments.length} </span>\r\n                                      </button>  \r\n                                  </div>\r\n                                  <Comments postId={postId} comments={comments} auth={auth} />\r\n                             </section> \r\n                          ); \r\n            }   \r\n}\r\n\r\nconst mapStateToProps =(state,ownProps)=> {\r\n    let  auth = state.firebase.auth;\r\n    let  postId=ownProps.match.params.id;\r\n    let  posts =state.firestore.data.posts;\r\n    let  users = state.firestore.data.users;\r\n    let  comments= state.firestore.ordered.comments;\r\n    let  reacts=state.firestore.ordered.reacts;\r\n //   console.log(postId);\r\n\r\n\r\n    if( posts &&  users  && comments && reacts ){\r\n        let post = posts[postId];\r\n        console.log(posts);\r\n        console.log(postId);\r\n        let user = users?users[post.userId]:undefined;      \r\n        //console.log('data loadded Ok:200 ');\r\n        const getComments =  post  => state.firestore.ordered.comments && \r\n        state.firestore.ordered.comments\r\n            .filter(comment => comment.postId === postId) \r\n            .map( comment => {   \r\n              let commentReacts = reacts.filter(react => react.reactableId === comment.commentId);   \r\n              return {\r\n                  ...comment,    \r\n                  reacts:commentReacts,                             \r\n                  user:users[comment.userId] //add user object that is the owner of this comment\r\n                }\r\n              });\r\n\r\n        comments = getComments();\r\n        reacts = reacts.filter(react => react.reactableId === postId); \r\n        let   newPost = {...post,postId,user,comments,reacts};\r\n        //console.log(post);\r\n            return {\r\n                auth,\r\n                post:newPost\r\n            };\r\n\r\n        } else{\r\n          return {\r\n            auth\r\n          };\r\n        } \r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,null),\r\n    firestoreConnect([\r\n        {collection:'profiles'},\r\n        {collection:'users'},\r\n        {collection:'posts'},\r\n        {collection:'comments'},\r\n        {collection:'reacts'} \r\n    ])\r\n  )(PostDetails);","import React   from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addPost} from '../../store/actions/postsActions';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\n\r\n const AddPost = ( { addPost } ) => {\r\n   const AddPostForm = ( ) => {   \r\n      return (\r\n        <Formik\r\n          initialValues={{ post: ''}}\r\n          validationSchema={Yup.object({\r\n            post: Yup.string()\r\n              .min(5, 'Must be 5 characters or more')\r\n              .required('Required field')\r\n          })}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {    \r\n              addPost(values.post);\r\n              values.post='';\r\n              setSubmitting(false);\r\n              toast.success(`You have added post successfully` , {  \r\n                position:toast.POSITION.BOTTOM_RIGHT,\r\n                autoClose:8000\r\n              });\r\n            }, 400);\r\n          }}\r\n        >\r\n          <Form>\r\n           <div className=\"form-group\">\r\n              <Field\r\n                    name=\"post\" \r\n                    as=\"textarea\"\r\n                    placeholder=\"Add post\" \r\n                    className=\"form-control\"\r\n                  \r\n                    />\r\n              <p className=\"text-danger\">       \r\n                  <ErrorMessage name=\"post\"  />\r\n              </p>\r\n              <button type=\"submit\" className=\"btn btn-submit\">Add Post</button>\r\n           </div>\r\n          </Form>\r\n        </Formik>\r\n      );\r\n    };\r\n\r\n   return (\r\n     <div>\r\n         {AddPostForm()}\r\n     </div>\r\n   );\r\n }\r\n\r\nconst mapDispatchToProps =  dispatch => {\r\n    return {\r\n         addPost: post => dispatch(addPost(post))\r\n    }\r\n}\r\n\r\nexport default connect( null ,mapDispatchToProps) (AddPost);","import {v4 as uuid4} from 'uuid';\r\n \r\nimport {  \r\n        FETCH_POSTS_REQUEST,\r\n        FETCH_POSTS_SUCCESS,\r\n        FETCH_POSTS_ERROR,\r\n        ADD_POST_SUCCESS ,\r\n        ADD_POST_ERROR ,\r\n        DELETE_POST_SUCCESS , \r\n        DELETE_POST_ERROR, \r\n        EDIT_POST_SUCCESS ,\r\n        EDIT_POST_ERROR\r\n} from './actions';\r\n\r\n          //  dispatch(fetchPostsSuccess(posts));\r\n\r\n// let users = {};\r\n// let posts = [];\r\n// let comments = [];\r\n// let reacts = [];\r\n// const getPostsWithData = ( posts , users , comments  ) => {\r\n//         console.log(posts);\r\n//         console.log(users);\r\n//         console.log(comments);\r\n//         return posts.map( post => {\r\n//                   console.log(post);                    \r\n//                   return {\r\n//                     body:post.body,\r\n//                     createdAt:post.createdAt,\r\n//                     postId:post.postId,\r\n//                     user:users[post.userId],\r\n//                     comments:getCommentsOnPost(users , comments , post),\r\n//                     reacts: getReacts(post)\r\n//                 }\r\n//         }); \r\n// }\r\n// const getCommentsOnPost = ( users ,comments , post ) => {\r\n//        return    comments.filter(comment => comment.postId === post.postId) \r\n//                          .map( comment => {   \r\n//                               return {\r\n//                                 ...comment,                                 \r\n//                                 user:users[comment.userId] //add user object that is the owner of this comment\r\n//                               }\r\n//                        });\r\n// }\r\n\r\n// const getReacts = ( reacts  , reactable ) => {\r\n//  return  reacts.filter( react => react.reactableId === reactable.id); \r\n// }\r\n \r\n          \r\n// export const fetchPosts = (  ) => {\r\n//     return (dispatch , getState , {   getFirestore  } ) => {\r\n//         dispatch(fetchPostsRequest());\r\n   \r\n//          const firestore = getFirestore();\r\n      \r\n//          firestore.collection('users')\r\n//           .get()\r\n//           .then( collection => {\r\n//               collection.forEach(item => {\r\n//               users[item.id] =  item.data()\r\n//               })\r\n//           })\r\n//         .then( ( ) => {\r\n//             firestore.collection('posts')\r\n//             .get()\r\n//             .then( querySnapshot => {\r\n//               querySnapshot.docs.map( doc => {\r\n//                 posts.push(doc.data());\r\n//                 return;\r\n//                })\r\n//             })\r\n//         })\r\n//         .then(( )=>{\r\n//           firestore.collection('comments')\r\n//           .get()\r\n//           .then( querySnapshot => {\r\n//             querySnapshot.docs.map( doc => {\r\n//               comments.push(doc.data());\r\n//               return;\r\n//              })\r\n//           })\r\n//         })\r\n//         .then(( ) => {\r\n//           firestore.collection('reacts')\r\n//           .get()\r\n//           .then( querySnapshot => {\r\n//             querySnapshot.docs.map( doc => {\r\n//               reacts.push(doc.data());\r\n//              })\r\n//           })\r\n//         })\r\n//         .then(()=>{\r\n//           // all data are available\r\n//            console.log(posts);\r\n//            console.log(users);           \r\n//            console.log(comments);\r\n//            console.log(reacts);\r\n\r\n         \r\n  \r\n     \r\n\r\n\r\n//             posts = getPostsWithData();\r\n//             console.log(posts);\r\n//           // end of getting posts that each post contains its own comments and reacts\r\n//            //getPostsWithData( posts , users, comments);\r\n//           // console.log(postsWithData);\r\n//         })\r\n//         .catch(error => {\r\n//           // error.message is the error message\r\n//           dispatch(fetchPostsFailure(error.message))\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\nexport const fetchPostsRequest = () => {\r\n    return {\r\n      type: FETCH_POSTS_REQUEST\r\n    }\r\n  }\r\n  \r\n  export const fetchPostsSuccess = posts => {\r\n    return {\r\n      type: FETCH_POSTS_SUCCESS,\r\n      payload: posts\r\n    }\r\n  }\r\n  \r\n  export const fetchPostsFailure = error => {\r\n    return {\r\n      type: FETCH_POSTS_ERROR,\r\n      payload: error\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addPost = post => {\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        console.log('from actions',post);\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId= getState().firebase.auth.uid;\r\n        let postId = uuid4(); \r\n        firestore\r\n        .collection('posts')\r\n        .doc(postId).set({\r\n                body:post,\r\n                postId:postId,\r\n                commentCount:0,\r\n                likeCount:0,\r\n                userHandle:profile.handle,\r\n                userId:authorId,\r\n                createdAt: new Date()\r\n            }).then(()=>{\r\n            dispatch({type:ADD_POST_SUCCESS})\r\n        }).catch((err)=>{\r\n            dispatch({type:ADD_POST_ERROR,payload:err.message})\r\n        });\r\n\r\n       \r\n    }\r\n} \r\n\r\n\r\nexport const deletePost= (postId)=>{\r\n    console.log('delete Post actions');\r\n    return (dispatch,getState,  {getFirebase, getFirestore } )=>{\r\n        const firestore= getFirestore();\r\n\r\n        firestore.collection('posts').doc(postId).delete()\r\n                  .then( () => dispatch({type:DELETE_POST_SUCCESS}))\r\n                  .catch( (err) => dispatch({type:DELETE_POST_ERROR,payload:err.message}));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const editPost = (updPost)=>{\r\n     return (dispatch,getState, {getFirebase,getFirestore} ) => {\r\n               console.log('edit post from actions');\r\n\r\n              const firestore = getFirestore();\r\n              firestore.collection('posts').doc(updPost.postId)\r\n                       .set({\r\n                           ...updPost\r\n                       }).then(()=>dispatch({type:EDIT_POST_SUCCESS}))\r\n                         .catch((err)=>dispatch({type:EDIT_POST_ERROR, payload: err.message })); \r\n     }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport ReactsBar from './ReactsBar';\r\nimport {connect} from 'react-redux';\r\nimport {deletePost } from '../../store/actions/postsActions';\r\nimport { Loading } from '../recources/UI/helpers';\r\nimport {formatDate} from '../recources/UI/helpers';\r\nimport {confirmAlert} from 'react-confirm-alert';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst PostSummary =  ( props ) => {\r\n  const  { post , auth , deletePost } = props;\r\n  \r\n    const  handleDelete = (e , postId ) => {\r\n       e.preventDefault();\r\n       confirmAlert({\r\n        title: 'Confirm to Delete',\r\n        message: 'Are you sure to delete this post',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n               deletePost(postId);\r\n               toast.success(`You have deleted post successfully`,{\r\n                 position:toast.POSITION.BOTTOM_RIGHT,\r\n                 autoClose:8000\r\n               });                            \r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => { return; }\r\n          }\r\n        ]\r\n      });\r\n    } \r\n    \r\n \r\n  let  { body , postId, createdAt , user , comments , reacts } = post; \r\n\r\n             if(comments && user && reacts){\r\n              return (\r\n                <div className=\"post-info bg-white my-1 p-1\" >\r\n                  <div className=\"user\">\r\n                   <NavLink exact to={\"/profile/\"+user.userId}>\r\n                     <img\r\n                       className=\"img-rounded user-post-img\"\r\n                       src={user.imageUrl?user.imageUrl:\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200\"}\r\n                       alt={user.userId}\r\n                     />\r\n                     <h4>{user.handle}</h4>\r\n                   </NavLink>\r\n                 </div>\r\n     \r\n                 <div className=\"content\">\r\n                     {/* <h3 className=\"my-1\"> Post title  </h3> */}\r\n                     <h2 className=\"title\"> {body.slice(0,20)}..  </h2>\r\n                     <p className=\"my-1\">\r\n                      \r\n                       {body}\r\n                       <br/>           \r\n                     </p>\r\n                     <h4>posted at : <span className=\"text-primary\"> {formatDate(createdAt.toDate())}  </span>  </h4>\r\n                     <ReactsBar  reacts={reacts} reactableType={\"post\"}  reactableId={postId} reactedId={user.userId} reactorId={auth.uid}  />\r\n                    \r\n                     <NavLink   to={'/post/'+postId}   className=\"btn\">\r\n                         <i className=\"fas fa-comment\"></i>  <span> {comments.length}  </span>\r\n                     </NavLink>\r\n                     {auth.uid === user.userId?\r\n                         <span>\r\n                             <button\r\n                               className=\"btn btn-danger\"\r\n                               onClick={(e)=> handleDelete(e , postId)}\r\n                               >\r\n                               <i className=\"fas fa-trash\"></i>\r\n                             </button>\r\n                             <NavLink\r\n                               className=\"btn btn-success\"\r\n                               exact to={'/editPost/'+postId}\r\n                               >\r\n                             <i className=\"fas fa-edit\"></i>\r\n                            </NavLink>\r\n                          </span>\r\n                              :null}\r\n\r\n                       <NavLink  to={'/post/'+postId} className=\"btn btn-primary\">\r\n                         Discussion\r\n                       </NavLink>           \r\n                 </div>\r\n               </div>\r\n               );\r\n             }else{\r\n               return Loading('Loading Post .......');\r\n            }         \r\n}\r\n     \r\nconst mapDispatchToProps  = (dispatch ) =>{\r\n  return {\r\n    deletePost:  (postId)=> dispatch(deletePost(postId)) \r\n  }\r\n}\r\n\r\n\r\nexport default   connect ( null, mapDispatchToProps) (PostSummary);\r\n","import React from 'react';\r\nimport AddPost from './AddPost';\r\nimport PostSummary from './PostSummary';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport Jumbotron from '../recources/UI/Jumbotron';\r\n\r\nconst  Posts =  ( props ) =>   {\r\n           const  { completePosts , auth  } = props; \r\n          \r\n           const  showPosts =  posts  => \r\n            (  <div className=\"posts\">       \r\n                {\r\n                   posts &&\r\n                   auth &&\r\n                   posts.map( post => <PostSummary   key={post.postId} post={post}  auth={auth} />)\r\n                }\r\n               </div>\r\n            );\r\n  \r\n          return(\r\n            <section className=\"container\">\r\n             \r\n              <Jumbotron title=\"Posts\" description=\"Welcome to our community \"> \r\n                <i className=\"fas fa-users\"> </i> \r\n              </Jumbotron>\r\n              \r\n              <div className=\"post-form\">\r\n                <AddPost  props={props} />\r\n              \r\n                { completePosts?.length > 0 &&  showPosts(completePosts)}\r\n              </div>\r\n             </section>\r\n           );     \r\n   }\r\n\r\n \r\n\r\nconst mapStateToProps =  state  => {     \r\n      let users = state.firestore.data.users;   \r\n      //console.log(users);\r\n      const getPosts = ( ) => users && state.firestore.ordered.posts &&\r\n                               state.firestore.ordered.posts.map( post => {\r\n                               // console.log(post);\r\n                                let  filteredComments =  getComments(post);                              \r\n                                            return {\r\n                                              body:post.body,\r\n                                              createdAt:post.createdAt,\r\n                                              postId:post.postId,\r\n                                              user:users[post.userId],\r\n                                              comments:filteredComments,\r\n                                              reacts: getReacts(post)\r\n                                          }\r\n                                  }); \r\n       const getComments =  post  => state.firestore.ordered.comments && \r\n                                     state.firestore.ordered.comments\r\n                                    .filter(comment => comment.postId === post.postId) \r\n                                    .map( comment => {   \r\n                                      return {\r\n                                        ...comment,                                 \r\n                                        user:users[comment.userId] //add user object that is the owner of this comment\r\n                                      }\r\n                                    });\r\n      // get reacts on post or comment based on parameter reacatble = post | comment  \r\n       const getReacts = ( reactable ) => {              \r\n                                          const reacts = state.firestore.ordered.reacts &&     \r\n                                                         state.firestore.ordered.reacts\r\n                                                        .filter(react => react.reactableId === reactable.id);  \r\n                                          return reacts ;   \r\n                                     }\r\n\r\n         \r\n      let completePosts = getPosts();\r\n       \r\n      return {\r\n        auth : state.firebase.auth,\r\n        completePosts\r\n      //  testPosts:state.posts\r\n        }\r\n      // the format of post we want to map to props\r\n      //  [\r\n      //    { postId ,\r\n      //        body , \r\n      //        userId ,\r\n      //        createdAt ,\r\n      //        postReacts:[\r\n     //                       {reactType,reactableId,reactorId,reactedId},\r\n     //                       {reactType,reactableId,reactorId,reactedId},\r\n     //                       {reactType,reactableId,reactorId,reactedId}\r\n      //                    ],\r\n      //        postUser : { userId , imageUrl  } ,\r\n      //        postComments: [\r\n      //                         {body, userHandle,userImg,createdAt},\r\n      //                         {body, userHandle,userImg,createdAt},\r\n      //                         {body, userHandle,userImg,createdAt}  \r\n      //                       ]\r\n      //     }\r\n      //  \r\n      // ]   \r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps , null),\r\n    firestoreConnect([\r\n       { collection:'posts'},\r\n       { collection:'users'},\r\n       { collection:'comments'},\r\n       { collection:'reacts'},\r\n\r\n    ])  \r\n)  ( Posts);\r\n\r\n","import React from 'react'\n\nfunction TextError (props) {\n  return <div className='text-danger'>{props.children}</div>\n}\n\nexport default TextError\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\n\nfunction Input (props) {\n  const { label , name, ...rest } = props\n  return (\n    <div>\n      {/* {label && <label htmlFor={name}>{label}</label>  } */}\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name}  />\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\n\nfunction Textarea (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div>\n      {/* {label && <label htmlFor={name}>{label}</label> } */}\n      \n      <Field as='textarea' id={name} name={name} {...rest} />\n     <p className=\"text-danger\">  <ErrorMessage component={TextError} name={name} /> </p>\n    </div>\n  )\n}\n\nexport default Textarea\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\n\nfunction Select (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div> \n         {/* { label && <label htmlFor={name}>{label}</label> } */}\n      <Field as='select' id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          )\n        })}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\n\nfunction RadioButtons (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n     {/* {label &&  <label>{label}</label>} */}\n      <Field name={name} >\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='radio'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value === option.value}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default RadioButtons\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\n\nfunction CheckboxGroup (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      {label && <label>{label}</label> }\n      <Field name={name}>\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='checkbox'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value.includes(option.value)}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default CheckboxGroup\n","import React from 'react'\nimport DateView from 'react-datepicker'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nfunction DatePicker (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div>\n     {label &&  <label htmlFor={name}>{label}</label> }\n      <br/>\n      <Field name={name} >\n        {({ form, field }) => {\n          const { setFieldValue } = form\n          const { value } = field\n          return (\n            <DateView\n            \n              id={name}\n              {...field}\n              {...rest}\n              selected={value}\n              onChange={val => setFieldValue(name, val)}\n            />\n          )\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport Input from './Input'\nimport Textarea from './Textarea'\nimport Select from './Select'\nimport RadioButtons from './RadioButtons'\nimport CheckboxGroup from './CheckboxGroup'\nimport DatePicker from './DatePicker'\n\nfunction FormikControl (props) {\n  const { control, ...rest } = props\n  switch (control) {\n    case 'input':\n      return <Input {...rest} />\n    case 'textarea':\n      return <Textarea {...rest} />\n    case 'select':\n      return <Select {...rest} />\n    case 'radio':\n      return <RadioButtons {...rest} />\n    case 'checkbox':\n      return <CheckboxGroup {...rest} />\n    case 'date':\n      return <DatePicker {...rest} />\n    default:\n      return null\n  }\n}\n\nexport default FormikControl\n","import React , {useState , useEffect} from 'react';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {editProfile } from '../../store/actions/profilesActions';\r\nimport FormikControl from '../../components/recources/formikComponents/FormikControl';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Jumbotron  from '../recources/UI/Jumbotron';\r\nimport { toast } from 'react-toastify';\r\n\r\n// test if data available \r\n// in useEffect if any data is available setInitial data based on it\r\n\r\n\r\nconst  EditProfile =  ( {editProfile  , profile } ) => {\r\n      \r\n       \r\n\r\n      useEffect(() => {\r\n        console.log(profile);\r\n        // when you reintialize the values some profile on firestore is not the same on initial values\r\n        // so you have to do some modificatoins when you fetch and also when you puhs to firebase firestore\r\n        // convert array of skills into string\r\n        //\r\n        if(profile){\r\n          setInitialValues({\r\n            ...profile   \r\n          });\r\n        }\r\n\r\n      }, [profile]);\r\n\r\n    let  [initialValues , setInitialValues] = useState({\r\n                                                        jobTitle:'',\r\n                                                        company:'',\r\n                                                        website:'',\r\n                                                        location:'',\r\n                                                        skills:'',\r\n                                                        githubUsername:'',\r\n                                                        bio:'',\r\n                                                        facebook:'',\r\n                                                        twitter:'',\r\n                                                        linkedin:'',\r\n                                                        youtube:'',\r\n                                                        instagram:''\r\n                                                        });\r\n  \r\n\r\n \r\n\r\n    const handleChange = e =>{\r\n      e.preventDefault();\r\n      setInitialValues({\r\n           ...initialValues,\r\n           [e.target.id]:e.target.value\r\n        });\r\n      console.log(initialValues);  \r\n    }\r\n  \r\n    const urlRegex =/((https?):\\/\\/)?(www.)?[a-z0-9-]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#-]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\r\n    const validationSchema = Yup.object({\r\n      bio: Yup.string().min(5, 'Must be 5 characters or more').nullable(),\r\n      company: Yup.string().min(4, 'Must be 4 characters or more').nullable(),\r\n      skills: Yup.string().min(2, 'Must be 2 characters or more').nullable(),\r\n      website: Yup.string().matches( urlRegex , 'Enter correct url!').nullable(),\r\n      location:Yup.string().min(5,'location must be 5 chars at least').nullable(),\r\n      facebook: Yup.string().matches( urlRegex , 'Enter correct url!').nullable(),\r\n      twitter: Yup.string().matches( urlRegex , 'Enter correct url!').nullable(),\r\n      linkedin: Yup.string().matches( urlRegex , 'Enter correct url!').nullable(),\r\n      youtube: Yup.string().matches( urlRegex , 'Enter correct url!').nullable(),\r\n      instagram: Yup.string().matches( urlRegex , 'Enter correct url!').nullable(),\r\n      githubUsername: Yup.string().matches( urlRegex , 'Enter correct url!').nullable(),\r\n    });\r\n    \r\n    const onSubmit =(values, { setSubmitting }) => {\r\n        setTimeout(() => {    \r\n          \r\n          // console.log(values);\r\n          // console.log(initialValues);\r\n          editProfile(initialValues);\r\n          setSubmitting(false);\r\n          toast.success(`You have updated Profile  successfully` , {  \r\n            position:toast.POSITION.BOTTOM_RIGHT,\r\n            autoClose:8000\r\n          });\r\n        }, 400);\r\n      }\r\n\r\n \r\n\r\n      \r\n\r\n     \r\n        return (\r\n          <section className=\"container\">\r\n              <Jumbotron \r\n                  title=\"Create Your Profile\"\r\n                  description=\"Let's get some information to make your profile stand out\"\r\n                  >\r\n                 <i className=\"fas fa-user\"></i>\r\n              </Jumbotron>\r\n           \r\n           <small> * = required fields</small>\r\n           <Formik\r\n             validationSchema={validationSchema}\r\n             initialValues={initialValues}\r\n             onSubmit={onSubmit}\r\n             enableReinitialize\r\n           \r\n           > \r\n             \r\n             {formik => \r\n                {\r\n                  const {\r\n                    jobTitle,\r\n                    company,\r\n                    website,\r\n                    location,\r\n                    skills,\r\n                    githubUsername,\r\n                    bio,\r\n                    facebook,\r\n                    twitter,\r\n                    linkedin,\r\n                    youtube,\r\n                    instagram\r\n                    } = initialValues;\r\n                  return (\r\n                  <Form className=\"form\">\r\n\r\n                     <div className=\"form-group\">          \r\n                        <FormikControl\r\n                              control='input'\r\n                              name='jobTitle'\r\n                              value={jobTitle}       \r\n                              className=\"form-control\"\r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                        <small className=\"form-text\">Job title </small>\r\n                      </div>\r\n                      <div className=\"form-group\">          \r\n                        <FormikControl\r\n                              control='input'\r\n                              name='company'\r\n                              value={company}       \r\n                              className=\"form-control\"\r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                        <small className=\"form-text\">latest company you are working for </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='input'\r\n                              className=\"form-control\"\r\n                              name='website'\r\n                              value={website}\r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">Provide your website/porfolio link</small>\r\n\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='input'\r\n                              className=\"form-control\"\r\n                              name='location'\r\n                              value={location}         \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">location or area of the latest company you worked for</small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='textarea'\r\n                              className=\"form-control\"\r\n                              name='skills'\r\n                              value={skills}   \r\n                              cols='70'      \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">Provide your skills <bold>Seperated with comma \",\" </bold>  .Plz </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='textarea'\r\n                              className=\"form-control\"\r\n                              name='bio'\r\n                              value={bio}   \r\n                              cols='70'      \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">Provide small biography about yourself</small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='input'\r\n                              className=\"form-control\"\r\n                              name='githubUsername'\r\n                              value={githubUsername}         \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                           <small className=\"form-text\">\r\n                             <i className=\"fab fa-github mr-3\"></i> \r\n                               your github link\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='input'\r\n                              className=\"form-control\"\r\n                              name='facebook'\r\n                              value={facebook}         \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">\r\n                             <i className=\"fab fa-facebook mr-3\"></i> \r\n                             your facebook account link\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='input'\r\n                              className=\"form-control\"\r\n                              name='youtube'\r\n                              value={youtube}         \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">\r\n                             <i className=\"fab fa-youtube mr-3\"></i> \r\n                             your youtube account link\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='input'\r\n                              className=\"form-control\"\r\n                              name='twitter'\r\n                              value={twitter}         \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">\r\n                             <i className=\"fab fa-twitter mr-3\"></i> \r\n                             your twitter account  link\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='input'\r\n                              className=\"form-control\"\r\n                              name='linkedin'\r\n                              value={linkedin}         \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">\r\n                             <i className=\"fab fa-linkedin mr-3\"></i> \r\n                             your linkedin account link\r\n                          </small>\r\n                      </div>\r\n                    \r\n                      <div className=\"form-group\">\r\n                          <FormikControl\r\n                              control='input'\r\n                              className=\"form-control\"\r\n                              name='instagram'\r\n                              value={instagram}         \r\n                              onChange={(e)=>handleChange(e)}\r\n                          />\r\n                          <small className=\"form-text\">\r\n                             <i className=\"fab fa-instagram mr-3\"></i> \r\n                             your instagram account link\r\n                          </small>\r\n                      </div>\r\n                      <input type=\"submit\"  className=\"btn btn-primary\" value=\"update profile information\"  />\r\n                  </Form>\r\n                )}\r\n              }\r\n\r\n           </Formik> \r\n          \r\n         </section>\r\n         \r\n        );\r\n       \r\n      \r\n  }\r\n\r\n const mapStateToProps = (state,ownProps) =>{\r\n  \r\n  \r\n  const userId = ownProps.match.params.id;\r\n  //console.log(userId);\r\n  let profiles = state.firestore.data.profiles;\r\n  //console.log(profiles);\r\n  const profile = profiles ? profiles[userId]: null;\r\n  //console.log(profile);\r\n  const auth =  state.firebase.auth;\r\n  \r\n    return {\r\n      auth,\r\n      profile\r\n    }\r\n  \r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        editProfile:(newProfile)=>dispatch(editProfile(newProfile))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  firestoreConnect([{collection:'profiles'}])\r\n)\r\n(EditProfile);\r\n","import React  from 'react';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {addExperience } from '../../store/actions/profilesActions';\r\nimport Jumbotron  from '../recources/UI/Jumbotron';\r\nimport { Formik,  Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport FormikControl from '../../components/recources/formikComponents/FormikControl';\r\nfunction AddExperience (  {addExperience} ) {\r\n \r\n\r\n\r\n  const initialValues ={\r\n    company: '',\r\n    jobTitle:'',\r\n    location:'',\r\n    description: '',\r\n    fromDate:'',\r\n    toDate:'',\r\n  };\r\n  const validationSchema = Yup.object({\r\n    company: Yup.string().required('Required'),\r\n    description: Yup.string().required('Required'),\r\n    jobTitle: Yup.string().required('Required'),\r\n    location: Yup.string().required('Required'),\r\n    fromDate: Yup.date()\r\n      .required('Required'),\r\n    toDate: Yup.date()\r\n      .nullable(),   \r\n  })\r\n  const onSubmit = (values  , {resetForm} )  => {\r\n    console.log(\"submitted\");\r\n    console.log(values);\r\n    addExperience(values);\r\n    toast.success(`You have added Experience item successfully` , {  \r\n      position:toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose:8000\r\n    });\r\n     resetForm({values:{\r\n      company: '',\r\n      location:'',\r\n      jobTitle:'',\r\n      fromDate:'',\r\n      toDate:'',\r\n      description: ''\r\n     }});\r\n}\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Jumbotron title=\"Add Education Item \" ></Jumbotron>\r\n       <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n          \r\n        >\r\n      {formik => (\r\n        <Form>\r\n           <div className=\"form-group\">\r\n              <FormikControl\r\n                control='input'\r\n                type='text'\r\n                name='company'\r\n                className=\"form-control\"\r\n                placeholder=\"company\"\r\n              />\r\n           </div>\r\n           <div className=\"form-group\">\r\n              <FormikControl\r\n                control='input'\r\n                type='text'\r\n                placeholder=\"job title\"\r\n                name='jobTitle'\r\n                className=\"form-control\"\r\n              />\r\n           </div>\r\n\r\n          <div className=\"form-group\">\r\n              <FormikControl\r\n                control='textarea'\r\n                placeholder=\"description of experience\"\r\n                name='description'\r\n                className=\"form-control\"\r\n              />\r\n           </div>\r\n          <div className=\"form-group\">\r\n              <FormikControl\r\n                control='input'\r\n                type='text'\r\n                placeholder='area or country of company'\r\n                name='location'\r\n                className=\"form-control\"\r\n              />\r\n           </div>\r\n           <div className=\"form-group d-flex justify-content-between\">\r\n            <FormikControl\r\n              control='date'\r\n              label='Pick a date'\r\n              name='fromDate'\r\n             \r\n              className='form-control'\r\n            />\r\n    \r\n            <FormikControl\r\n              control='date'\r\n              label='Pick a date'\r\n              name='toDate'\r\n              placeholder=\"to date\"\r\n              className=\"form-control\"\r\n            />\r\n          </div> \r\n                \r\n        <input type=\"submit\"  className=\"btn btn-primary\" value=\"add experience\"  />\r\n        </Form>\r\n      )}\r\n     </Formik>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n        addExperience :(experience)=>dispatch(addExperience(experience))\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n  connect(null,mapDispatchToProps)\r\n)\r\n(AddExperience);\r\n\r\n\r\n","import React   from 'react';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {addEducation } from '../../store/actions/profilesActions';\r\nimport FormikControl from '../../components/recources/formikComponents/FormikControl';\r\nimport { Formik,  Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Jumbotron  from '../recources/UI/Jumbotron';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nfunction AddEducation (  {addEducation} ) {\r\n\r\n \r\n\r\n\r\n  const initialValues  = {\r\n    school: '',\r\n    degree:'',\r\n    field:'',\r\n    fromDate:'',\r\n    toDate:'',\r\n    description: ''\r\n  };\r\n  \r\n  const validationSchema = Yup.object({\r\n    school: Yup.string().required('Required'),\r\n    degree: Yup.string().required('Required'),\r\n    field: Yup.string().required('Required'),\r\n    fromDate: Yup.date()\r\n      .required('Required'),\r\n    toDate: Yup.date()\r\n      .required('Required'),\r\n    description: Yup.string().required('Required')\r\n  })\r\n  const onSubmit = (values  , {resetForm} )  => {\r\n    console.log(\"submitted\");\r\n    console.log(values);\r\n    addEducation(values);\r\n   toast.success(`You have added eduacation item successfully` , {  \r\n    position:toast.POSITION.BOTTOM_RIGHT,\r\n    autoClose:8000\r\n    });\r\n    resetForm({values:{\r\n      school: '',\r\n      degree:'',\r\n      field:'',\r\n      fromDate:'',\r\n      toDate:'',\r\n      description: ''\r\n     }});\r\n}\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Jumbotron title=\"Add Education Item \" ></Jumbotron>\r\n       <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n         \r\n        >\r\n      {formik => (\r\n        <Form>\r\n           <div className=\"form-group\">\r\n              <FormikControl\r\n                control='input'\r\n                type='text'\r\n                name='school'\r\n                className=\"form-control\"\r\n                placeholder=\"school name\"\r\n              />\r\n           </div>\r\n           <div className=\"form-group\">\r\n              <FormikControl\r\n                control='degree'\r\n                type='text'\r\n\r\n                placeholder=\"add degree\"\r\n                name='degree'\r\n                className=\"form-control\"\r\n              />\r\n           </div>\r\n\r\n          <div className=\"form-group\">\r\n              <FormikControl\r\n                control='input'\r\n                type='text'\r\n                placeholder='field'\r\n                name='field'\r\n                className=\"form-control\"\r\n              />\r\n           </div>\r\n           <div className=\"form-group d-flex justify-content-between\">\r\n            <FormikControl\r\n              control='date'\r\n              label='Pick a date'\r\n              name='fromDate'           \r\n              className='form-control'\r\n            />\r\n       \r\n\r\n         \r\n            <FormikControl\r\n              control='date'\r\n              label='Pick a date'\r\n              name='toDate'        \r\n              placeholder=\"to date\"\r\n              className=\"form-control\"\r\n            />\r\n          </div> \r\n          <div className=\"form-group\">\r\n              <FormikControl\r\n                control='textarea'\r\n                className=\"form-control\"\r\n                placeholder='add description'\r\n                name='description'         \r\n              />\r\n           </div>      \r\n        <input type=\"submit\"  className=\"btn btn-primary\" value=\"add Education\"  />\r\n        </Form>\r\n      )}\r\n     </Formik>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n        addEducation :(education)=>dispatch(addEducation(education))\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n  connect(null,mapDispatchToProps)\r\n)\r\n(AddEducation);\r\n\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firebase-firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n \r\n // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDVnwYJnM8nzmZYkyZhzOLgKAa-KEwPfU4\",\r\n    authDomain: \"react-dev-connect.firebaseapp.com\",\r\n    databaseURL: \"https://react-dev-connect.firebaseio.com\",\r\n    projectId: \"react-dev-connect\",\r\n    storageBucket: \"react-dev-connect.appspot.com\",\r\n    messagingSenderId: \"579745601994\",\r\n    appId: \"1:579745601994:web:5a20c3c7cc2be60d221733\",\r\n    measurementId: \"G-JH4DLJRQBY\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n \r\n export  const storage = firebase.storage();\r\n\r\n  export  {   firebase as default};  \r\n\r\n","import React , {useState} from 'react';\r\nimport {storage} from '../../config/fbConfig';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {editProfileImage } from '../../store/actions/profilesActions';\r\nimport Jumbotron from '../recources/UI/Jumbotron';\r\nimport { Loading } from '../recources/UI/helpers';\r\n\r\n\r\nconst  EditProfileImage = ( props) => {\r\n\r\n    const [profileImage , setProfileImage] = useState(null);\r\n    const [uploadProgress,setUploadPrgress] = useState(0);\r\n    const [noSelectedImgError, setNoSelectedImgError]=useState(null);\r\n  \r\n\r\n\r\n const  handleChange= (e) => {\r\n      console.log('file choosen');\r\n      console.log(e.target.files);\r\n           if(e.target.files[0]){\r\n             //console.log(e.target.files[0]);\r\n            setProfileImage(e.target.files[0]);\r\n            setNoSelectedImgError(null);\r\n             //console.log(this.state.profileImage);\r\n           }\r\n  }\r\n\r\n   const  handleUpload = (e) => {\r\n       \r\n        if(profileImage){\r\n        const uploadTask = storage.ref(`images/profiles/${profileImage.name}`).put(profileImage);\r\n          \r\n          uploadTask.on(\r\n            'state_changed',\r\n            snapshot => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred/snapshot.totalBytes) * 100\r\n              );\r\n              setUploadPrgress(progress);\r\n            },\r\n            error => {\r\n              //console.log(error);\r\n            },\r\n            () => {\r\n                storage.ref('images/profiles')\r\n                .child(profileImage.name)\r\n                .getDownloadURL()\r\n                .then( url => {\r\n                  //console.log(url);\r\n                  const { editProfileImage } = props;\r\n                  editProfileImage(url);\r\n                })         \r\n            }\r\n        );\r\n        }else{  \r\n          setNoSelectedImgError('Plz , select picture file before submitting');\r\n        }        \r\n    }\r\n    \r\n\r\n        const { user } = props;\r\n           \r\n            if(user){\r\n              console.log(user);\r\n              return(\r\n                <div className=\"container\">\r\n                  <Jumbotron title=\"Edit Profile img\" description=\"Edit You profile image\">\r\n                    <i className=\"text-primary fas fa-user\"> </i>\r\n                  </Jumbotron>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => handleChange(e)}       \r\n                       /><br/>\r\n                      <progress  value={uploadProgress}  max=\"100\" /> <br/>\r\n                        {\r\n                         <div className=\"col-sm-10 offset-sm-1\">\r\n                            { \r\n                             user.imageUrl? <img  className=\"img-rounded edit-profile-img\" src={user.imageUrl} alt=\"user\"/>:<img  className=\"img-rounded edit-profile-img\" src={process.env.PUBLIC_URL+'/default-user-img.jpeg'} alt=\"user default\" />}                      \r\n                         </div>\r\n                        }\r\n                     {noSelectedImgError &&  <div className=\"alert alert-danger\">  {noSelectedImgError} </div> }\r\n                    <button onClick={() => handleUpload()} className=\"btn btn-success\"> submit profile image </button>\r\n                    <NavLink className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</NavLink>\r\n                 </div>\r\n                </div>\r\n            );                     \r\n            }else {\r\n              return Loading('Loading Profile ......');\r\n            }\r\n      } \r\n  \r\n\r\n\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n  const userId = ownProps.match.params.id;\r\n  const auth =state.firebase.auth;\r\n  let users = state.firestore.data.users;\r\n  let user = users ? users[userId]: null;\r\n  if( auth.uid && user ){\r\n      return {\r\n        auth,\r\n        user\r\n      };\r\n    }else{\r\n      return {\r\n        auth\r\n      }\r\n    }\r\n}\r\nconst mapDispatchToProps= (dispatch)=>{\r\n  //console.log('in mapDispatch');\r\n      return {\r\n        editProfileImage: (profileImage) =>dispatch(editProfileImage(profileImage))\r\n      } \r\n}\r\n\r\nexport default  compose \r\n  (\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([{collection:'users'}])\r\n  )(EditProfileImage);","import React  from 'react';\r\n\r\nclass NotFoundPage extends React.Component {\r\n\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"container\">       \r\n                    <h1 className=\"text-primary text-center \">  Unfortionately , There isn't any page math this link </h1>\r\n           </section>      \r\n          );\r\n    }\r\n}\r\n\r\nexport default NotFoundPage;","import React  from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass HomePage extends React.Component {\r\n\r\n\r\n    render(){\r\n           const { auth  , authError } = this.props;\r\n           let links=   <div className=\"buttons\">\r\n                            <NavLink to=\"/signup\" className=\"btn btn-primary\">sign up</NavLink>\r\n                            <NavLink to=\"/signin\" className=\"btn\">login</NavLink>\r\n                        </div>;\r\n\r\n           if(authError){\r\n               return <Redirect exact to=\"signin\" />\r\n           }else{\r\n            return(\r\n           \r\n                <section className=\"landing\">                       \r\n                 <img  className=\"landing-img\" src={process.env.PUBLIC_URL+'/imgs/showcase.jpg'} alt=\"landing page \"/>                  \r\n                 <div className=\"dark-overlay\">\r\n                    <div className=\"landing-inner\">\r\n                    <h1 className=\"x-large\">Deve10pers </h1>\r\n                    <h1 className=\"x-large\">C0nnect0r </h1>\r\n\r\n                    <p className=\"lead\">\r\n                        create developer portfolio/account post blogs and also get help from\r\n                        the others\r\n                    </p>\r\n                      {auth.uid ?null:links }\r\n                    </div>\r\n                 </div>            \r\n                </section> \r\n                     \r\n            );\r\n         }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n       const  auth =state.firebase.auth;\r\n        const profile=state.firebase.profile;\r\n     return{\r\n         auth ,\r\n         profile,\r\n         authError:state.auth.authError\r\n     }\r\n}\r\n\r\nexport default connect(mapStateToProps) (HomePage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport Jumbotron from '../recources/UI/Jumbotron';\r\nimport {Loading} from '../recources/UI/helpers';\r\nimport {formatDate} from '../recources/UI/helpers';\r\n\r\nconst  Developers = props =>  {\r\n        const { developers }  = props;  \r\n            if(!developers){\r\n                return Loading('Loading Developers .....')\r\n            }else{\r\n                  return(\r\n                    <section className=\"container\">\r\n                        <Jumbotron\r\n                          title=\"Developers\"\r\n                          description=\"Connect with developers and change the world\"\r\n                          >\r\n                         <i className=\"fab fa-connectdevelop\"></i>\r\n                        </Jumbotron>\r\n                        <div className=\"profiles\">\r\n                          {developers && developers.map(developer => {\r\n                            return (                 \r\n                                <div className=\"profile bg-light p-2\"  key={developer.id}>\r\n                                    <img\r\n                                        className=\"img-rounded\"\r\n                                        src={developer.imageUrl}\r\n                                        alt={developer.handle}\r\n                                    />\r\n                                    <div>\r\n                                        <h1> {developer.handle} </h1>\r\n                                        <p> {developer.jobTitle} </p>\r\n                                        <p> {developer.location} </p>\r\n                                        <p className=\"text-primary\"> Joined at  {formatDate(developer.createdAt.toDate())}</p>\r\n                                        <NavLink exact to={\"/profile/\"+developer.id} target=\"_parent\" className=\"btn btn-primary\">View Profile</NavLink>\r\n                                    </div>\r\n                                        {\r\n                                        developer.skills !== undefined  && developer.skills.length > 0  ?  \r\n                                        <ul> {developer.skills.split(',').map((skill,i)=>\r\n                                        <li className=\"text-primary\" key={i} >\r\n                                            <i className=\"fas fa-check mr-1\"></i>\r\n                                                {skill} \r\n                                                </li>)}\r\n                                        </ul>:null\r\n                                    }     \r\n                                </div>              \r\n                             );             \r\n                        })}\r\n                     </div>\r\n                  </section>\r\n                );  \r\n     } \r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n     \r\n     const auth=state.firebase.auth;\r\n     let   users=state.firestore.ordered.users;\r\n     let   profiles=state.firestore.ordered.profiles;\r\n    //  console.log(auth);\r\n    //  console.log(users);\r\n    //  console.log(profiles);\r\n     if(!(users && profiles)){\r\n        return {\r\n            auth\r\n         }\r\n     }else{\r\n         let developers = users.map( user => {\r\n               let matchedProfile = profiles.filter(profile =>profile.userId === user.userId);\r\n                   matchedProfile  = matchedProfile? matchedProfile[0]:undefined;\r\n                  // console.log(matchedProfile);\r\n                   if(matchedProfile){\r\n                        return {\r\n                            ...user,\r\n                            ...matchedProfile\r\n                            \r\n                        }\r\n                   }else{\r\n                       return {\r\n                           ...user\r\n                       }\r\n                   }            \r\n         });           \r\n         return {\r\n             auth,\r\n             developers\r\n         }\r\n     }    \r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,null),\r\n    firestoreConnect([\r\n        {collection:'users'},\r\n        {collection:'profiles'}\r\n      ])\r\n  )\r\n  (Developers);","import React , {   Fragment } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink} from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport {showLoading} from '../recources/UI/helpers';\r\nimport {formatDate} from '../recources/UI/helpers';\r\n\r\n\r\nconst  DeveloperDetailsNew =  ( { developer  }) => {\r\n\r\n   //console.log(developer);\r\n  \r\n\r\n   const  handleUrl = (e,url ) => {\r\n          e.preventDefault();\r\n          // console.log(url);\r\n          if(!url){\r\n              return;\r\n            }else{\r\n              window.location.href=window.location.href='https://'+url;\r\n          }\r\n   }\r\n\r\n   const showDeveloper = () => (\r\n      <Fragment>\r\n           <NavLink exact to=\"/developers\" className=\"btn\">Back To Profiles</NavLink>\r\n                    <div className=\"profile-grid my-1\">\r\n                      <div className=\"profile-top bg-primary p-2\">\r\n                        <img\r\n                          className=\"img-rounded my-2\"\r\n                          src={developer.imageUrl}\r\n                          alt=\"user \"\r\n                        />\r\n                        <h1 className=\"large mt-2\"> {developer.handle} </h1>\r\n                        <p className=\"lead\"> {developer.jobTitle} </p>\r\n                        <p> Joined At  {developer.createdAt && formatDate(developer.createdAt.toDate())}  </p>\r\n                        <p> {developer.location} </p>\r\n                        <div className=\"icons my-1\">\r\n                          \r\n                                        \r\n                            <span> \r\n                                <i    onClick={(e)=>handleUrl(e,developer.website)} className=\"fas fa-globe fa-2x\"></i>\r\n                                <i    onClick={(e)=>handleUrl(e,developer.twitter)} className=\"fab fa-twitter fa-2x\"></i>\r\n                                <i    onClick={(e)=>handleUrl(e,developer.githubUsername)} className=\"fab fa-github fa-2x\"></i>                          \r\n                                <i    onClick={(e)=>handleUrl(e,developer.facebook)}  className=\"fab fa-facebook fa-2x\"></i>\r\n                                <i    onClick={(e)=>handleUrl(e,developer.linkedin)} className=\"fab fa-linkedin fa-2x\"></i>                          \r\n                                <i    onClick={(e)=>handleUrl(e,developer.instagram)} className=\"fab fa-instagram fa-2x\"></i>\r\n                                <NavLink exact to={\"/developerPosts/\"+developer.userId} > <i className=\"fas fa-comment-alt fa-2x\"></i> </NavLink>                             \r\n                            </span> \r\n                                                       \r\n                        </div>\r\n                      </div>\r\n                    \r\n                      <div className=\"profile-about bg-light p-2\">\r\n                        <h2 className=\"text-primary\"> {developer.handle} bio</h2>\r\n                        <p>\r\n                         {developer.bio}\r\n                        </p>\r\n                        <div className=\"line\"></div>\r\n                        <h2 className=\"text-primary text-center\">Skill </h2>\r\n                       <div className=\"skills\">\r\n                           {developer.skills?.length > 0 && developer.skills.split(',').map((skill,i)=>{\r\n                             return    <div className=\"p-1\" key={i}><i className=\"fas fa-check\"></i> {skill} </div>         \r\n                           })}\r\n                       \r\n                      \r\n                       </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"profile-exp bg-white p-2\">\r\n                        <h1 className=\"text-primary\">Experiences</h1>\r\n\r\n                        { developer.experiences && developer.experiences.map( experience => {\r\n                           return (\r\n                            <div key={experience.id}>\r\n                                <h3> {experience.company} </h3>\r\n                                 <p> {experience.fromDate}-  {experience.toDate} </p>\r\n                                <p><strong>Position : </strong> {experience.jobTitle} </p>\r\n                                <p><strong>Description : </strong> {experience.description} </p>\r\n                    \r\n                            </div>\r\n                           );\r\n                        })}\r\n                        \r\n                       \r\n                      </div>\r\n                        \r\n                        <div className=\"profile-edu bg-white p-2\">\r\n                          <h1 className=\"text-primary\">Education</h1>\r\n                          {developer.educations && developer.educations.map(education=>{\r\n                              return (\r\n                                <div key={education.id}>\r\n                                    <h3>{education.school} </h3>\r\n                                    {/* <p> {education.fromDate}- {education.toDate} </p> */}\r\n                                    <p><strong>Degree : </strong> {education.degree} </p>\r\n                                    <p><strong>Field : </strong> {education.field} </p>\r\n                    \r\n                                    <p><strong>Description : </strong> {education.description} </p>\r\n                        \r\n                                </div>\r\n                              );\r\n                          })}\r\n                                                \r\n                      </div>                                                 \r\n                    </div>\r\n      </Fragment>\r\n   )  \r\n   \r\n    return (\r\n           <section className=\"container\">\r\n                    { ( Object.keys(developer).length >= 1) ? showDeveloper():showLoading(true) }\r\n            </section>\r\n        );    \r\n              \r\n    \r\n}\r\n\r\n\r\n        \r\n    const mapStateToProps = ( state , ownProps ) => {\r\n        const userId = ownProps.match.params.id;\r\n      \r\n      \r\n        let users = state.firestore.data.users;\r\n        let profiles  = state.firestore.data.profiles;\r\n        \r\n        let user = users?users[userId]:undefined;\r\n        let profile = profiles?profiles[userId]:undefined;           \r\n        let educations=state.firestore.ordered.educations;\r\n            educations= educations?educations.filter(education=>education.userId===userId):undefined;  \r\n                      \r\n       let experiences=state.firestore.ordered.experiences;\r\n           experiences = experiences?experiences.filter(experience=>experience.userId===userId):undefined;                 \r\n         \r\n           let developer = {};\r\n         \r\n           if(user){\r\n             developer={...user};\r\n           }\r\n           \r\n\r\n           if(profile){\r\n             developer = {\r\n                  ...developer,\r\n                  ...profile\r\n                }\r\n           } \r\n\r\n           if(educations){\r\n             developer = {\r\n               ...developer,\r\n               educations\r\n             }\r\n           }\r\n           if(experiences){\r\n             developer = {\r\n               ...developer,\r\n               experiences\r\n             }\r\n           \r\n           }\r\n\r\n          \r\n      \r\n\r\n\r\n        /**\r\n         *  developer = {\r\n         *             ...user,\r\n         *             ...profile,\r\n         *              educations:[{},{},{}] ,   \r\n         *              expriences:[{},{},{}] \r\n         *           };\r\n         * \r\n         * */ \r\n        \r\n        return {\r\n            developer    \r\n        };                  \r\n }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,null),\r\n    firestoreConnect([\r\n        {collection:'users'},\r\n        {collection:'profiles'},\r\n        {collection:'educations'},\r\n        {collection:'experiences'}   \r\n    ])\r\n  )\r\n  (DeveloperDetailsNew);\r\n\r\n","import React from 'react';\r\nimport PostSummary from '../posts/PostSummary';\r\nimport AddPost from '../posts/AddPost';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {Loading} from '../recources/UI/helpers';\r\nimport Jumbotron from '../recources/UI/Jumbotron';\r\n\r\nconst  DeveloperPosts = (props ) =>  {\r\n  const  { completePosts ,  auth , developerId } = props;\r\n         if(! completePosts ){\r\n            return Loading('Loading Post .....');\r\n         }else{\r\n           //console.log(completePosts);\r\n          return(\r\n            <section className=\"container\" >\r\n            <Jumbotron\r\n              title=\"Post\"\r\n              description=\"those are posts  of developer\"\r\n             >\r\n               <i className=\"fas fa-user\"></i>\r\n            </Jumbotron>\r\n            <div className=\"post-form\">\r\n             {auth.uid === developerId ? <AddPost props={props}/> : null }       \r\n              <div className=\"posts\">       \r\n                {completePosts.length > 0 ?\r\n                 completePosts.map( post => <PostSummary key={post.postId} post={post} auth={auth} />) \r\n                 : <h1 className=\"text-center text-primary\"> There is no posts for this developer  </h1>\r\n                }\r\n              </div>\r\n            </div>\r\n          </section>\r\n           );\r\n         }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n      let auth =state.firebase.auth;\r\n      let developerId = ownProps.match.params.id;\r\n      let posts = state.firestore.ordered.posts;       \r\n      let users = state.firestore.data.users;\r\n      let comments =state.firestore.ordered.comments;\r\n      let reacts =state.firestore.ordered.reacts;\r\n\r\n     if(posts && users && comments && reacts ){\r\n         // get Posts of one specific user     \r\n                posts = posts.filter(post => post.userId === developerId);\r\n                const   getCompletePosts = ( ) => posts.map( post => {\r\n                  // fetch comments belongst to this specific post  \r\n                    const getComments = () => comments.filter(comment=>comment.postId === post.postId) \r\n                                                      .map( comment => {   \r\n                                                        return {\r\n                                                          ...comment,                                 \r\n                                                          user:users[comment.userId] //add user object that is the owner of this comment\r\n                                                        }\r\n                                                    }); \r\n\r\n                    const getReacts = () =>  reacts.filter(react => react.reactableId === post.postId);\r\n                    return {\r\n                        body:post.body,\r\n                        createdAt:post.createdAt,\r\n                        postId:post.postId,\r\n                        user:users[post.userId],\r\n                        comments:getComments(),\r\n                        reacts:getReacts()\r\n                    }\r\n          }); \r\n         let completePosts = getCompletePosts(); \r\n        \r\n      // the format of post we want to map to props\r\n      //  [\r\n      //    { postId ,\r\n      //        body , \r\n      //        userId ,\r\n      //        createdAt ,\r\n      //        postReacts:[\r\n      //                       {reactType,reactableId,reactorId,reactedId},\r\n      //                       {reactType,reactableId,reactorId,reactedId},\r\n      //                       {reactType,reactableId,reactorId,reactedId}\r\n      //                    ],\r\n      //        postUser : { userId , imageUrl  } ,\r\n      //        postComments: [\r\n      //                         {body, userHandle,userImg,createdAt},\r\n      //                         {body, userHandle,userImg,createdAt},\r\n      //                         {body, userHandle,userImg,createdAt}  \r\n      //                       ] \r\n      //                       \r\n      //        \r\n      //     }\r\n      //  \r\n      // ]\r\n        return{\r\n          auth,\r\n          completePosts,\r\n          developerId\r\n        }\r\n      } else return { auth };\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n       { collection:'posts'},\r\n       { collection:'users'},\r\n       { collection:'comments'},\r\n       { collection:'reacts'}\r\n    ])\r\n    \r\n)  ( DeveloperPosts);\r\n\r\n","import React  , {useState , useEffect } from 'react';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {connect} from 'react-redux';\r\nimport {editPost} from '../../store/actions/postsActions';\r\nimport {compose} from 'redux';\r\nimport FormikControl from '../../components/recources/formikComponents/FormikControl';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Jumbotron  from '../recources/UI/Jumbotron';\r\nimport { toast } from 'react-toastify';\r\nconst  EditPost = (  { editPost , post } ) => {\r\n\r\n          \r\n            useEffect( ()=> {\r\n                if(post){\r\n                    const { body , postId  } = post;         \r\n                    setInitialValues({\r\n                        body,\r\n                        postId\r\n                    });       \r\n                }\r\n            } ,[post]);\r\n            const [initialValues , setInitialValues ] = useState({\r\n                body: \"\",\r\n                postId: \"\"\r\n            });\r\n            const   validationSchema = Yup.object({\r\n                body: Yup.string()\r\n                  .min(5, 'Must be 5 characters or more')\r\n                  .required('Required field')\r\n              });\r\n\r\n            const onSubmit =(values, { setSubmitting }) => {\r\n                setTimeout(() => {    \r\n                    console.log(values);\r\n                    console.log(initialValues);\r\n                  editPost({...values });\r\n                  \r\n                  setSubmitting(false);\r\n                  toast.success(`You have updated post successfully` , {  \r\n                    position:toast.POSITION.BOTTOM_RIGHT,\r\n                    autoClose:8000\r\n                  });\r\n                }, 400);\r\n              }\r\n\r\n              const handleChange = e => {\r\n                  setInitialValues({...initialValues,body:e.target.value})\r\n              }\r\n\r\n              return (\r\n                  <div className=\"container\">\r\n                      <Jumbotron title=\"Edit post page\" description=\"post body\"></Jumbotron>\r\n                      <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                        enableReinitialize\r\n                        >\r\n                        {formik => \r\n                         {\r\n                         return (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n                                    <FormikControl\r\n                                        control='textarea'\r\n                                        name='post'\r\n                                        value={initialValues.body}\r\n                                        cols=\"70\"\r\n                                        onChange={(e)=>handleChange(e)}\r\n\r\n                                    />\r\n\r\n                                </div>\r\n                                <input type=\"submit\"  className=\"btn btn-primary\" value=\"Update Post \"  />\r\n                            </Form>\r\n                             )}\r\n                        }\r\n                        </Formik>        \r\n                  </div>\r\n             );\r\n          }\r\n\r\n\r\n\r\nconst mapStateToProps = (state ,ownProps )=> {\r\n    const postId= ownProps.match.params.id;\r\n    const posts = state.firestore.data.posts;\r\n    const post = posts ? posts[postId]:undefined;\r\n    // console.log(posts);\r\n    // console.log(post);\r\n   return {\r\n       post\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch,ownProps)=>{\r\n    ////console.log('add post');\r\n    // const  postId = ownProps.match.params.id;\r\n    // console.log(postId); \r\n    return {\r\n         editPost: (post)=>dispatch(editPost(post))\r\n    }\r\n}\r\n\r\n\r\nexport default   compose(\r\n                    connect(mapStateToProps,mapDispatchToProps),\r\n                    firestoreConnect([{collection:'posts'}])\r\n                    ) (EditPost);","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * this a higher order component return compenent only if user is authenticated \r\n * \r\n*/\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={ props =>\r\n            rest.auth.uid ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from : props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps , null ) (PrivateRoute);\r\n","import React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport './styles/App.scss';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport { BrowserRouter , Switch , Route} from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PostDetails from './components/posts/PostDetails';\nimport Posts from './components/posts/Posts';\nimport EditProfile from './components/dashboard/EditProfile';\nimport AddExperience from './components/dashboard/AddExperience';\nimport AddEducation from './components/dashboard/AddEducation';\nimport EditProfileImage from './components/dashboard/EditProfileImage';\nimport NotFoundPage from './components/layout/NotFoundPage';\nimport HomePage from './components/layout/HomePage';\nimport Developers from './components/profiles/Developers';\nimport DeveloperDetails from './components/profiles/DeveloperDetails';\nimport DeveloperPosts from './components/profiles/DeveloperPosts';\nimport EditPost from './components/posts/EditPost';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport {toast} from 'react-toastify';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \nimport 'react-toastify/dist/ReactToastify.css';\n\n\ntoast.configure();\n\n\nfunction App() {\n  return (\n    <BrowserRouter  > \n      <div className=\"App\">\n         <Navbar />\n         <Switch>\n            <Route exact path='/' component={HomePage}  />\n\n            <PrivateRoute exact path='/dashboard' component={Dashboard}  />\n            <Route exact path='/signin' component={SignIn} />\n            <Route exact path='/signup' component={SignUp} />\n            <PrivateRoute exact path=\"/editProfile/:id\"  component={EditProfile}  /> \n            <PrivateRoute exact path=\"/addExperience/:id\"  component={AddExperience} />\n            <PrivateRoute exact path=\"/addEducation/:id\"  component={AddEducation} />\n            <PrivateRoute exact path=\"/editProfileImage/:id\" component={EditProfileImage}  />\n            <PrivateRoute exact path=\"/developers\"  component={Developers}/>\n            <PrivateRoute exact path=\"/profile/:id\"  component={DeveloperDetails}/> \n            <PrivateRoute exaxt path=\"/developerPosts/:id\" component={DeveloperPosts} />\n \n\n            <PrivateRoute exact path=\"/posts\" component={Posts} />\n            <PrivateRoute exact path=\"/post/:id\" component={PostDetails}  />\n            <Route exact path=\"/editPost/:id\" component={EditPost}  />\n\n            <Route path=\"*\" component={NotFoundPage} />\n         </Switch>\n      </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {   \r\n    SIGNUP_SUCCESS , \r\n    SIGNUP_ERROR , \r\n    SIGNIN_SUCCESS ,\r\n    SIGNIN_ERROR ,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_ERROR ,\r\n    ACCOUNT_DELETE_SUCCESS,\r\n    ACCOUNT_DELETE_ERROR \r\n   } from './../actions/actions';\r\n\r\n\r\n\r\nconst initState={\r\n    authError:null,\r\n    deleteAccountError:null\r\n}\r\nconst authReducer = ( state= initState , action ) =>{\r\n    switch(action.type){\r\n        case SIGNUP_SUCCESS:\r\n            console.log('sign up successfully');\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case SIGNUP_ERROR:\r\n            console.log('sign up error');\r\n            return {\r\n                ...state,\r\n                authError:action.payload\r\n            }   \r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }   \r\n        case LOGOUT_ERROR:\r\n            console.log('sign out successfully');\r\n            return {\r\n                ...state,\r\n                authError:action.payload\r\n            }\r\n        case SIGNIN_SUCCESS:\r\n            console.log('sign in success');  \r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }  \r\n        case SIGNIN_ERROR:\r\n            console.log('sign in error');\r\n            console.log(action.payload);\r\n            return{\r\n                ...state,\r\n                authError:action.payload\r\n            }  \r\n        case ACCOUNT_DELETE_SUCCESS:\r\n            console.log('account deleted successfully');\r\n            return  state;\r\n        case ACCOUNT_DELETE_ERROR:\r\n            console.log('account deleting error');\r\n            return {\r\n                ...state,\r\n                deleteAccountError:action.payload\r\n            }              \r\n        default:\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }    \r\n    }\r\n}\r\nexport  default authReducer ;\r\n\r\n\r\n","import {  \r\n    EDIT_PROFILEIMAGE_SUCCESS , \r\n    EDIT_PROFILEIMAGE_ERROR , \r\n    EDIT_PROFILE_SUCCESS , \r\n    EDIT_PROFILE_ERROR , \r\n    ADD_EXPERIENCE_SUCCESS , \r\n    ADD_EXPERIENCE_ERROR , \r\n    DELETE_EXPERIENCE_SUCCESS ,\r\n    DELETE_EXPERIENCE_ERROR , \r\n    ADD_EDUCATION_SUCCESS , \r\n    ADD_EDUCATION_ERROR , \r\n    DELETE_EDUCATION_SUCCESS ,\r\n    DELETE_EDUCATION_ERROR \r\n} \r\nfrom './../../actions/actions';\r\n\r\nconst initState = {\r\n    editProfileErr:null,\r\n    addExperienceErr:null,\r\n    addEducationErr:null,\r\n    editProfileImageErr:null\r\n }\r\n\r\n const profileReducer=(state=initState,action)=>{\r\n   switch(action.type){\r\n       case EDIT_PROFILE_SUCCESS:\r\n           console.log('edit profile  from  reducers');\r\n           return state;\r\n       case EDIT_PROFILE_ERROR:\r\n           return {\r\n               ...state,\r\n               editProfileErr:'edit profile error'\r\n            };  \r\n        case ADD_EXPERIENCE_SUCCESS:\r\n            console.log('add experience successfully from reducers')\r\n            return state;\r\n        case ADD_EXPERIENCE_ERROR:\r\n            console.log('add experience error from reducers')\r\n\r\n            return {\r\n                ...state,\r\n                addExperienceErr:'edit exeperince error'\r\n            }  \r\n      \r\n        case EDIT_PROFILEIMAGE_SUCCESS:\r\n            console.log('edit profile image success');\r\n            return state;\r\n\r\n        case EDIT_PROFILEIMAGE_ERROR:\r\n            console.log('edit profile image error');\r\n            return {\r\n                ...state,\r\n                editProfileImageErr: action.payload\r\n            };\r\n    \r\n\r\n        case ADD_EDUCATION_SUCCESS:\r\n            return state;\r\n\r\n        case ADD_EDUCATION_ERROR:\r\n            return {\r\n                ...state,\r\n                addEducationErr:'add education Error'\r\n            }\r\n\r\n        case DELETE_EDUCATION_SUCCESS:\r\n            console.log('Education element wase deleted successfully');\r\n             return state;\r\n        \r\n       case DELETE_EDUCATION_ERROR:\r\n           console.log('delete education error form reducer');\r\n                return {\r\n                    ...state,\r\n                    deleteEducationErr:'delete education error'\r\n                }\r\n        case DELETE_EXPERIENCE_SUCCESS:\r\n            console.log('experience  was deleted successfully from reducers');\r\n                return state;\r\n        \r\n        case DELETE_EXPERIENCE_ERROR:\r\n            console.log('delete experience error form reducer');\r\n                return {\r\n                    ...state,\r\n                    deleteEducationErr:'delete education error'\r\n                    }  \r\n        default :\r\n           return state;      \r\n   }\r\n}\r\n\r\nexport default profileReducer;","import {  \r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POSTS_ERROR,\r\n  ADD_POST_SUCCESS ,\r\n  ADD_POST_ERROR ,\r\n  DELETE_POST_SUCCESS , \r\n  DELETE_POST_ERROR, \r\n  EDIT_POST_SUCCESS ,\r\n  EDIT_POST_ERROR\r\n } from './../../actions/actions';\r\n\r\n\r\n\r\nconst initState = {\r\n  loading:false,\r\n  posts:[],\r\n  error:''\r\n};\r\n\r\nconst  postReducer  =  ( state= initState , action )=>{\r\n        switch(action.type){\r\n          case FETCH_POSTS_REQUEST:\r\n            return {\r\n              ...state,\r\n              loading: true\r\n            }\r\n          case FETCH_POSTS_SUCCESS:\r\n            return {\r\n              loading: false,\r\n              posts: action.payload,\r\n              error: ''\r\n            }\r\n          case FETCH_POSTS_ERROR:\r\n            return {\r\n              loading: false,\r\n              posts: [],\r\n              error: action.payload\r\n            }\r\n          case ADD_POST_SUCCESS:\r\n            return  state;\r\n          case ADD_POST_ERROR:\r\n            return {\r\n              ...state\r\n            }; \r\n          case DELETE_POST_SUCCESS:\r\n            return state;\r\n          case DELETE_POST_ERROR:\r\n            return {\r\n              ...state,\r\n              deletePostError:action.payload\r\n            }  \r\n          case EDIT_POST_SUCCESS:\r\n              return state;\r\n           case EDIT_POST_ERROR:\r\n             return {\r\n               ...state,\r\n                editPostError:action.payload\r\n             }    \r\n          default:\r\n            return state;  \r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default postReducer;","\r\nimport {\r\n  ADD_COMMENT_SUCCESS ,\r\n  ADD_COMMENT_ERROR,\r\n  DELETE_COMMENT_SUCCESS , \r\n  DELETE_COMMENT_ERROR \r\n}  from './../../actions/actions';\r\n\r\n\r\n const  initState = {\r\n    addCommentError:null,\r\n    deleteCommentError:null\r\n}\r\nconst commentReducer = (state=initState,action) => {\r\n    switch(action.type){\r\n        case ADD_COMMENT_SUCCESS:\r\n          return  state;\r\n        case ADD_COMMENT_ERROR:\r\n          return {\r\n            ...state,\r\n             addCommentError:action.payload\r\n          }; \r\n          case DELETE_COMMENT_SUCCESS:\r\n            return  state;\r\n          case DELETE_COMMENT_ERROR:\r\n            return {\r\n              ...state,\r\n               deleteCommentError:action.payload\r\n            }; \r\n        default:\r\n          return state;  \r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default commentReducer;","\r\nimport {  \r\n  ADD_REACT_SUCCESS,\r\n  ADD_REACT_ERROR , \r\n  DELETE_REACT_SUCCESS ,\r\n  DELETE_REACT_ERROR\r\n} from './../../actions/actions';\r\n\r\nconst  initState = {\r\n    addReactError:null,\r\n    deleteReactError:null\r\n}\r\nconst reactReducer = (state=initState,action) => {\r\n    switch(action.type){\r\n        case ADD_REACT_SUCCESS:\r\n          return  state;\r\n        case ADD_REACT_ERROR:\r\n          return {\r\n            ...state,\r\n             addReactError:action.payload\r\n          }; \r\n        case DELETE_REACT_SUCCESS:\r\n            return state;\r\n        case DELETE_REACT_ERROR:\r\n            return {\r\n                ...state,\r\n                deleteReactError:action.payload\r\n            }    \r\n        default:\r\n          return state;  \r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default reactReducer;","import { READ_NOTIFICATION_SUCCESS } from './../../actions/actions';\r\n\r\n\r\nconst initState = {readNotificationError:null};\r\n\r\nconst  notificationReducer  =  ( state= initState , action )=>{\r\n        switch(action.type){\r\n          case READ_NOTIFICATION_SUCCESS:\r\n              console.log('notification was read sucessfully');\r\n            return  state; \r\n          default:\r\n            return state;  \r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default notificationReducer;","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport profileReducer from './dataReducers/profileReducer';\r\nimport postReducer from './dataReducers/postReducer';\r\nimport commentReducer from './dataReducers/commentReducer';\r\nimport reactReducer from './dataReducers/reactReducer';\r\nimport notificationReducer from './dataReducers/notificationReducer';\r\n\r\n\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({ \r\n          auth:authReducer,\r\n          firestore:firestoreReducer,\r\n          firebase:firebaseReducer,\r\n          profiles:profileReducer,\r\n          posts:postReducer,\r\n          comments:commentReducer,\r\n          reacts:reactReducer,\r\n          notificationReducer\r\n      });\r\n\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import configurations\n import fbConfig from './config/fbConfig';\n import  firebase from 'firebase/app';\n \n import {Provider,useSelector } from 'react-redux';\n\n import {createStore , applyMiddleware , compose} from 'redux';\n import rootReducer from './store/reducers/rootReducer';\n import thunk from 'redux-thunk';\n import {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from \"react-redux-firebase\";\n\n// wait users to be loaded then render \nconsole.log(isLoaded);\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>  <h1 className=\"text-center text-primary loading\"> Loading ..... </h1> </div>;\n  return children\n}\n\n\n//\n\nconst store = createStore(\n        rootReducer,\n        compose(\n          applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n          reduxFirestore(firebase, fbConfig)      \n        )\n);\n\n\n\n\n\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n}\n\n\nconst rrfProps = {\n  firebase,\n  config: {\n      ...fbConfig,\n      ...profileSpecificProps,\n    } ,   \n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\n\n\nReactDOM.render(\n  \n  <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        {/* <BrowserRouter> */}\n          <AuthIsLoaded>\n            <App/>  { /* Rest of App Components */}\n          </AuthIsLoaded>\n        {/* </BrowserRouter> */}\n      </ReactReduxFirebaseProvider>\n    </Provider>\n,\ndocument.getElementById('root')\n);\n\n\n\n\n\n// ReactDOM.render(\n  \n//     <Provider store={store}>\n//     <ReactReduxFirebaseProvider {...rrfProps}>   \n//       <App />\n//     </ReactReduxFirebaseProvider>\n//   </Provider>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}