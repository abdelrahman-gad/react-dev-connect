{"version":3,"sources":["utils/utilsFuncs.js","components/layout/SignedInLinks.jsx","store/actions/authActions.js","store/actions/actions.js","store/actions/notificationsActions.js","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/auth/SignIn.jsx","variables.js","components/auth/SignUp.jsx","components/dashboard/Educations.jsx","store/actions/profilesActions.js","components/dashboard/Experiences.jsx","components/dashboard/AuthUserDetails.jsx","components/dashboard/Dashboard.jsx","components/posts/comments/AddComment.jsx","store/actions/commentsActions.js","store/actions/reactsActions.js","components/posts/ReactsBar.jsx","components/posts/comments/Comment.jsx","components/posts/comments/Comments.jsx","components/posts/PostDetails.jsx","components/posts/AddPost.jsx","store/actions/postsActions.js","components/posts/PostSummary.jsx","components/posts/Posts.jsx","components/dashboard/EditProfile.jsx","components/dashboard/AddExperience.jsx","components/dashboard/AddEducation.jsx","config/fbConfig.js","components/dashboard/EditProfileImage.jsx","components/layout/NotFoundPage.jsx","components/layout/HomePage.jsx","components/profiles/Developers.jsx","components/profiles/DeveloperDetails.jsx","components/profiles/DeveloperPosts.jsx","components/posts/EditPost.jsx","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/dataReducers/profileReducer.js","store/reducers/dataReducers/postReducer.js","store/reducers/dataReducers/commentReducer.js","store/reducers/dataReducers/reactReducer.js","store/reducers/dataReducers/notificationReducer.js","store/reducers/rootReducer.js","index.js"],"names":["showReadableDateTime","createdAt","nowDateDay","Date","getDate","date","toDate","hours","getHours","minutes","getMinutes","day","month","getMonth","monthName","getMonthName","years","getFullYear","monthNum","SigndInLinks","props","state","showNotifs","handleLogout","bind","e","preventDefault","this","logOut","exact","to","setState","notificationId","readNotification","notifications","unreadNotifications","filter","notification","read","unreadNotificationsCount","length","className","onClick","handleShowNotifs","id","map","notifiableLink","key","handleReadNotication","body","onSubmit","Component","compose","connect","firestore","ordered","auth","firebase","notifiedId","uid","notifierId","sort","a","b","seconds","dispatch","ownProps","getState","getFirebase","signOut","then","type","catch","err","payload","message","getFirestore","collection","doc","update","console","log","firestoreConnect","SignedOutLinks","Navbar","profile","links","React","SignIn","email","password","errors","handleChange","target","value","handleSubmit","signIn","authError","alert","action","placeholder","onChange","creds","credentials","signInWithEmailAndPassword","emailRegex","RegExp","SignUp","handle","confirmPassword","name","valid","newUser","signUp","history","push","test","minLength","createUserWithEmailAndPassword","resp","user","updateProfile","photoURL","set","imageUrl","userId","Educations","showConfirm","deleteElementId","undefined","handleDelete","handleConfirmDelete","handleCancelDelete","educationId","deleteEducation","educations","userEducation","school","field","degree","fromDate","education","delete","Experiences","experienceId","deleteExperience","experiences","userExperience","company","jobTitle","location","experience","AuthUserDetails","deleteAccount","currentUser","Dashboard","src","alt","AddComment","postError","addComment","postId","commentError","cols","rows","comment","commentId","uuid4","posts","data","post","notifiableId","notifyReact","react","comments","notifiable","notificationBody","find","reactableId","reactedId","reactorId","ReactsBar","handleReact","reactType","addReact","reacts","likeReacts","dislikeReacts","loveReacts","oldReact","oldReactObj","reactId","Comment","deleteComment","handleDeleteComment","Comments","PostDetails","slice","match","params","users","commentReacts","AddPost","addPost","authorId","commentCount","likeCount","PostSummary","deletePost","Posts","completePosts","filteredComments","EditProfile","mapProfileDataToState","website","skills","join","githubUsername","bio","facebook","socialLinks","youtube","linkedin","twitter","instagram","nextProps","editableProfile","skillsArr","split","editProfile","disabled","profiles","userHandle","AddExperience","description","emptyInputsError","addExperience","some","input","AddEducation","addEducation","peyload","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","EditProfileImage","profileImage","uploadProgress","noSelectedImgError","handleUpload","mapProfileImageUrlToState","profileImageUrl","files","ref","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","url","editProfileImage","max","NotFoundPage","HomePage","Developers","developers","developer","showReadableDate","skill","i","matchedProfile","DeveloperDetails","handleUrl","includes","window","href","DeveloperPosts","developerId","EditPost","editPost","mapPostToProps","updPost","App","path","component","exaxt","Boolean","hostname","initState","deleteAccountError","authReducer","editProfileErr","addExperienceErr","addEducationErr","editProfileImageErr","profileReducer","deleteEducationErr","addPostError","deletePostError","editPostError","postReducer","addCommentError","deleteCommentError","commentReducer","addReactError","deleteReactError","reactReducer","readNotificationError","notificationReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","AuthIsLoaded","children","useSelector","isLoaded","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cf261dc.chunk.js","sourcesContent":["\r\n\r\nexport  const showReadableDateTime = (createdAt) => {\r\n     \r\n    // let showTime = showTime; \r\n    let nowDateDay = new Date().getDate();\r\n    \r\n     //console.log(nowDateDay);\r\n     \r\n     let date = createdAt.toDate();\r\n     let hours = date.getHours();\r\n     let minutes =date.getMinutes();\r\n     let day =date.getDate();\r\n     let month = date.getMonth();\r\n     let monthName= getMonthName(month);\r\n     let years = date.getFullYear();\r\n\r\n      let readableDateTime;\r\n      if(nowDateDay-day > 1){\r\n        \r\n         readableDateTime = years+\"-\"+monthName+\"-\"+day+\"  \"+hours+\":\"+minutes; \r\n      }else{\r\n        readableDateTime = hours+\":\"+minutes; \r\n      }\r\n\r\n     return readableDateTime;\r\n\r\n}\r\n\r\n\r\nexport  const showReadableDate = (createdAt) => {\r\n     \r\n    \r\n     \r\n     let date = createdAt.toDate();\r\n     \r\n     let day =date.getDate();\r\n     let month = date.getMonth();\r\n     let monthName= getMonthName(month);\r\n     let years = date.getFullYear();\r\n     let  readableDate = years+\"-\"+monthName+\"-\"+day      \r\n     return readableDate;\r\n}\r\n\r\n\r\n\r\nconst getMonthName= (monthNum) => {\r\n    const monthNames = [\"January\", \"February\", \"March\",\r\n                        \"April\", \"May\", \"June\",\r\n                        \"July\", \"August\", \"September\", \r\n                        \"October\", \"November\", \"December\"\r\n                         ];\r\n   return monthNames[monthNum];\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport {logOut} from '../../store/actions/authActions';\r\nimport {readNotification} from '../../store/actions/notificationsActions';\r\nimport { compose } from 'redux';\r\nimport { NavLink , Redirect } from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {showReadableDateTime} from './../../utils/utilsFuncs';\r\nclass  SigndInLinks extends Component  {\r\n      \r\n  constructor(props){\r\n    super(props);\r\n    this.handleLogout= this.handleLogout.bind(this);\r\n  }\r\n  state={\r\n    showNotifs:false\r\n  }\r\n\r\n  handleLogout(e) {\r\n          e.preventDefault();\r\n          //console.log(this.props);\r\n          this.props.logOut();\r\n         return <Redirect exact to=\"/\"  />              \r\n\r\n  }\r\n  handleShowNotifs(e){\r\n    e.preventDefault();\r\n    this.setState({\r\n      showNotifs:!this.state.showNotifs\r\n    })\r\n  }\r\n  handleReadNotication(e,notificationId){\r\n    //console.log('handleSeen func');\r\n    e.preventDefault();\r\n    const {readNotification } = this.props;\r\n    readNotification(notificationId);\r\n  }\r\n  componentDidUpdate(){\r\n    //console.log('component has updated');\r\n  }  \r\n\r\n   \r\n render(){\r\n      const {notifications} = this.props;\r\n      //console.log(notifications);\r\n      const  unreadNotifications= notifications ? [...notifications.filter(notification=>notification.read === false)]:[]; \r\n      let unreadNotificationsCount = unreadNotifications ? unreadNotifications.length:0;\r\n      // console.log(notifications);\r\n      return (\r\n            \r\n    <ul>\r\n        <li>\r\n          <NavLink exact to=\"/dashboard\"> <i className=\"fa fa-user\"></i> <span className=\"hide-sm\"> Dashboard </span> </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/developers\">   Developers </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink  exact to=\"/posts\">Posts</NavLink>\r\n        </li>\r\n        <li  className=\"notifs\">\r\n             \r\n            <a  \r\n              onClick={(e)=>this.handleShowNotifs(e)}\r\n              id=\"notifs\">\r\n            <i className=\"fas fa-globe\"></i>\r\n            <span className=\"hide-sm\">Notifications</span>\r\n            <span className=\"notifs-number\">  {unreadNotificationsCount}  </span>\r\n          </a>\r\n          <div\r\n          \r\n              className={this.state.showNotifs?\"notifs-block show\":\"notifs-block\"}\r\n              id=\"notifs-block\"\r\n               \r\n               >\r\n              {\r\n                notifications && notifications.map(notification=>{\r\n                  return      ( \r\n                                <NavLink \r\n                                      exact to={notification.notifiableLink}\r\n                                      key={notification.notificationId}\r\n                                      className={notification.read?\"seen\":\"\"} \r\n                                      >                             \r\n                                       <span \r\n                                           onClick={(e)=>{this.handleReadNotication(e,notification.notificationId)}}\r\n                                         > \r\n                                          {notification.body}\r\n                                        </span> \r\n                                        <span> at  { showReadableDateTime(notification.createdAt)} </span>\r\n                                  </NavLink>                            \r\n                                    );\r\n                                   })\r\n              \r\n              }\r\n             \r\n          </div>\r\n        </li>\r\n      \r\n\r\n        <form  onSubmit={this.handleLogout} >\r\n            <button className=\"logout-btn\"> Logout  </button>\r\n        </form>\r\n          \r\n      </ul>\r\n    );\r\n\r\n }\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch,ownProps) => {\r\n  \r\n  // ownProps\r\n  //console.log(ownProps);\r\n   \r\n  return {\r\n    logOut: () => dispatch(logOut()),\r\n    readNotification:(notificationId)=>dispatch(readNotification(notificationId))\r\n  }\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n  let notifications = state.firestore.ordered.notifications;\r\n  let auth  = state.firebase.auth;\r\n  //console.log(auth.uid);\r\n  if(notifications){\r\n     notifications = notifications.filter(notification => notification.notifiedId === auth.uid && notification.notifiedId !== notification.notifierId )\r\n     notifications= notifications.sort( (a,b) => b.createdAt.seconds - a.createdAt.seconds );\r\n   //  console.log(notifications);  \r\n  }\r\n  return {\r\n       notifications\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  firestoreConnect([\r\n     {collection:'notifications'}      \r\n    ])\r\n)\r\n(SigndInLinks);\r\n\r\n\r\n","import {   \r\n             SIGNUP_SUCCESS , \r\n             SIGNUP_ERROR , \r\n             SIGNIN_SUCCESS ,\r\n             SIGNIN_ERROR ,\r\n             LOGOUT_SUCCESS,\r\n             LOGOUT_ERROR ,\r\n             ACCOUNT_DELETE_SUCCESS,\r\n             ACCOUNT_DELETE_ERROR\r\n            \r\n            } from './actions';\r\n\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch,getState,{getFirebase,getFirestore})=> {\r\n      const firebase = getFirebase();\r\n    \r\n      firebase.auth().signInWithEmailAndPassword(credentials.email,credentials.password)\r\n      .then( () => dispatch({type:SIGNIN_SUCCESS}))\r\n      .catch(err => {         \r\n            dispatch({type:SIGNIN_ERROR,payload:err.message})\r\n        });\r\n   \r\n            \r\n    }\r\n}\r\n\r\n\r\nexport const  logOut = () =>{\r\n    return (dispatch , getState , {getFirebase} )=>{\r\n        const firebase = getFirebase();\r\n  \r\n        firebase.auth().signOut().then(() => {\r\n          dispatch({ type: LOGOUT_SUCCESS });\r\n        }).catch(err=> dispatch({type:LOGOUT_ERROR , payload: err.message}) );\r\n\r\n    }\r\n}\r\n \r\nexport const signUp = (newUser) =>{\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        console.log(newUser);\r\n         firebase.auth().createUserWithEmailAndPassword(\r\n             newUser.email,\r\n             newUser.password\r\n         ).then( resp => {\r\n            resp.user.updateProfile({\r\n                photoURL:'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200'\r\n            });\r\n            return firestore.collection('users')\r\n            .doc(resp.user.uid)\r\n            .set({\r\n                handle:newUser.handle,\r\n                imageUrl:'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200',\r\n                email:newUser.email,\r\n                createdAt:new Date(),\r\n                userId:resp.user.uid\r\n             })\r\n           }).then(()=>{\r\n               \r\n                dispatch({type:SIGNUP_SUCCESS});\r\n           }).catch(err => {\r\n                dispatch({type:SIGNUP_ERROR,payload:err.message});\r\n           });\r\n             \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const deleteAccount = (  ) => {\r\n    console.log('delete account from actions');\r\n  //  console.log(accountId);\r\n    return (dispatch, getState , {getFirebase , getFirestore} )=>{\r\n        const firebase= getFirebase();\r\n         var  account = firebase.auth().currentUser;\r\n     //    console.log(account);\r\n         account.delete().then(() => dispatch({type:ACCOUNT_DELETE_SUCCESS}))\r\n        .catch( err => dispatch( {type:ACCOUNT_DELETE_ERROR, payload:err.message}));\r\n    }\r\n}","\r\n// auth actions\r\n\r\nconst SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nconst SIGNUP_ERROR = 'SIGNUP_ERROR';\r\nconst SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\r\nconst SIGNIN_ERROR = 'SIGNIN_ERROR';\r\nconst LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nconst LOGOUT_ERROR = 'LOGOUT_ERROR'; \r\n\r\n// account  actions\r\nconst ACCOUNT_DELETE_SUCCESS = 'ACCOUNT_DELETE_SUCCESS';\r\nconst ACCOUNT_DELETE_ERROR='ACCOUNT_DELETE_ERROR';\r\n\r\n\r\n\r\n\r\n// comments actions \r\nconst ADD_COMMENT_SUCCESS= 'ADD_COMMENT_SUCCESS';\r\nconst ADD_COMMENT_ERROR = 'ADD_COMMENT_ERROR';\r\nconst DELETE_COMMENT_SUCCESS='DELETE_COMMENT_SUCCESS';\r\nconst DELETE_COMMENT_ERROR='DELETE_COMMENT_ERROR';\r\n\r\n// notifications actions\r\nconst READ_NOTIFICATION_SUCCESS='READ_NOTIFICATION_SUCCESS';\r\n\r\n// post actions\r\nconst ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nconst ADD_POST_ERROR = 'ADD_POST_ERROR';\r\nconst DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nconst DELETE_POST_ERROR= 'DELETE_POST_ERROR';\r\nconst EDIT_POST_SUCCESS='EDIT_POST_SUCCESS';\r\nconst EDIT_POST_ERROR='EDIT_POST_ERROR';\r\n\r\n\r\n// profile actions\r\nconst EDIT_PROFILEIMAGE_SUCCESS='EDIT_PROFILEIMAGE_SUCCESS';\r\nconst EDIT_PROFILEIMAGE_ERROR='EDIT_PROFILEIMAGE_ERROR';\r\nconst EDIT_PROFILE_SUCCESS='EDIT_PROFILE_SUCCESS';\r\nconst EDIT_PROFILE_ERROR='EDIT_PROFILE_ERROR';\r\nconst ADD_EXPERIENCE_SUCCESS='ADD_EXPERIENCE_SUCCESS';\r\nconst ADD_EXPERIENCE_ERROR='ADD_EXPERIENCE_ERROR';\r\nconst DELETE_EXPERIENCE_SUCCESS='DELETE_EXPERIENCE_SUCCESS';\r\nconst DELETE_EXPERIENCE_ERROR='DELETE_EXPERIENCE_ERROR';\r\nconst ADD_EDUCATION_SUCCESS='ADD_EDUCATION_SUCCESS';\r\nconst ADD_EDUCATION_ERROR='ADD_EDUCATION_ERROR';\r\nconst DELETE_EDUCATION_SUCCESS='DELETE_EDUCATION_SUCCESS';\r\nconst DELETE_EDUCATION_ERROR='DELETE_EDUCATION_ERROR';\r\n\r\n\r\n\r\n// reacts actions\r\nconst ADD_REACT_SUCCESS='ADD_REACT_SUCCESS';\r\nconst ADD_REACT_ERROR='ADD_REACT_ERROR';\r\nconst DELETE_REACT_SUCCESS='DELETE_REACT_SUCCESS';\r\nconst DELETE_REACT_ERROR='DELETE_REACT_ERROR';\r\n\r\n\r\nexport {\r\n        SIGNUP_SUCCESS , SIGNUP_ERROR , SIGNIN_SUCCESS  , SIGNIN_ERROR  , LOGOUT_SUCCESS , LOGOUT_ERROR , ACCOUNT_DELETE_SUCCESS,ACCOUNT_DELETE_ERROR,\r\n        ADD_COMMENT_SUCCESS ,ADD_COMMENT_ERROR, DELETE_COMMENT_SUCCESS ,  DELETE_COMMENT_ERROR,\r\n        READ_NOTIFICATION_SUCCESS ,\r\n        ADD_POST_SUCCESS ,ADD_POST_ERROR ,DELETE_POST_SUCCESS , DELETE_POST_ERROR, EDIT_POST_SUCCESS , EDIT_POST_ERROR,\r\n        EDIT_PROFILEIMAGE_SUCCESS , EDIT_PROFILEIMAGE_ERROR , EDIT_PROFILE_SUCCESS , EDIT_PROFILE_ERROR , ADD_EXPERIENCE_SUCCESS , ADD_EXPERIENCE_ERROR , DELETE_EXPERIENCE_SUCCESS , DELETE_EXPERIENCE_ERROR , ADD_EDUCATION_SUCCESS , ADD_EDUCATION_ERROR , DELETE_EDUCATION_SUCCESS ,DELETE_EDUCATION_ERROR ,\r\n        ADD_REACT_SUCCESS ,ADD_REACT_ERROR , DELETE_REACT_SUCCESS ,DELETE_REACT_ERROR\r\n  }\r\n","\r\nimport { READ_NOTIFICATION_SUCCESS } from './actions';\r\n\r\nexport const readNotification = (notificationId)=>{\r\n    return (dispatch,getState , {getFirebase,getFirestore})=>{\r\n          const firestore = getFirestore();\r\n          firestore.collection('notifications').doc(notificationId).update({           \r\n              read:true\r\n          }).then(()=>dispatch({type:READ_NOTIFICATION_SUCCESS}));\r\n                 console.log('notification read Succesfuly');\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () =>{\r\n\r\n return (\r\n     <ul>\r\n        <li>\r\n         <NavLink to=\"/signup\">SignUp </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/signin\"> Login </NavLink>\r\n        </li>\r\n         \r\n     </ul>\r\n );\r\n}\r\n\r\nexport default SignedOutLinks;\r\n\r\n\r\n\r\n","import React  from 'react';\r\nimport SigndInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Navbar extends React.Component {\r\n\r\n\r\n    render(){\r\n           const { auth , profile } = this.props;\r\n           const  links = auth.uid ?  <SigndInLinks profile={profile} />:<SignedOutLinks />;\r\n            \r\n\r\n        return(\r\n            <section> \r\n                <nav className=\"navbar bg-dark\">\r\n                    <h1>\r\n                    <NavLink to=\"/dashboard\">\r\n                        <i className=\"fas fa-code\"></i>DevConnect\r\n                    </NavLink>               \r\n                    </h1>\r\n                    <ul>\r\n                    {links}\r\n\r\n                    </ul>\r\n                </nav>\r\n                \r\n           </section>\r\n          \r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const auth=state.firebase.auth;\r\n    const profile=state.firebase.profile;\r\n     return{\r\n         auth,\r\n         profile\r\n     }\r\n}\r\n\r\nexport default connect(mapStateToProps) (Navbar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect,NavLink} from 'react-router-dom';\r\nimport {signIn } from '../../store/actions/authActions';\r\n\r\n\r\n\r\n\r\nclass SignIn  extends React.Component{\r\n\r\n  state={\r\n    email:'',\r\n    password:'',\r\n    errors:{\r\n      email:'',\r\n      password:''\r\n    }\r\n  }\r\n  \r\n handleChange = (e) =>{\r\n  e.preventDefault();\r\n  this.setState({\r\n    [e.target.id]:e.target.value\r\n  })\r\n}\r\n\r\n\r\nhandleSubmit = (e) => {\r\n     e.preventDefault();\r\n    \r\n    if(this.state.email.length>0 && this.state.password.length>0   ) {\r\n      this.props.signIn(this.state);\r\n    }\r\n}\r\n\r\n\r\nrender(){\r\n  const {authError , auth  } = this.props;\r\n  let alert =  authError ? <div className=\"alert alert-danger\"> {authError} </div>:\"\";\r\n//  console.log('from sign in component');\r\n//   console.log(auth.uid);\r\n  if(authError || !auth.uid ){\r\n  return (\r\n    <section className=\"container\">\r\n     \r\n    <form action=\"dashboard.html\" className=\"form\" onSubmit={this.handleSubmit}>\r\n      {alert}\r\n      <div className=\"form-group\">\r\n        <input \r\n          type=\"email\" \r\n          placeholder=\"Email Address\"   \r\n          id=\"email\" \r\n          onChange={this.handleChange} \r\n          value={this.state.email}\r\n          \r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input \r\n           type=\"password\" \r\n           placeholder=\"password\"  \r\n           id=\"password\" \r\n           onChange={this.handleChange} \r\n               \r\n        />\r\n\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign In\" />\r\n      </div>\r\n    </form>\r\n    <p className=\"my-1\">\r\n      Don't have an account ? <NavLink exact to=\"/signup\"> Sign Up  </NavLink>\r\n    </p>\r\n  </section>  \r\n  );\r\n\r\n  }else if(auth.uid){ \r\n    return <Redirect exact to=\"/dashboard\" />\r\n  }\r\n   \r\n \r\n}\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n  const auth = state.firebase.auth;\r\n      // console.log(state);\r\n  return {\r\n    authError:state.auth.authError,\r\n    auth:auth\r\n  }\r\n}\r\n\r\nexport default connect( mapStateToProps , mapDispatchToProps) (SignIn);","// admin credentialz\r\nconst adminId='y1zTOWm2KUgXa0UVA09qnkgXkdR2';\r\n const adminEmail='admin@admin.com';\r\n const adminPassword='admin123';\r\n\r\n// some form input regular expressions\r\n const emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n  );\r\n\r\n  const nameAndAddressRegex = RegExp(\r\n    /\\S+\\s+\\S+\\s+\\S+/\r\n ); \r\n const phoneRegex = RegExp(\r\n    /(201)[0-9]{9}/\r\n  );\r\n\r\n export {emailRegex,nameAndAddressRegex,phoneRegex}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect } from 'react-redux';\r\n// import {compose} from 'redux';\r\n// import { firestoreConnect } from 'react-redux-firebase';\r\nimport {signUp } from '../../store/actions/authActions';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n\r\nimport { emailRegex } from '../../variables';\r\nclass SignUp extends React.Component {\r\n\r\n   state = {\r\n     handle:'',\r\n     email:'',\r\n     password:'',\r\n     confirmPassword:'',\r\n     errors:{\r\n       password:'',\r\n       email:'',\r\n       name:''\r\n     }\r\n   }\r\n    handleChange =(e)=>{\r\n      this.setState({\r\n        [e.target.id]:e.target.value\r\n      });\r\n\r\n    }\r\n    handleSubmit= (e) =>{\r\n      e.preventDefault();\r\n      const {handle,email,password,confirmPassword} = this.state;\r\n    \r\n       if(!this.valid(handle ,email,password,confirmPassword)){\r\n         \r\n       }\r\n\r\n       else{\r\n        const {handle,email,password} = this.state;\r\n        const newUser = {handle,email,password} ;\r\n        const {signUp} = this.props;\r\n        signUp(newUser);\r\n        this.props.history.push(\"/dashboard\");\r\n       }      \r\n    }\r\n\r\n\r\n     valid(handle,email, password,confirmPassword){\r\n         if(handle.length<3){\r\n            this.setState({\r\n              errors:{\r\n                password:'',\r\n                email:'',\r\n                handle:'Name Shoud be 3 Characters at least'\r\n              }\r\n            });\r\n            return false;\r\n         }\r\n         if(!emailRegex.test(email)){\r\n          this.setState({\r\n            errors:{\r\n              password:'',\r\n              handle:'',\r\n              email:'email format not valid'\r\n            }\r\n          });\r\n          return false;\r\n         }\r\n         if(password!==confirmPassword){\r\n          this.setState({\r\n            errors:{\r\n              handle:'',\r\n              email:'',\r\n              password:'password must be equel to confirm password'\r\n            }\r\n          });\r\n\r\n          return false;\r\n         }\r\n\r\n         if(password.length<6){\r\n          this.setState({\r\n            errors:{\r\n              handle:'',\r\n              email:'',\r\n              password:'password length should be 6 characters at least'\r\n            }\r\n          });\r\n          return false;\r\n         }\r\n         return true;\r\n     }\r\n\r\n   \r\n\r\n render(){\r\n   //console.log(this.props);\r\n   const {errors} =this.state;\r\n   const {auth} = this.props;\r\n   if(auth.uid){\r\n     return <Redirect exact to=\"/dashboard\" />\r\n   }else {\r\n\r\n    return (\r\n      <section className=\"container\" >\r\n    \r\n      <div className=\"content\">\r\n       \r\n        <h1 className=\"large text-primary\">Sign up</h1>\r\n        \r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Create New Account</p>\r\n        <form action=\"dashboard.html\" className=\"form\" onSubmit={this.handleSubmit} >\r\n\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n             type=\"text\"   \r\n             placeholder=\"Enter name\"   \r\n             id=\"handle\"\r\n             onChange={this.handleChange}\r\n             />\r\n             <p className=\"text-danger\"> {errors.handle} </p>\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <input\r\n               type=\"email\"\r\n               placeholder=\"Email Address\" \r\n               id=\"email\" \r\n               minLength=\"6\"\r\n               onChange={this.handleChange}\r\n                />\r\n             <p className=\"text-danger\"> {errors.email} </p>\r\n\r\n          </div>\r\n  \r\n          <div className=\"form-group\">\r\n            <input \r\n            type=\"password\" \r\n            placeholder=\"password\"  \r\n            id=\"password\" \r\n            onChange={this.handleChange}\r\n            />\r\n             <p className=\"text-danger\"> {errors.password} </p>\r\n\r\n          </div>\r\n  \r\n          <div className=\"form-group\">\r\n            <input\r\n               type=\"password\"\r\n               placeholder=\"confirm password\" \r\n               id=\"confirmPassword\" \r\n               onChange={this.handleChange}\r\n               />\r\n              <p className=\"text-danger\"> {errors.password} </p>\r\n\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button  className=\"btn btn-primary\" value=\"Register\" >   Sign up   </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"my-1\">\r\n          Already have an account ? <NavLink to=\"/signin\"> sign in </NavLink>\r\n        </p>\r\n      </div>\r\n  \r\n    </section>\r\n  );\r\n   }\r\n\r\n }\r\n    \r\n\r\n  \r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const auth = state.firebase.auth;\r\n    return {\r\n        authError:null,\r\n        auth:auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch ) => {\r\n    return {\r\n        signUp:(newUser)=> dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default  \r\nconnect( mapStateToProps , mapDispatchToProps ) (SignUp);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\n\r\nimport {deleteEducation} from '../../store/actions/profilesActions';\r\n\r\n\r\nclass Educations extends React.Component{\r\n\r\n\r\n constructor(props){\r\n    super(props);\r\n    this.state={\r\n         showConfirm:false,\r\n         deleteElementId:undefined\r\n     }\r\n     this.handleDelete=this.handleDelete.bind(this);\r\n     this.handleConfirmDelete = this.handleConfirmDelete.bind(this); \r\n     this.handleCancelDelete = this.handleCancelDelete.bind(this); \r\n\r\n }\r\n\r\n\r\n    handleDelete(e, educationId){\r\n        //console.log('handleDelete education method');\r\n        //console.log(educationId);\r\n        e.preventDefault();\r\n        this.setState({\r\n            showConfirm:true,\r\n            deleteElementId:educationId\r\n        });\r\n    //    console.log(this.state);\r\n       \r\n    }\r\n    handleConfirmDelete(e){\r\n       this.props.deleteEducation(this.state.deleteElementId);\r\n       e.preventDefault();\r\n       this.setState({\r\n           showConfirm:false,\r\n           deleteElementId:undefined\r\n       });\r\n    }\r\n    handleCancelDelete(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            showConfirm:false,\r\n            deleteElementId:undefined\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n render(){\r\n     //console.log('Eductions Component');\r\n     //console.log(this.props.auth);\r\n     //console.log(this.props.profile);\r\n        //console.log(this.state);\r\n        const { educations } = this.props; \r\n        //console.log(educations);   \r\n        // //console.log(Object.entries(educations));\r\n        if(educations && educations.length > 0){\r\n          \r\n            return (\r\n                <div>\r\n\r\n                {/* add ConfirmDelte Modal  */}\r\n                    \r\n                        <div  className={ this.state.showConfirm ? \"modal modal-show\" : \"modal\"  } >\r\n                                <p className=\"modal-text text-primary\">  Are you sure you want to delete this education element from your profile  ? </p>\r\n                                <p className=\"modal-actions text-center\"> \r\n                                    <button \r\n                                     className=\"btn btn-primary\"\r\n                                     onClick={ (e) => this.handleCancelDelete(e)} > cancel </button>   \r\n                                    <button \r\n                                       className=\"btn btn-danger\"\r\n                                       onClick = {(e)=>this.handleConfirmDelete(e)}\r\n                                       >  yes </button>\r\n                                </p> \r\n                        </div>\r\n                {/* end Confirm delete modal  */}\r\n\r\n\r\n                 <h2 className=\"my-2\">\r\n                  Education Credential\r\n                 </h2>\r\n                 <table className=\"table\">\r\n                 <thead>\r\n                     <tr>\r\n                     <th>School</th>\r\n                      <th>Field</th>\r\n                     <th className=\"hide-sm\">Degree</th>\r\n                     <th className=\"hide-sm\">Years</th>\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                    {\r\n                        educations.map(userEducation=>{\r\n                            return(\r\n                                <tr key={userEducation.id}>\r\n                                    <td> {userEducation.school} </td>\r\n                                    <td> {userEducation.field} </td>\r\n\r\n                                    <td> {userEducation.degree} </td>\r\n                                    <td>  {userEducation.fromDate} / {userEducation.toDate} </td>\r\n                                    <td>\r\n                                        <button \r\n                                            className=\"btn btn-danger\" \r\n                                            onClick={(e)=>this.handleDelete( e , userEducation.id)} \r\n                                            >\r\n                                           delete\r\n                                        </button>\r\n                                            \r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }\r\n                 </tbody>\r\n               </table>\r\n              </div>\r\n         \r\n              );\r\n        }else{\r\n            return null;\r\n        }\r\n    \r\n }\r\n\r\n}\r\n\r\nconst  mapStateToProps = (state)=>{\r\n\r\n      const userId=state.firebase.auth.uid;\r\n    //   //console.log(userId);\r\n    // //    let  profiles = state.firestore.data;\r\n    let educations = state.firestore.ordered.educations;\r\n    const profile = state.firebase.profile;\r\n    const auth=state.firebase.auth;\r\n     if(educations){\r\n         educations = educations.filter(education=>education.userId === userId);\r\n         return{\r\n            auth,\r\n            profile,\r\n            educations\r\n       }\r\n \r\n    }else return{};\r\n    \r\n      \r\n}\r\nconst mapDispatchToProps=( dispatch )=>{\r\n     \r\n    return {\r\n        deleteEducation:(educationId)=>dispatch(deleteEducation(educationId))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default \r\n        compose(\r\n            connect(mapStateToProps,mapDispatchToProps),\r\n            firestoreConnect([\r\n                {collection:'educations'}])\r\n                )\r\n        (Educations);","import {v4 as uuid4} from 'uuid';\r\nimport {  \r\n            EDIT_PROFILEIMAGE_SUCCESS , \r\n            EDIT_PROFILEIMAGE_ERROR , \r\n            EDIT_PROFILE_SUCCESS , \r\n            EDIT_PROFILE_ERROR , \r\n            ADD_EXPERIENCE_SUCCESS , \r\n            ADD_EXPERIENCE_ERROR , \r\n            DELETE_EXPERIENCE_SUCCESS ,\r\n            DELETE_EXPERIENCE_ERROR , \r\n            ADD_EDUCATION_SUCCESS , \r\n            ADD_EDUCATION_ERROR , \r\n            DELETE_EDUCATION_SUCCESS ,\r\n            DELETE_EDUCATION_ERROR \r\n        } \r\n        from './actions';\r\nexport const editProfileImage = ( profileImageUrl ) => {\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        console.log('editprofile image from actions');\r\n        const firestore = getFirestore();\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('users').doc(authorId).update({\r\n            imageUrl:profileImageUrl\r\n        }).then(()=>{\r\n            dispatch({type:EDIT_PROFILEIMAGE_SUCCESS});\r\n        }).catch(err=>{\r\n           dispatch( {type:EDIT_PROFILEIMAGE_ERROR, peyload: err.message});\r\n        });\r\n    }\r\n}\r\n\r\nexport const editProfile = (editableProfile) => {\r\n    return (dispatch,getState,{ getFirebase , getFirestore})=>{\r\n            console.log('edit profile from actions');\r\n            const firestore = getFirestore();\r\n            const profile = getState().firebase.profile;\r\n            console.log(profile);\r\n            console.log(editableProfile);\r\n          \r\n            \r\n            const authorId  = getState().firebase.auth.uid;\r\n            firestore.collection('profiles').doc(authorId).set({\r\n                location:editableProfile.location,\r\n                jobTitle:editableProfile.jobTitle,\r\n                company:editableProfile.company,\r\n                bio:editableProfile.bio,\r\n                githubUsername:editableProfile.githubUsername,\r\n                website:editableProfile.website,\r\n                skills:editableProfile.skillsArr,\r\n                socialLinks:editableProfile.socialLinks,\r\n                userHandle:profile.handle,      \r\n                userId:authorId\r\n            }).then(()=>{\r\n                 dispatch({type:EDIT_PROFILE_SUCCESS});\r\n            }).catch(err=> dispatch({type:EDIT_PROFILE_ERROR, payload: err.message}));\r\n    }\r\n}\r\n\r\nexport const addExperience = ( experience ) => { \r\n       return (dispatch , getState , { getFirebase  ,  getFirestore})=>{\r\n             //  console.log(experience);\r\n             const firestore = getFirestore();\r\n       \r\n             const authorId  = getState().firebase.auth.uid;\r\n   \r\n             let experienceId = uuid4();\r\n   \r\n             firestore.collection('experiences').doc(experienceId).set({\r\n                       ...experience,\r\n                       id:experienceId,\r\n                       userId:authorId\r\n                    }).then(()=>{\r\n                        dispatch({type:ADD_EXPERIENCE_SUCCESS});\r\n                    }).catch(err=>{\r\n                        dispatch({type:ADD_EXPERIENCE_ERROR, payload:err.message});\r\n                    });\r\n                    \r\n    }\r\n}\r\n\r\n\r\nexport const deleteExperience=(experienceId)=>{\r\n    console.log('from actions');\r\n    console.log(experienceId);\r\n   return (dispatch,getState,{getFirebase,getFirestore}) =>{\r\n        const firestore = getFirestore();\r\n        firestore.collection('experiences').doc(experienceId).delete()\r\n           .then(()=>{\r\n                dispatch({type:DELETE_EXPERIENCE_SUCCESS});\r\n            }).catch(err=>{\r\n                dispatch({type:DELETE_EXPERIENCE_ERROR,payload:err.message});\r\n            });                \r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addEducation = (education)=>{\r\n    return (dispatch,getState,{getFirebase,getFirestore}) =>{\r\n            \r\n             //  console.log(experience);\r\n          const firestore = getFirestore();\r\n       \r\n          const authorId  = getState().firebase.auth.uid;\r\n\r\n          let educationId = uuid4();\r\n\r\n          firestore.collection('educations').doc(educationId).set({\r\n                    ...education,\r\n                    id:educationId,\r\n                    userId:authorId\r\n                 }).then(()=>{\r\n                     dispatch({type:ADD_EDUCATION_SUCCESS});\r\n                 }).catch(err=>{\r\n                     dispatch({type:ADD_EDUCATION_ERROR , peyload: err.message });\r\n                 });\r\n  }\r\n}\r\n\r\nexport const deleteEducation=(educationId)=>{\r\n    console.log('from actions');\r\n    console.log(educationId);\r\n   return (dispatch,getState,{getFirebase,getFirestore}) =>{\r\n        const firestore = getFirestore();\r\n        firestore.collection('educations').doc(educationId).delete()\r\n           .then(()=>{\r\n                dispatch({type:DELETE_EDUCATION_SUCCESS});\r\n            }).catch(err=>{\r\n                dispatch({type:DELETE_EDUCATION_ERROR , payload: err.message });\r\n            });                \r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport {deleteExperience} from '../../store/actions/profilesActions';\r\n\r\n\r\nclass Experiences extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showConfirm:false,\r\n            deleteElementId:undefined\r\n        }\r\n        this.handleDelete=this.handleDelete.bind(this);\r\n        this.handleConfirmDelete = this.handleConfirmDelete.bind(this); \r\n        this.handleCancelDelete = this.handleCancelDelete.bind(this); \r\n\r\n    }\r\n\r\n\r\n        handleDelete(e, experienceId){\r\n            //console.log('handleDelete education method');\r\n            //console.log(educationId);\r\n            e.preventDefault();\r\n            this.setState({\r\n                showConfirm:true,\r\n                deleteElementId:experienceId\r\n            });\r\n        // console.log(this.state);\r\n        \r\n        }\r\n        handleConfirmDelete(e){\r\n        this.props.deleteExperience(this.state.deleteElementId);\r\n        e.preventDefault();\r\n        this.setState({\r\n            showConfirm:false,\r\n            deleteElementId:undefined\r\n        });\r\n        }\r\n        handleCancelDelete(e){\r\n            e.preventDefault();\r\n            this.setState({\r\n                showConfirm:false,\r\n                deleteElementId:undefined\r\n            });\r\n        }\r\n\r\n\r\n\r\n render(){\r\n     //console.log('Eductions Component');\r\n     //console.log(this.props.auth);\r\n     ////console.log(this.props.profile);\r\n        const { experiences } = this.props; \r\n        // //console.log(Object.entries(educations));\r\n        if(experiences && experiences.length>0){\r\n          \r\n            return (\r\n                <div>\r\n\r\n                {/* add ConfirmDelte Modal  */}                   \r\n                <div  className={ this.state.showConfirm ? \"modal modal-show\" : \"modal\"  } >\r\n                                <p className=\"modal-text text-primary\"> Are you sure you want to delete this experience element from your profile  ? </p>\r\n                                <p className=\"modal-actions text-center\"> \r\n                                    <button \r\n                                     className=\"btn btn-primary\"\r\n                                     onClick={ (e) => this.handleCancelDelete(e)} > cancel </button>   \r\n                                    <button \r\n                                       className=\"btn btn-danger\"\r\n                                       onClick = {(e)=>this.handleConfirmDelete(e)}\r\n                                       >  yes </button>\r\n                                </p> \r\n                        </div>\r\n                {/* end Confirm delete modal  */}\r\n\r\n\r\n                 <h2 className=\"my-2\">\r\n                 Experience Credential\r\n                 </h2>\r\n                 <table className=\"table\">\r\n                 <thead>\r\n                     <tr>\r\n                        <th>company</th>\r\n                        <th className=\"hide-sm\">jobTitle</th>\r\n                        <th className=\"hide-sm\">location</th>\r\n                        <th className=\"hide-sm\">duration</th>\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                    {\r\n                        experiences.map(userExperience=>{\r\n                            return(\r\n                                <tr key={userExperience.id}>\r\n                                    <td> {userExperience.company} </td>\r\n                                    <td> {userExperience.jobTitle} </td>\r\n                                    <td> {userExperience.location} </td>\r\n\r\n                                    <td>  {userExperience.fromDate} / {userExperience.toDate} </td>\r\n                                    <td>\r\n                                        <button \r\n                                            className=\"btn btn-danger\" \r\n                                            onClick={(e)=>this.handleDelete(e,userExperience.id)} \r\n                                            >\r\n                                           delete\r\n                                        </button>\r\n                                            \r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }\r\n                 </tbody>\r\n               </table>\r\n              </div>\r\n         \r\n              );\r\n        }else{\r\n            return null;\r\n        }\r\n    \r\n }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n\r\n      const userId=state.firebase.auth.uid;\r\n    //   //console.log(userId);\r\n    // //    let  profiles = state.firestore.data;\r\n    let experiences=state.firestore.ordered.experiences;\r\n    const auth = state.firebase.auth;\r\n    const profile=state.firebase.profile;\r\n    //console.log(state);\r\n      if(experiences){\r\n          experiences=experiences.filter(experience => experience.userId===userId);\r\n        return{\r\n            auth,\r\n            profile,\r\n            experiences\r\n       }  \r\n      } else return {};\r\n      \r\n}\r\nconst mapDispatchToProps=(dispatch,ownProps)=>{\r\n  //  console.log(ownProps);\r\n    return {\r\n        deleteExperience:(experienceId)=>dispatch(deleteExperience(experienceId))\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default \r\ncompose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([\r\n         {\r\n            collection:'experiences',         \r\n         }\r\n        ]))\r\n(Experiences);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport Educations from './Educations';\r\nimport Experiences from './Experiences';\r\nimport {deleteAccount} from '../../store/actions/authActions';\r\nclass AuthUserDetails extends React.Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n             showConfirm:false\r\n          \r\n         }\r\n         this.handleDelete=this.handleDelete.bind(this);\r\n         this.handleConfirmDelete = this.handleConfirmDelete.bind(this); \r\n         this.handleCancelDelete = this.handleCancelDelete.bind(this); \r\n    \r\n    }\r\n  \r\n    handleDelete(e){\r\n        //console.log('handleDelete education method');\r\n        //console.log(educationId);\r\n        e.preventDefault();\r\n        this.setState({\r\n            showConfirm:true      \r\n        });\r\n    //    console.log(this.state);\r\n       \r\n    }\r\n    handleConfirmDelete(e){\r\n       this.props.deleteAccount(this.state.deleteElementId);\r\n       e.preventDefault();\r\n       this.setState({\r\n           showConfirm:false      \r\n       });\r\n    }\r\n\r\n    handleCancelDelete(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            showConfirm:false\r\n           \r\n        });\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        //console.log('from Auth user Details');\r\n        //console.log(this.props);\r\n        const { auth } = this.props;\r\n        // console.log(auth.uid);\r\n        return  (\r\n            <div>\r\n\r\n\r\n\r\n\r\n\r\n                     <Experiences />\r\n                   {/* educations Component */}\r\n                     <Educations/>\r\n\r\n\r\n                      {/* add ConfirmDelte Modal  */}\r\n                    \r\n                        <div  className={ this.state.showConfirm ? \"modal modal-show\" : \"modal\"  } >\r\n                                <p className=\"modal-text text-primary\"> Are you sure you want to delete  your account ? </p>\r\n                                <p className=\"modal-actions text-center\"> \r\n                                    <button \r\n                                     className=\"btn btn-primary\"\r\n                                     onClick={ (e) => this.handleCancelDelete(e)} > cancel </button>   \r\n                                    <button \r\n                                       className=\"btn btn-danger\"\r\n                                       onClick = {(e)=>this.handleConfirmDelete(e)}\r\n                                       >  yes </button>\r\n                                </p> \r\n                        </div>\r\n                {/* end Confirm delete modal  */}\r\n\r\n\r\n                    <div className=\"my-2\">\r\n                    <button \r\n                         className=\"btn btn-danger\"\r\n                         onClick={(e) => this.handleDelete( e ) }\r\n                         >\r\n                        <i className=\"fas fa-user-minus\">Delete My Account</i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n           );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    const auth=state.firebase.auth;\r\n    const profile = state.firebase.profile;\r\n    return {\r\n       auth,\r\n       profile    \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch )=>{\r\n    return {\r\n        deleteAccount: () => dispatch(deleteAccount()) \r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([{collection:'profiles'}])\r\n  )\r\n  (AuthUserDetails);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport AuthUserDetails from './AuthUserDetails';\r\nclass Dashboard  extends React.Component {\r\n     \r\n     render(){\r\n      const { auth , profile } = this.props; \r\n      //console.log(profile);\r\n      if(auth.uid === undefined){\r\n         return  <Redirect to=\"/\" />\r\n       } else{\r\n          //console.log(profile.imageUrl);\r\n          return (\r\n                <section className=\"container\"> \r\n                \r\n                       <h1 className=\"large text-primary\">\r\n                         My Profile Page\r\n                       </h1>\r\n                       <p className=\"lead\">\r\n                       <i className=\"fas fa-user\"></i>\r\n                       Welcome: { profile.handle}\r\n                       </p>\r\n                       {/* user actions */}\r\n                       <div>\r\n                        \r\n                      {\r\n                       profile.imageUrl!== undefined ? <img  className=\"profile-img\" src={profile.imageUrl} alt=\"user image\"/>:<img  className=\"profile-img\" src={process.env.PUBLIC_URL+'/imgs/default-user-img.jpeg'} />\r\n                      }\r\n                       \r\n                     \r\n                       </div>\r\n                       <div className=\"dash-button\">\r\n                            \r\n                       <NavLink to={\"/editProfile/\"+auth.uid} className=\"btn\">\r\n                            <i className=\"fas fa-user-circle text-primary\"></i>\r\n                            <span>  Edit Profile  </span>\r\n                       </NavLink>\r\n                       <NavLink exact to={\"/editProfileImage/\"+auth.uid} className=\"btn\">\r\n                           <i className=\"fas fa-camera-retro\"></i>\r\n                           <span>  Edit Profile Image </span>\r\n                       </NavLink>\r\n                       <NavLink to={\"/addExperience/\"+auth.uid} className=\"btn\">\r\n                            <i className=\"fab fa-black-tie text-primary mr-2\"></i>\r\n                            <span> Add Exprerience  </span>\r\n                       </NavLink>\r\n                       <NavLink to={\"/addEducation/\"+auth.uid } className=\"btn\">\r\n                           <i className=\"fas fa-graduation-cap text-primary mr-2\"></i>\r\n                           <span> Add Eduction  </span>\r\n                       </NavLink>\r\n                       <NavLink className=\"btn\" exact to={\"/developerPosts/\"+auth.uid} >\r\n                             <i className=\"fas fa-comment-alt text-primary mr-2\"></i>\r\n                             <span>  my Posts </span> \r\n                       </NavLink>                             \r\n                       </div>\r\n   \r\n   {/* end users action */}\r\n   \r\n   {/* profile data */}\r\n                    <AuthUserDetails  />\r\n   {/* end profile data */}\r\n               </section>\r\n   \r\n        ); \r\n     }\r\n            \r\n     }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n   const   auth   = state.firebase.auth;\r\n   const   profile =state.firebase.profile;\r\n     return {\r\n        auth,\r\n        profile\r\n     }\r\n}\r\n\r\n\r\nexport default compose(\r\n     connect(mapStateToProps,null),\r\n     firestoreConnect([{collection:'profiles'}])\r\n   )\r\n   (Dashboard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addComment} from '../../../store/actions/commentsActions';\r\n\r\nclass AddComment  extends React.Component{\r\n    state={\r\n        body:'',\r\n        postError:''\r\n    }\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n       this.handleChange=this.handleChange.bind(this);\r\n       this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        });\r\n        //console.log(this.state);\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const {addComment , postId , auth} = this.props;\r\n        //console.log(postId);\r\n        //console.log(auth);\r\n\r\n        if(this.state.body.length < 1){\r\n            this.setState({\r\n                commentError:'Plz, add comment , then press comment button'\r\n            });\r\n        }else{\r\n             //console.log(postId);\r\n             //console.log(auth.uid);\r\n            addComment({\r\n                    body:this.state.body,\r\n                    postId:postId,\r\n                    userId:auth.uid                                 \r\n                });\r\n\r\n\r\n            this.setState({\r\n                body:'',\r\n                commentError:''\r\n            });\r\n\r\n        }\r\n       \r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n          <div className=\"form\">\r\n            <form   onSubmit={this.handleSubmit}> \r\n            <p className=\"text-danger my-1\"> {this.state.commentError} </p>\r\n\r\n                <textarea \r\n                   name=\"\"\r\n                   className=\"comment\" \r\n                   id=\"body\" \r\n                   cols=\"30\" \r\n                   rows=\"5\" \r\n                   placeholder=\"add comment on post\"\r\n                   onChange={this.handleChange}\r\n                   value={this.state.body}\r\n                   ></textarea>\r\n                <button type=\"submit\" className=\"btn\"> Comment </button>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        addComment:(comment)=>dispatch(addComment(comment))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (AddComment);\r\n\r\n","import {v4 as uuid4} from 'uuid'; \r\nimport {\r\n      ADD_COMMENT_SUCCESS ,\r\n      ADD_COMMENT_ERROR,\r\n      DELETE_COMMENT_SUCCESS , \r\n      DELETE_COMMENT_ERROR \r\n    }  from './actions';\r\n\r\n\r\nexport const addComment = (comment) =>{\r\n   //  console.log(comment);\r\n    return (dispatch, getState , {getFirebase,getFirestore})=>{\r\n\r\n        let   commentId = uuid4(); \r\n        const firestore = getFirestore();\r\n         console.log(commentId);\r\n\r\n        firestore.collection('comments').doc(commentId).set({\r\n            ...comment,\r\n            commentId:commentId,\r\n            createdAt:new Date()     \r\n        }).then(()=>dispatch({type:ADD_COMMENT_SUCCESS}))\r\n          .catch(err=>dispatch({type:ADD_COMMENT_ERROR,payload:err.message}));\r\n\r\n\r\n         let notificationId= uuid4(); \r\n\r\n         // notifiedId \r\n        let   posts =  getState().firestore.data.posts;\r\n        let   post  = posts ? posts[comment.postId]:undefined;\r\n      \r\n        if(post){\r\n            firestore.collection('notifications').doc(notificationId).set({\r\n                notificationId,\r\n                notifierId:comment.userId,\r\n                notifiableId:comment.postId,\r\n                notifiableLink:\"/post/\"+comment.postId,\r\n                notifiedId:post.userId,            \r\n                createdAt:new Date(),\r\n                read:false,\r\n                body:'someone commented on on your post'\r\n          });\r\n        }\r\n       \r\n\r\n    }\r\n}\r\n\r\nexport const deleteComment= (commentId)=>{\r\n    return (dispatch,getState, {getFirebase, getFirestore } )=>{\r\n       const firestore= getFirestore();\r\n       firestore.collection('comments').doc(commentId).delete()\r\n       .then(()=>dispatch({type:DELETE_COMMENT_SUCCESS}))\r\n       .catch(err=>dispatch({type:DELETE_COMMENT_ERROR , payload: err.message }))\r\n\r\n    }\r\n}\r\n\r\n","import {v4 as uuid4} from 'uuid';\r\nimport {  \r\n           ADD_REACT_SUCCESS,\r\n           ADD_REACT_ERROR , \r\n           DELETE_REACT_SUCCESS ,\r\n           DELETE_REACT_ERROR\r\n } from './actions';\r\n\r\nexport const addReact = ( react ) => {\r\n   // console.log(react);\r\n    return (dispatch, getState , { getFirebase , getFirestore})=>{\r\n\r\n        // let   commentId = uuid4(); \r\n        const firestore = getFirestore();\r\n        const posts = getState().firestore.ordered.posts;\r\n        const comments= getState().firestore.ordered.comments;\r\n        const oldReacts = getState().firestore.ordered.reacts;\r\n        // console.log(oldReacts);\r\n         //console.log(react); \r\n\r\n         let oldReact = oldReacts.filter( oldReact => {\r\n             if( oldReact.reactorId === react.reactorId  && oldReact.reactableId === react.reactableId  ) return true;\r\n             else return false; \r\n         });\r\n              \r\n           \r\n          //  console.log(oldReact);\r\n            if(oldReact.length > 0){ // there is a react already exists belongs to this user \r\n                let oldReactObj = oldReact[0];\r\n               // console.log(oldReactObj);\r\n                if(oldReactObj.reactType === react.reactType){\r\n                    // toggle React delete there is a record\r\n                    firestore.collection('reacts').doc(oldReactObj.reactId).delete()\r\n                              .then(()=>dispatch({type:DELETE_REACT_SUCCESS}))\r\n                              .catch(err=>dispatch({type:DELETE_REACT_ERROR,payload:err.message}));\r\n\r\n                }else{\r\n                    firestore.collection('reacts').doc(oldReactObj.reactId).set({\r\n                        ...oldReactObj,\r\n                        reactId:oldReactObj.reactId, \r\n                        reactType:react.reactType,\r\n                        createdAt:new Date()     \r\n    \r\n                    }).then(()=>dispatch({type:ADD_REACT_SUCCESS}))\r\n                    .catch(err=>dispatch({type:ADD_REACT_ERROR , payload:err.message}));\r\n                     notifyReact(react, posts, comments,firestore);\r\n                }\r\n            \r\n            }else{\r\n                // there is no reacts already in the \r\n                let reactId = uuid4();\r\n                console.log('new record');\r\n                firestore.collection('reacts').doc(reactId).set({\r\n                    ...react,\r\n                    reactId,\r\n                    createdAt:new Date()     \r\n                }).then(()=>dispatch({type:ADD_REACT_SUCCESS}))\r\n                .catch(err=>dispatch({type:ADD_REACT_ERROR,payload:err.message}));\r\n                \r\n                notifyReact(react,posts,comments,firestore);\r\n            }        \r\n    }\r\n}\r\n\r\nconst notifyReact=(react, posts , comments, firestore)=>{\r\n   // console.log(posts);\r\n    //console.log(comments);\r\n    // check if the reacted is post or comment \r\n    const notificationId = uuid4();\r\n    let notifiable;\r\n    let notificationBody;\r\n\r\n     if(posts.find(post => post.postId === react.reactableId)){\r\n           notifiable = posts.find(post => post.postId === react.reactableId);\r\n           notificationBody = \"someone reacted on your post\";\r\n           //console.log(react);    \r\n         //  console.log(notifiable);     \r\n     }else{\r\n        if(comments.find(comment => comment.commentId === react.reactableId)){\r\n            //console.log('comment');\r\n            notifiable = comments.find(comment => comment.commentId === react.reactableId);\r\n           // notifiable.id = notifiable.postId;\r\n            notificationBody = \"someone reacted on your comment\";              \r\n     }\r\n  }\r\n\r\n    firestore.collection('notifications').doc(notificationId).set({\r\n        notificationId:notificationId,\r\n        body:notificationBody,\r\n        createdAt:new Date(),\r\n        notifiableLink:'/post/'+notifiable.postId, //link to post \r\n        notifiableId:notifiable.postId, //post id \r\n        notifiedId:react.reactedId,\r\n        notifierId:react.reactorId,\r\n        read:false\r\n    }); \r\n\r\n   // console.log(react);\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {addReact} from '../../store/actions/reactsActions';\r\nimport {compose} from 'redux';\r\nclass ReactsBar extends React.Component{\r\n      \r\n    handleReact = (e,reactableId,reactorId,reactedId,reactType)=>{ \r\n        //console.log(reactableId);\r\n        //console.log(reactType);\r\n        e.preventDefault();\r\n        let react ={\r\n            reactableId,\r\n            reactType,\r\n            reactedId,\r\n            reactorId\r\n        }\r\n\r\n        //console.log(react);\r\n        const {addReact} = this.props;\r\n        addReact(react);\r\n\r\n     }\r\n    render(){\r\n        const { reactableId , reactorId , reactedId ,reacts } = this.props;\r\n        //console.log(reacts);\r\n         let likeReacts=reacts.filter(react=>react.reactType==='like');\r\n         let dislikeReacts=reacts.filter(react=>react.reactType==='dislike');\r\n         let loveReacts=reacts.filter(react=>react.reactType==='love');\r\n\r\n        return(\r\n\r\n            <span className=\"reacts-bar\">\r\n                <button \r\n                    className={likeReacts.find(react=>react.reactorId===reactorId)?\"btn btn-primary\":\"btn\"}\r\n                    onClick={ (e) => this.handleReact(e,reactableId,reactorId,reactedId,'like')}\r\n                >\r\n                <i className=\"fas fa-thumbs-up\"></i> <span >  {likeReacts.length}   </span>\r\n                </button>\r\n                <button \r\n                    className={dislikeReacts.find(react=>react.reactorId===reactorId)?\"btn btn-primary\":\"btn\"}\r\n                    onClick={ (e) => this.handleReact(e,reactableId,reactorId,reactedId,'dislike')}\r\n                >\r\n                <i className=\"fas fa-thumbs-down\"></i> <span>  {dislikeReacts.length} </span>\r\n                </button>\r\n                <button \r\n                    className={loveReacts.find(react=>react.reactorId===reactorId)?\"btn btn-primary\":\"btn\"}\r\n                    onClick={ (e) => this.handleReact(e,reactableId,reactorId,reactedId,'love')}\r\n                    >\r\n                    <i className=\"fas fa-heart\"></i> <span>  {loveReacts.length}  </span>\r\n                </button>\r\n            \r\n        </span>\r\n\r\n     );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n     return {\r\n         addReact: (react) => dispatch(addReact(react))\r\n     }\r\n}\r\n\r\n\r\n export default compose(\r\n    connect(null,mapDispatchToProps),\r\n    firestoreConnect([\r\n       { collection:'reacts'}\r\n    ])  \r\n) \r\n(ReactsBar);\r\n\r\n","import React from 'react';\r\nimport {connect } from 'react-redux';\r\nimport ReactsBar from './../ReactsBar';\r\nimport {showReadableDateTime} from '../../../utils/utilsFuncs';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {deleteComment}  from '../../../store/actions/commentsActions';\r\n\r\nclass Comment extends React.Component{\r\n\r\n\r\n     \r\n    handleDeleteComment(e,commentId ){\r\n         e.preventDefault();\r\n        //  console.log(commentId);\r\n         this.props.deleteComment(commentId);\r\n    }\r\n\r\n    render (){\r\n\r\n      const { comment , auth } = this.props;\r\n      //console.log(comment);\r\n      if(! ( comment && comment.reacts && comment.user)){\r\n            return (\r\n                <div className=\"container\"> \r\n                   <h1 className=\"text-center text-primary loading\">Loading Comments......</h1>\r\n                </div>\r\n            );\r\n         }\r\n         else{\r\n           //  showReadableTime(comment.createdAt);\r\n            return (\r\n                     \r\n                <div className=\"comment\">\r\n                    <div className=\"comment-info\">\r\n                        <div className=\"user\">            \r\n                            <NavLink exact to={\"/profile/\"+comment.user.userId}>\r\n                                <img\r\n                                className=\"round-img user-img\"\r\n                                src={comment.user.imageUrl?comment.user.imageUrl:\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200\"}\r\n                                alt={comment.user.handle?comment.user.handle:'user'}\r\n                                />\r\n                                <h4>  {comment.user.handle} </h4>\r\n                            </NavLink>\r\n                        </div>\r\n                        <p  className=\"body\">\r\n                            <span> {comment.body} </span>\r\n                              <br/>\r\n                              <span className=\"comment-reacts\" > \r\n                              <br/><br/> \r\n                             <ReactsBar  reacts={comment.reacts}  reactableId={comment.commentId} reactedId={comment.user.userId} reactorId={auth.uid}  />  \r\n                              {  auth.uid === comment.userId?  \r\n                              <button className=\"btn\"\r\n                              onClick={ e => this.handleDeleteComment(e,comment.commentId)}\r\n                              >\r\n                                    <i className=\"fas fa-trash text-danger\">  </i>\r\n                              </button>:null\r\n                              }\r\n\r\n\r\n                             <span className=\"text-primary\"> {showReadableDateTime(comment.createdAt)}  </span>\r\n\r\n                           </span>   \r\n                          \r\n                          </p>\r\n                    </div>\r\n                     \r\n                 </div>\r\n             );     \r\n         } \r\n      \r\n      \r\n }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        deleteComment: (commentId)=>dispatch(deleteComment(commentId)) \r\n    }\r\n}\r\n\r\n\r\nexport default  connect( null, mapDispatchToProps )  (Comment);\r\n\r\n","import React from 'react';\r\nimport AddComment from './AddComment';\r\nimport Comment from './Comment';\r\n\r\nclass Comments extends React.Component{\r\n\r\n    render(){\r\n        const {postId , comments  , auth} =this.props;\r\n        //console.log(postId);\r\n      //  console.log(comments);\r\n        return (\r\n              <div className=\"post-interaction\">\r\n                        <AddComment postId={postId}  auth={auth}  /> \r\n                        <div className=\"comments\">\r\n                           {comments && comments.map(comment=><Comment key={comment.commentId} comment={comment} auth={auth}   />) }\r\n                         </div>\r\n                </div>\r\n             );\r\n    }\r\n}\r\n\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport Comments from './comments/Comments';\r\nimport ReactsBar from './ReactsBar';\r\nimport {showReadableDateTime} from '../../utils/utilsFuncs';\r\n\r\n\r\nclass PostDetails extends React.Component{\r\n\r\n    render(){\r\n                    let {auth,post} =this.props;                   \r\n                    if(!auth.uid){\r\n                       return (<Redirect exact to=\"/\" /> );\r\n                    }else{\r\n                            // make sure that the entire object is available\r\n                      if(!(post && post.user && post.comments  && post.reacts )){\r\n                        return (\r\n                            <div className=\"container\"> \r\n                              <h1 className=\"text-center loading text-primary\"> Data Loading ....... </h1>\r\n                            </div>                            \r\n                          );\r\n                      }else{\r\n                      // console.log(post);\r\n                               let {body , postId ,createdAt , user , comments , reacts} = post;\r\n                                //onsole.log(comments);\r\n\r\n\r\n                             return (\r\n                                <section className=\"container\">\r\n                                  <NavLink exact to=\"/posts\" className=\"btn\">Back To Posts</NavLink>\r\n                                  <div className=\"post\">\r\n                                    <div className=\"post-info\">\r\n                                        <div className=\"user\">\r\n                                        \r\n                                                <NavLink exact to={\"/profile/\"+user.userId}>\r\n                                                  <img\r\n                                                    className=\"round-img user-img\"\r\n                                                    src={user.imageUrl}\r\n                                                    alt={user.handle}\r\n                                                  />\r\n                                                  <h4 className=\"user-name\"> {user.handle} </h4>\r\n                                                </NavLink>\r\n                                          \r\n                                        </div>\r\n                                        <div className=\"content\">\r\n                                          <h2 className=\"title\"> {body.slice(0,20)}..  </h2>\r\n                                          <p className=\"body\"> \r\n                                            {body}\r\n\r\n                                          </p>\r\n                                          <h4>posted at : <span className=\"text-primary\"> {showReadableDateTime(createdAt)}  </span>  </h4>\r\n                                        </div>  \r\n                                    </div> \r\n                                  </div>\r\n                                  \r\n                                  <div className=\"post-reacts\">\r\n                                   <ReactsBar  reacts={reacts}  reactableId={postId} reactedId={user.userId} reactorId={auth.uid}  />\r\n                                      <a className=\"btn\">\r\n                                          <i className=\"fas fa-comments\"></i>  <span> {comments.length} </span>\r\n                                      </a>  \r\n                                  </div>\r\n                                  <Comments postId={postId} comments={comments} auth={auth} />\r\n                             </section> \r\n                             ); \r\n       \r\n                      }\r\n                      \r\n                    }\r\n           \r\n             }\r\n}\r\n\r\nconst mapStateToProps =(state,ownProps)=>{\r\n    let auth = state.firebase.auth;\r\n   let  postId=ownProps.match.params.id;\r\n   let  posts =state.firestore.data.posts;\r\n   let  users = state.firestore.data.users;\r\n   let comments= state.firestore.ordered.comments;\r\n   let reacts=state.firestore.ordered.reacts;\r\n\r\n  \r\n\r\n    if( (posts &&  users  && comments && reacts )){\r\n        let post =posts?posts[postId]:undefined;\r\n        let user = users?users[post.userId]:undefined;    \r\n        \r\n        //console.log('data loadded Ok:200 ');\r\n        comments = comments.filter(comment=>comment.postId===post.postId) \r\n        .map(comment=>{    \r\n            let commentReacts = reacts.filter(react=>react.reactableId===comment.commentId);          \r\n            return {\r\n              ...comment,\r\n              reacts:commentReacts,\r\n              user:users[comment.userId] //add user object that is the owner of this comment\r\n            }\r\n         });\r\n        reacts = reacts.filter(react=>react.reactableId===postId); \r\n        let   newPost = {...post,postId,user,comments,reacts};\r\n        //console.log(post);\r\n        return {\r\n            auth,\r\n            post:newPost\r\n        }\r\n        }else if (auth) {\r\n            return {\r\n                auth\r\n            };\r\n        } else return {};\r\n    \r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,null),\r\n    firestoreConnect([\r\n        {collection:'profiles'},\r\n        {collection:'users'},\r\n        {collection:'posts'},\r\n        {collection:'comments'},\r\n        {collection:'reacts'} \r\n    ])\r\n  )\r\n  (PostDetails);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addPost} from '../../store/actions/postsActions';\r\n\r\n\r\nclass AddPost extends React.Component{\r\n   \r\n    state={\r\n        body:'',\r\n        postError:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        });\r\n    \r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const {addPost} = this.props;\r\n        if(this.state.body.length<5){\r\n            this.setState({\r\n                postError:'post length should be 5 characters length at least'\r\n            });\r\n        }else{\r\n            addPost({body:this.state.body});\r\n            this.setState({\r\n                body:'',\r\n                postError:''\r\n            });\r\n        }\r\n       \r\n    }\r\n    render(){\r\n       //console.log(this.props);\r\n        return (\r\n            \r\n                <form className=\"form my-1\" onSubmit={this.handleSubmit}>\r\n                    <p className=\"text-danger my-1\"> {this.state.postError} </p>\r\n                    <textarea cols=\"30\" rows=\"5\" value={this.state.body} placeholder=\"Create a post\" id='body' onChange={this.handleChange}>  </textarea>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-dark my-1\" />\r\n                </form>\r\n\r\n           \r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n const auth = state.firebase.auth;\r\n    return{\r\n        auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    ////console.log('add post');\r\n    return{\r\n         addPost: (post)=>dispatch(addPost(post))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (AddPost);","import {v4 as uuid4} from 'uuid';\r\n \r\nimport {  \r\n        ADD_POST_SUCCESS ,\r\n        ADD_POST_ERROR ,\r\n        DELETE_POST_SUCCESS , \r\n        DELETE_POST_ERROR, \r\n        EDIT_POST_SUCCESS ,\r\n        EDIT_POST_ERROR\r\n       } from './actions';\r\n\r\nexport const addPost = (post)=>{\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        \r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId= getState().firebase.auth.uid;\r\n        let postId = uuid4(); \r\n        firestore.collection('posts').doc(postId).set({\r\n            ...post,\r\n            postId:postId,\r\n            commentCount:0,\r\n            likeCount:0,\r\n            commentCount:0,\r\n            userHandle:profile.handle,\r\n            userId:authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n          dispatch({type:ADD_POST_SUCCESS})\r\n       }).catch((err)=>{\r\n           dispatch({type:ADD_POST_ERROR,payload:err.message})\r\n       });\r\n\r\n       \r\n    }\r\n} \r\n\r\n\r\nexport const deletePost= (postId)=>{\r\n    console.log('delete Post actions');\r\n    return (dispatch,getState,  {getFirebase, getFirestore } )=>{\r\n        const firestore= getFirestore();\r\n\r\n        firestore.collection('posts').doc(postId).delete()\r\n                  .then( () => dispatch({type:DELETE_POST_SUCCESS}))\r\n                  .catch( (err) => dispatch({type:DELETE_POST_ERROR,payload:err.message}));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const editPost = (updPost)=>{\r\n     return (dispatch,getState, {getFirebase,getFirestore} ) => {\r\n               console.log('edit post from actions');\r\n               console.log(updPost);\r\n\r\n              const firestore = getFirestore();\r\n              firestore.collection('posts').doc(updPost.postId)\r\n                       .set({\r\n                           ...updPost\r\n                       }).then(()=>dispatch({type:EDIT_POST_SUCCESS}))\r\n                         .catch((err)=>dispatch({type:EDIT_POST_ERROR, payload: err.message })); \r\n     }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport ReactsBar from './ReactsBar';\r\nimport {showReadableDateTime} from '../../utils/utilsFuncs';\r\nimport {connect} from 'react-redux';\r\nimport {deletePost } from '../../store/actions/postsActions';\r\n\r\n\r\nclass PostSummary extends React.Component{\r\n     constructor(props){\r\n       super(props);\r\n       this.handleDelete=this.handleDelete.bind(this);\r\n      \r\n     }\r\n     handleDelete(e,postId){\r\n       e.preventDefault();\r\n       const {deletePost} = this.props;\r\n       deletePost(postId);\r\n\r\n      }\r\n   \r\n \r\n    render(){\r\n      const { post , auth }=this.props;\r\n      \r\n    \r\n          //console.log(post);\r\n          \r\n         if( ! ( post && auth  )  ){\r\n           return null;\r\n         }else{\r\n           //console.log(post);\r\n          let {body,postId, createdAt , user , comments , reacts} = post; \r\n         // console.log(createdAt);\r\n             if(!(user && comments  &&  reacts )){\r\n               return <h1 className=\"text-center text-primary loading\"> Loading post ........ </h1>\r\n             }else{\r\n               //console.log(post);\r\n\r\n              return (\r\n                <div className=\"post-info bg-white my-1 p-1\"   >\r\n                <div className=\"user\">\r\n                  <NavLink exact to={\"/profile/\"+user.userId}>\r\n                    <img\r\n                      className=\"round-img user-post-img\"\r\n                      src={user.imageUrl?user.imageUrl:\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200\"}\r\n                      alt={user.userId}\r\n                    />\r\n                    <h4>{user.handle}</h4>\r\n                  </NavLink>\r\n                </div>\r\n    \r\n                <div className=\"content\">\r\n                    {/* <h3 className=\"my-1\"> Post title  </h3> */}\r\n                    <h2 className=\"title\"> {body.slice(0,20)}..  </h2>\r\n                    <p className=\"my-1\">\r\n                     \r\n                      {body}\r\n                      <br/>\r\n              \r\n                    </p>\r\n                    <h4>posted at : <span className=\"text-primary\"> {showReadableDateTime(createdAt)}  </span>  </h4>\r\n                    <ReactsBar  reacts={reacts}  reactableId={postId} reactedId={user.userId} reactorId={auth.uid}  />\r\n                   \r\n                    <NavLink   to={'/post/'+postId}   className=\"btn\">\r\n                        <i className=\"fas fa-comment\"></i>  <span> {comments.length}  </span>\r\n                    </NavLink>\r\n                    {auth.uid===user.userId?\r\n                        <span>\r\n                          <button\r\n                              className=\"btn btn-danger\"\r\n                              onClick={(e)=>this.handleDelete(e,postId)}\r\n                              >\r\n                              <i className=\"fas fa-trash\"></i>\r\n                            </button>\r\n                            <NavLink\r\n                              className=\"btn btn-success\"\r\n                              exact to={'/editPost/'+postId}\r\n                              >\r\n                            <i className=\"fas fa-edit\"></i>\r\n                           </NavLink>\r\n                         </span>\r\n                             :null}\r\n                   \r\n    \r\n    \r\n                      <NavLink  to={'/post/'+postId} className=\"btn btn-primary\">\r\n                        Discussion\r\n                      </NavLink>\r\n                \r\n                </div>\r\n              </div>\r\n             );\r\n           }\r\n      \r\n\r\n      }\r\n   \r\n    }\r\n}\r\n     \r\nconst mapDispatchToProps  = (dispatch ) =>{\r\n  return {\r\n    deletePost:  (postId)=> dispatch(deletePost(postId)) \r\n  }\r\n}\r\n\r\n\r\nexport default   connect ( null, mapDispatchToProps) (PostSummary);\r\n","import React from 'react';\r\nimport AddPost from './AddPost';\r\nimport PostSummary from './PostSummary';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nclass Posts extends React.Component{\r\n\r\n   render(){\r\n     //console.log('render');\r\n       const { completePosts ,  auth} = this.props; \r\n          \r\n       //console.log(auth);\r\n\r\n       if(!auth.uid){\r\n         return (<Redirect exact  to=\"/\"  />);\r\n       }else{\r\n         if(! completePosts ){\r\n            return (\r\n                     <div className=\"container\">\r\n                         <h2 className=\"text-primary  text-center loadin \">Loading data.....</h2>\r\n                    </div>\r\n                    );\r\n         }else{\r\n           //console.log(completePosts);\r\n          return(\r\n            <section className=\"container\" >\r\n            <h1 className=\"large text-primary\">\r\n              Posts\r\n            </h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Welcome to the community</p>\r\n      \r\n            <div className=\"post-form\">\r\n            <AddPost props={this.props}/>\r\n              <div className=\"posts\">       \r\n                {completePosts ?\r\n                 completePosts.map(post=> <PostSummary key={post.postId} post={post} auth={auth} />)\r\n                :<h1  className=\"text-primary text-center\"> No posts added yet </h1>}\r\n              </div>\r\n            </div>\r\n          </section>\r\n           );\r\n  \r\n         }\r\n       }\r\n       \r\n   }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n      let auth =state.firebase.auth;\r\n      let posts = state.firestore.ordered.posts;\r\n      let users=state.firestore.data.users;\r\n      let comments =state.firestore.ordered.comments;\r\n      let reacts =state.firestore.ordered.reacts;\r\n      //console.log(auth);\r\n      //console.log(posts);\r\n      //console.log(users);\r\n      //console.log(comments);\r\n      //console.log(reacts);\r\n     if(posts && users && comments && reacts ){\r\n\r\n      let completePosts = posts.map(post=>{\r\n              // fetch comments belongst to this specific post \r\n          let    filteredComments = comments.filter(comment=>comment.postId === post.postId) \r\n                                 .map(comment=>{   \r\n                                  return {\r\n                                    ...comment,                                 \r\n                                    user:users[comment.userId] //add user object that is the owner of this comment\r\n                                  }\r\n                                });\r\n              \r\n            return {\r\n                body:post.body,\r\n                createdAt:post.createdAt,\r\n                postId:post.postId,\r\n                user:users[post.userId],\r\n                comments:filteredComments,\r\n                reacts:reacts.filter(react=>react.reactableId === post.postId)\r\n            }\r\n      });\r\n        //console.log(completePosts);\r\n        //console.log('All data are loaded');\r\n            return{\r\n              auth,\r\n              completePosts\r\n              }\r\n          } else return {\r\n            auth\r\n          };\r\n\r\n      // the format of post we want to map to props\r\n      //  [\r\n      //    { postId ,\r\n      //        body , \r\n      //        userId ,\r\n      //        createdAt ,\r\n      //        postReacts:[\r\n     //                       {reactType,reactableId,reactorId,reactedId},\r\n     //                       {reactType,reactableId,reactorId,reactedId},\r\n     //                       {reactType,reactableId,reactorId,reactedId}\r\n    //                    ],\r\n      //        postUser : { userId , imageUrl  } ,\r\n      //        postComments: [\r\n      //                         {body, userHandle,userImg,createdAt},\r\n      //                         {body, userHandle,userImg,createdAt},\r\n      //                         {body, userHandle,userImg,createdAt}  \r\n      //                       ]\r\n           \r\n      //                       \r\n      //        \r\n      //     }\r\n      //  \r\n      // ]\r\n\r\n\r\n    \r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n       { collection:'posts'},\r\n       { collection:'users'},\r\n       { collection:'comments'},\r\n       { collection:'reacts'},\r\n\r\n    ])\r\n    \r\n)  ( Posts);\r\n\r\n","import React from 'react';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {Redirect, NavLink} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {editProfile } from '../../store/actions/profilesActions';\r\n\r\n\r\nclass EditProfile extends React.Component{\r\n\r\n    constructor(props){\r\n       super(props);\r\n       \r\n       //console.log(props.profile);\r\n       const {profile} = props;\r\n       //console.log('from constructor');\r\n       this.state={\r\n        jobTitle:profile?profile.jobTitle:'',\r\n        company:profile?profile.company:'',\r\n        website:profile?profile.website:'',\r\n        location:profile?profile.location:'',\r\n        skills:profile?profile.skills.join(','):'',\r\n        githubUsername:profile?profile.githubUsername:'',\r\n        bio:profile?profile.bio:'',\r\n        // socialLinks\r\n        facebook:profile?profile.socialLinks.facebook:'',\r\n        youtube:profile?profile.socialLinks.youtube:'',\r\n        linkedin:profile?profile.socialLinks.linkedin:'',\r\n        twitter:profile?profile.socialLinks.twitter:'',\r\n        instagram:profile?profile.socialLinks.instagram:''\r\n       }\r\n       //binding methods\r\n       this.handleChange=this.handleChange.bind(this);\r\n       this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n   \r\n      componentWillReceiveProps(nextProps){\r\n      //console.log(nextProps.profile);\r\n      this.mapProfileDataToState(nextProps.profile);\r\n    }\r\n  \r\n    \r\n\r\n    mapProfileDataToState = (profile) => {\r\n    \r\n        this.setState({\r\n          jobTitle:profile?profile.jobTitle:'',\r\n          company:profile?profile.company:'',\r\n          website:profile?profile.website:'',\r\n          location:profile?profile.location:'',\r\n          skills:profile?profile.skills.join(','):'',\r\n          githubUsername:profile?profile.githubUsername:'',\r\n          bio:profile?profile.bio:'',\r\n          // socialLinks\r\n          facebook:profile?profile.socialLinks.facebook:'',\r\n          youtube:profile?profile.socialLinks.youtube:'',\r\n          linkedin:profile?profile.socialLinks.linkedin:'',\r\n          twitter:profile?profile.socialLinks.twitter:'',\r\n          instagram:profile?profile.socialLinks.instagram:''\r\n        });\r\n      \r\n      \r\n    }\r\n\r\n    handleChange(e){\r\n      e.preventDefault();\r\n    //  //console.log(e.target.id,e.target.value);\r\n      this.setState({\r\n        [e.target.id]:e.target.value\r\n        });\r\n      ////console.log(this.state);\r\n    }\r\n  \r\n\r\n \r\n  \r\n    handleSubmit(e){\r\n      e.preventDefault();\r\n      let {jobTitle,company,website,location,skills,bio,githubUsername,facebook,twitter,youtube,linkedin,instagram}=this.state;\r\n      let socialLinks= {facebook,twitter,youtube,linkedin,instagram};\r\n      let skillsArr = skills.split(',');\r\n      let editableProfile = {jobTitle,company,website,location,bio,githubUsername,socialLinks,skillsArr};\r\n      //  //console.log('from component',profile);\r\n      //console.log(editableProfile);\r\n      const {editProfile} = this.props;\r\n      editProfile(editableProfile);\r\n      this.props.history.push('/');\r\n    }\r\n    \r\n    render(){\r\n     const  { auth  } = this.props;\r\n      \r\n\r\n       if(!auth.uid){\r\n         return (<Redirect exact to=\"/\" />)\r\n       }else{\r\n        return (\r\n          <section className=\"container\">\r\n           <h1 className=\"large text-primary\">\r\n             Create Your Profile\r\n           </h1>\r\n           <p className=\"lead\">\r\n             <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n             profile stand out\r\n           </p>\r\n           <small> * = required fields</small>\r\n           <form className=\"form\" onSubmit={this.handleSubmit}>\r\n             <div className=\"form-group\">\r\n               <select\r\n                onChange={this.handleChange}\r\n                id=\"jobTitle\"\r\n                name=\"status\">\r\n                 <option value={this.state.jobTitle}>{this.state.jobTitle?this.state.jobTitle:\"--please select option--\"}</option>\r\n                 <option value=\"Developer\">Developer</option>\r\n                 <option value=\"Junior Developer\">Junior Developer</option>\r\n                 <option value=\"Senior Developer\">Senior Developer</option>\r\n                 <option value=\"Manager\">Manager</option>\r\n                 <option value=\"Student or Learning\">Student or Learning</option>\r\n                 <option value=\"Instructor\">Instructor or Teacher</option>\r\n                 <option value=\"Intern\">Intern</option>\r\n                 <option value=\"Other\">Other</option>\r\n               </select>\r\n               <small className=\"form-text\"\r\n                 >Give us an idea of where you are at in your career</small>\r\n             </div>\r\n             <div className=\"form-group\">\r\n               <input \r\n                onChange={this.handleChange}\r\n                value={this.state.company}\r\n                type=\"text\" \r\n                id=\"company\"\r\n                placeholder=\"Company\"\r\n                name=\"company\" />\r\n               <small className=\"form-text\"\r\n                 >Could be your own company or one you work for</small>\r\n             </div>\r\n             <div className=\"form-group\">\r\n               <input\r\n                  onChange={this.handleChange}               \r\n                  type=\"text\"\r\n                  id=\"website\"\r\n                  value={this.state.website}\r\n                  placeholder=\"Website\" \r\n                  name=\"website\" />\r\n               <small className=\"form-text\"\r\n                 >Could be your own or a company website</small>\r\n             </div>\r\n             <div className=\"form-group\">\r\n               <input\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                id=\"location\"\r\n                value={this.state.location}\r\n                placeholder=\"Location\"\r\n                name=\"location\" />\r\n               <small className=\"form-text\"\r\n                 >City & state suggested (eg. Boston, MA)</small>\r\n             </div>\r\n             <div className=\"form-group\">\r\n               <input \r\n                 onChange={this.handleChange}\r\n                 id=\"skills\"\r\n                 value={this.state.skills}\r\n                 type=\"text\"\r\n                 placeholder=\"* Skills\"\r\n                 name=\"skills\"\r\n               \r\n               />\r\n               <small className=\"form-text\"\r\n                 >Please use comma separated values (eg.\r\n                 HTML,CSS,JavaScript,PHP)</small>\r\n             </div>\r\n             <div className=\"form-group\">\r\n               <input\r\n                 onChange={this.handleChange}\r\n                 id=\"githubUsername\"\r\n                 type=\"text\"\r\n                 value={this.state.githubUsername}\r\n                 placeholder=\"Github Username\"\r\n                 name=\"githubusername\"\r\n               />\r\n               <small className=\"form-text\"\r\n                 >If you want your latest repos and a Github link, include your\r\n                 username</small>\r\n             </div>\r\n             <div className=\"form-group\">\r\n               <textarea\r\n                 onChange={this.handleChange}\r\n                 id=\"bio\" \r\n                 value={this.state.bio}\r\n                 placeholder=\"A short bio of yourself\" \r\n                 name=\"bio\"></textarea>\r\n               <small className=\"form-text\">Tell us a little about yourself</small>\r\n             </div>\r\n     \r\n             <div className=\"my-2\">\r\n               <button type=\"button\" className=\"btn btn-light\" disabled>\r\n                 Add Social Network Links\r\n               </button>\r\n               <span>Optional</span>\r\n             </div>\r\n     \r\n             <div className=\"form-group social-input\">\r\n               <i className=\"fab fa-twitter fa-2x\"></i>\r\n               <input\r\n                 onChange={this.handleChange}\r\n                 id=\"twitter\"\r\n                 value={this.state.twitter}\r\n                 type=\"text\" \r\n                 placeholder=\"Twitter URL\" \r\n                 name=\"twitter\" />\r\n             </div>\r\n     \r\n             <div className=\"form-group social-input\">\r\n               <i className=\"fab fa-facebook fa-2x\"></i>\r\n               <input\r\n                 onChange={this.handleChange}\r\n                 id=\"facebook\"\r\n                 value={this.state.facebook}\r\n                 type=\"text\" \r\n                 placeholder=\"Facebook URL\" \r\n                 name=\"facebook\" />\r\n             </div>\r\n     \r\n             <div className=\"form-group social-input\">\r\n               <i className=\"fab fa-youtube fa-2x\"></i>\r\n               <input \r\n                 onChange={this.handleChange}\r\n                 id=\"youtube\"\r\n                 value={this.state.youtube}\r\n                 type=\"text\"\r\n                 placeholder=\"YouTube URL\" \r\n                 name=\"youtube\" />\r\n             </div>\r\n     \r\n             <div className=\"form-group social-input\">\r\n               <i className=\"fab fa-linkedin fa-2x\"></i>\r\n               <input \r\n                 onChange={this.handleChange}\r\n                  id=\"linkedin\"\r\n                  value={this.state.linkedin}\r\n                  type=\"text\" \r\n                  placeholder=\"Linkedin URL\" \r\n                  name=\"linkedin\" />\r\n             </div>\r\n     \r\n             <div className=\"form-group social-input\">\r\n               <i className=\"fab fa-instagram fa-2x\"></i>\r\n               <input\r\n                 onChange={this.handleChange}\r\n                 id=\"instagram\"\r\n                 value={this.state.instagram}\r\n                 type=\"text\" \r\n                 placeholder=\"Instagram URL\"\r\n                 name=\"instagram\" />\r\n             </div>\r\n             <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n             <NavLink className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</NavLink>\r\n           </form>\r\n         </section>\r\n         \r\n        );\r\n       }\r\n      \r\n    \r\n     }\r\n  }\r\n\r\n const mapStateToProps = (state,ownProps) =>{\r\n  \r\n  \r\n  const userId = ownProps.match.params.id;\r\n  //console.log(userId);\r\n  let profiles = state.firestore.data.profiles;\r\n  //console.log(profiles);\r\n  const profile = profiles ? profiles[userId]: null;\r\n  //console.log(profile);\r\n  const auth =  state.firebase.auth;\r\n  if( !profile  ){\r\n    return {\r\n      auth,\r\n      profile\r\n    }\r\n  }else if(auth) {\r\n    return{\r\n      auth\r\n    }\r\n  }else return  {  };\r\n  \r\n    \r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        editProfile:(editableProfile)=>dispatch(editProfile(editableProfile))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  firestoreConnect([{collection:'profiles'}])\r\n)\r\n(EditProfile);\r\n\r\n\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {addExperience } from '../../store/actions/profilesActions';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass AddExperience extends React.Component{\r\n\r\n    constructor(props){\r\n       super(props);\r\n       \r\n       ////console.log(props);\r\n       \r\n        this.state={\r\n             jobTitle:'',\r\n             company:'',\r\n             location:'',\r\n             fromDate:'',\r\n             toDate:'',\r\n             description:'',\r\n             emptyInputsError:''\r\n        }\r\n\r\n       //binding methods\r\n       this.handleChange=this.handleChange.bind(this);\r\n       this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n   \r\n  \r\n    handleChange(e){\r\n      e.preventDefault();\r\n      //console.log(e.target.id,e.target.value);\r\n       this.setState({\r\n        [e.target.id]:e.target.value\r\n        });\r\n      //console.log(this.state);\r\n    }\r\n  \r\n  \r\n    handleSubmit(e){\r\n      e.preventDefault();\r\n       const {addExperience } = this.props;\r\n       const {jobTitle,company,description,location,fromDate,toDate}=this.state;\r\n       let inputsArray= [jobTitle,company,description,location,fromDate,toDate];\r\n       if(inputsArray.some(input=>input.length===0)){\r\n         this.setState({\r\n             emptyInputsError:'Please fill up all required inputs'\r\n         });\r\n       }else{\r\n         //console.log('all inputs are filled');\r\n       addExperience({jobTitle,company,description,location,fromDate,toDate});\r\n        this.setState({\r\n          emptyInputsError:''\r\n        });\r\n        //console.log('from handleSubmit in component');\r\n        this.props.history.push('/dashboard');\r\n      }\r\n    }\r\n\r\n  \r\n  \r\n    render(){\r\n\r\n        const { auth  } = this.props;\r\n        if(!auth.uid){\r\n          return (<Redirect exact to=\"/\" />);\r\n        } else{\r\n          return (\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">\r\n                 Add Experience\r\n                </h1>\r\n                <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's fill up exprience\r\n                </p>\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                { this.state.emptyInputsError.length>0? <div className='alert alert-danger'> {this.state.emptyInputsError} </div>:null}\r\n\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                        onChange={this.handleChange}\r\n                        value={this.state.company}\r\n                        type=\"text\" \r\n                        id=\"company\"\r\n                        placeholder=\"Company\"\r\n                        name=\"company\" />\r\n                        \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                        onChange={this.handleChange}\r\n                        value={this.state.jobTitle}\r\n                        type=\"text\" \r\n                        id=\"jobTitle\"\r\n                        placeholder=\"job title\"\r\n                        name=\"jobTitle\" />\r\n                        \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            onChange={this.handleChange}\r\n                            value={this.state.location}\r\n                            type=\"text\" \r\n                            id=\"location\"\r\n                            placeholder=\"location\"\r\n                            name=\"location\" />\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                        onChange={this.handleChange}\r\n                        value={this.state.fromDate}\r\n                        type=\"date\" \r\n                        id=\"fromDate\"\r\n                        name=\"fromDate\" />\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            onChange={this.handleChange}\r\n                            value={this.state.toDate}\r\n                            type=\"date\" \r\n                            id=\"toDate\"\r\n                            name=\"toDate\" />\r\n                        \r\n                     </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            onChange={this.handleChange}\r\n                            value={this.state.description}\r\n                            type=\"text\" \r\n                            id=\"description\"\r\n                            placeholder=\"description\"\r\n                            name=\"description\"                            \r\n                            />\r\n                        \r\n                    </div>\r\n                   \r\n                    <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                    <NavLink className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</NavLink>\r\n                </form>\r\n            </section>   \r\n          );\r\n          \r\n        } \r\n         \r\n       \r\n    }\r\n  }\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n  \r\n  \r\n    if(state.firebase.auth.uid){\r\n      return {\r\n        auth:state.firebase.auth       \r\n      };\r\n    }\r\n    \r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n\r\n    return {\r\n        addExperience :(experience)=>dispatch(addExperience(experience))\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps)\r\n)\r\n(AddExperience);\r\n\r\n\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {addEducation } from '../../store/actions/profilesActions';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass AddEducation extends React.Component{\r\n\r\n    constructor(props){\r\n       super(props);\r\n       \r\n     //  console.log(props);\r\n       \r\n        this.state = {\r\n             school:'',\r\n             degree:'',\r\n             field:'',\r\n             fromDate:'',\r\n             toDate:'',\r\n             description:'',\r\n             emptyInputsError:''\r\n        }\r\n\r\n       //binding methods\r\n       this.handleChange=this.handleChange.bind(this);\r\n       this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n   \r\n    \r\n  \r\n\r\n   \r\n    handleChange(e){\r\n      e.preventDefault();\r\n    //  console.log(e.target.id,e.target.value);\r\n       this.setState({\r\n        [e.target.id]:e.target.value\r\n        });\r\n      //console.log(this.state);\r\n    }\r\n    \r\n    handleSubmit(e){\r\n      e.preventDefault();\r\n       const {addEducation } = this.props;\r\n       const {school,degree,fromDate,toDate,field,description}=this.state;\r\n       let inputsArray= [school,degree,fromDate,toDate,description];\r\n       if(inputsArray.some(input=>input.length === 0)){\r\n         this.setState({\r\n             emptyInputsError:'Please fill up all required inputs'\r\n         });\r\n       }else{\r\n        // console.log('all fields are filled');\r\n        addEducation({school,degree,fromDate,toDate,field,description});\r\n        this.setState({\r\n          emptyInputsError:''\r\n        });\r\n        this.props.history.push('/dashboard');\r\n      }\r\n    }\r\n    render(){\r\n     //   console.log('add education component');\r\n        const { auth  } = this.props;\r\n        if(!auth.uid){\r\n          return (<Redirect exact to=\"/\" />);\r\n        } else{\r\n          return (\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">\r\n                 Add Education\r\n                </h1>\r\n                <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's fill up expereince\r\n                </p>\r\n                <small> * = required fields</small>\r\n\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                { this.state.emptyInputsError.length>0? <div className='alert alert-danger'> {this.state.emptyInputsError} </div>:null}\r\n                    <div className=\"form-group\">\r\n                      \r\n                        <input \r\n                          onChange={this.handleChange}\r\n                          value={this.state.school}\r\n                          type=\"text\" \r\n                          id=\"school\"\r\n                          placeholder=\"* school or bootcamp\"\r\n                          name=\"school\" \r\n                        \r\n                        />\r\n                        \r\n                    </div>\r\n                  <div className=\"form-group\">\r\n\r\n                    <input \r\n                          onChange={this.handleChange}\r\n                          value={this.state.field}\r\n                          type=\"text\" \r\n                          id=\"field\"\r\n                          placeholder=\"* Field \"\r\n                          name=\"field\" \r\n                        \r\n                       />\r\n                        \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                        onChange={this.handleChange}\r\n                        value={this.state.degree}\r\n                        type=\"text\" \r\n                        id=\"degree\"\r\n                        placeholder=\"* degree\"\r\n                        name=\"degree\" />\r\n                        \r\n                    </div>\r\n                   \r\n                    <div className=\"form-group\">\r\n                        <label>* From Date </label>\r\n                        <input \r\n                        onChange={this.handleChange}\r\n                        value={this.state.fromDate}\r\n                        type=\"date\" \r\n                        id=\"fromDate\"\r\n                        name=\"fromDate\" />\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>* To Date </label>\r\n                        <input \r\n                            onChange={this.handleChange}\r\n                            value={this.state.toDate}\r\n                            type=\"date\" \r\n                            id=\"toDate\"\r\n                            name=\"toDate\" />\r\n                        \r\n                     </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            onChange={this.handleChange}\r\n                            value={this.state.description}\r\n                            type=\"text\" \r\n                            placeholder=\"* description\"\r\n                            id=\"description\"\r\n                            name=\"description\" />\r\n                        \r\n                    </div>\r\n                   \r\n                    <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                    <NavLink className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</NavLink>\r\n                </form>\r\n            </section>   \r\n          );\r\n          \r\n        } \r\n         \r\n       \r\n    }\r\n  }\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n  \r\n  \r\n      if(state.firebase.auth.uid){\r\n        return {\r\n          auth:state.firebase.auth       \r\n        };\r\n      }else return {};\r\n     \r\n    \r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n\r\n    return {\r\n        addEducation :(education)=>dispatch(addEducation(education))\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps)\r\n)\r\n(AddEducation);\r\n\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firebase-firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n \r\n // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDVnwYJnM8nzmZYkyZhzOLgKAa-KEwPfU4\",\r\n    authDomain: \"react-dev-connect.firebaseapp.com\",\r\n    databaseURL: \"https://react-dev-connect.firebaseio.com\",\r\n    projectId: \"react-dev-connect\",\r\n    storageBucket: \"react-dev-connect.appspot.com\",\r\n    messagingSenderId: \"579745601994\",\r\n    appId: \"1:579745601994:web:5a20c3c7cc2be60d221733\",\r\n    measurementId: \"G-JH4DLJRQBY\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n \r\n export  const storage = firebase.storage();\r\n\r\n  export  {   firebase as default};  \r\n\r\n","import React from 'react';\r\nimport {storage} from '../../config/fbConfig';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {Redirect, NavLink} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {editProfileImage } from '../../store/actions/profilesActions';\r\n\r\n\r\nclass EditProfileImage extends React.Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n     \r\n       this.state = {\r\n           profileImage:null,\r\n           uploadProgress:0,\r\n           noSelectedImgError:null\r\n          }\r\n      //  this.props.profileImageUrl= 'mdmad';\r\n        //console.log(this.props);\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleUpload=this.handleUpload.bind(this);\r\n        \r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps){\r\n          // console.log(nextProps);\r\n          const { user } = nextProps;\r\n            if(user !== undefined){\r\n              this.mapProfileImageUrlToState(user.imageUrl);\r\n            }\r\n\r\n    }\r\n    mapProfileImageUrlToState(profileImageUrl){\r\n      this.setState({\r\n             profileImageUrl\r\n      });             \r\n\r\n    }\r\n    handleChange(e){\r\n      //console.log('file choosen');\r\n           if(e.target.files[0]){\r\n             //console.log(e.target.files[0]);\r\n             this.setState({\r\n                 profileImage:e.target.files[0]\r\n             });\r\n             this.setState({\r\n               noSelectedImgError:null\r\n             })\r\n             //console.log(this.state.profileImage);\r\n           }\r\n    }\r\n    handleUpload(e){\r\n        //console.log('handle-upload');\r\n        // console.log(this.state.profileImage);\r\n        if(this.state.profileImage){\r\n        const uploadTask = storage.ref(`images/profiles/${this.state.profileImage.name}`).put(this.state.profileImage);\r\n          \r\n          uploadTask.on(\r\n            'state_changed',\r\n            snapshot => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred/snapshot.totalBytes) * 100\r\n              );\r\n              this.setState({\r\n                  uploadProgress:progress\r\n              })\r\n            },\r\n            error => {\r\n              //console.log(error);\r\n            },\r\n            () => {\r\n                storage.ref('images/profiles')\r\n                .child(this.state.profileImage.name)\r\n                .getDownloadURL()\r\n                .then( url => {\r\n                  //console.log(url);\r\n                  const { editProfileImage } = this.props;\r\n                  editProfileImage(url);\r\n                })         \r\n            }\r\n        );\r\n        }else{\r\n          //console.log('Plz , select picture file before submitting');\r\n          this.setState({\r\n            noSelectedImgError:'Plz , select picture file before submitting'\r\n          })\r\n        }     \r\n       // console.log(uploadTask);\r\n    }\r\n    \r\n    render(){\r\n        //console.log(storage);\r\n        const {user, auth } = this.props;\r\n        //console.log(auth)\r\n        //console.log(user);\r\n\r\n          if(!auth.uid){\r\n            return <Redirect exact to=\"/\" />\r\n          }else{\r\n            if( user ){\r\n              return(\r\n                <div className=\"container\">\r\n                     <h1 className=\"large text-primary\">\r\n                        Create Your Profile\r\n                     </h1>\r\n                <p className=\"lead\">\r\n                  <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                  profile stand out\r\n                </p>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control\"\r\n                      onChange={this.handleChange}       \r\n                       /><br/>\r\n                      <progress  value={this.state.uploadProgress}  max=\"100\" /> <br/>\r\n                        {\r\n                           this.state.profileImageUrl? <img  className=\"rounded\" src={this.state.profileImageUrl} alt=\"user image\"/>:<img  className=\"profile-img\" src={process.env.PUBLIC_URL+'/default-user-img.jpeg'} />\r\n                        }\r\n                     {this.state.noSelectedImgError &&  <div className=\"alert alert-danger\">  {this.state.noSelectedImgError} </div> }\r\n                    <button onClick={this.handleUpload} className=\"btn btn-success\"> submit profile image </button>\r\n                    <NavLink className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</NavLink>\r\n                </div>\r\n    \r\n                </div>\r\n            );              \r\n\r\n                \r\n            }else {\r\n              return (\r\n                       <div className=\"container\">\r\n                        <h1 className=\"text-center text-primary loading\"> Loading user's data ....... </h1>\r\n                      </div>\r\n                      );\r\n\r\n            }\r\n          } \r\n    }\r\n  \r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state,ownProps)=>{\r\n  const userId = ownProps.match.params.id;\r\n\r\n  const auth =state.firebase.auth;\r\n\r\n  let users = state.firestore.data.users;\r\n  let user = users ? users[userId]: null;\r\n\r\n  //console.log(users);\r\n  //console.log(user);\r\n \r\n  if( auth.uid && user ){\r\n    return {\r\n      auth,\r\n      user\r\n\r\n    };\r\n  }else if(auth.uid){\r\n     return {\r\n       auth\r\n     }\r\n  } else return {};\r\n}\r\nconst mapDispatchToProps= (dispatch)=>{\r\n  //console.log('in mapDispatch');\r\n      return {\r\n        editProfileImage: (profileImage) =>dispatch(editProfileImage(profileImage))\r\n      } \r\n}\r\n\r\n\r\n\r\nexport default  compose \r\n  (\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([{collection:'users'}])\r\n  )\r\n  (EditProfileImage);","import React  from 'react';\r\n\r\nclass NotFoundPage extends React.Component {\r\n\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"container\">       \r\n                    <h1 className=\"text-primary text-center \">  Unfortionately , There isn't any page math this link </h1>\r\n           </section>      \r\n          );\r\n    }\r\n}\r\n\r\nexport default NotFoundPage;","import React  from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass HomePage extends React.Component {\r\n\r\n\r\n    render(){\r\n           const { auth  , authError } = this.props;\r\n           let links=   <div className=\"buttons\">\r\n                            <NavLink to=\"/signup\" className=\"btn btn-primary\">sign up</NavLink>\r\n                            <NavLink to=\"/signin\" className=\"btn\">login</NavLink>\r\n                        </div>;\r\n\r\n           if(authError){\r\n               return <Redirect exact to=\"signin\" />\r\n           }else{\r\n            return(\r\n                <section className=\"landing\">                       \r\n                 <img  className=\"landing-img\" src={process.env.PUBLIC_URL+'/imgs/showcase.jpg'} alt=\"landing page image\"/>                  \r\n                 <div className=\"dark-overlay\">\r\n                    <div className=\"landing-inner\">\r\n                    <h1 className=\"x-large\">Deve10pers </h1>\r\n                    <h1 className=\"x-large\">C0nnect0r </h1>\r\n\r\n                    <p className=\"lead\">\r\n                        create developer portfolio/account post blogs and also get help from\r\n                        the others\r\n                    </p>\r\n                    \r\n                      {auth.uid ?null:links }\r\n\r\n                    </div>\r\n                </div>\r\n                \r\n                </section>              \r\n            );\r\n    \r\n           }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n       const  auth =state.firebase.auth;\r\n        const profile=state.firebase.profile;\r\n     return{\r\n         auth ,\r\n         profile,\r\n         authError:state.auth.authError\r\n     }\r\n}\r\n\r\nexport default connect(mapStateToProps) (HomePage);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport {showReadableDate} from '../../utils/utilsFuncs';\r\n\r\nclass Developers extends React.Component{\r\n\r\n    render(){\r\n        const {auth,developers}  = this.props;\r\n        console.log(auth.uid);\r\n        \r\n\r\n        if(!auth.uid){\r\n            return (<Redirect exact to=\"/\" />)\r\n        }else{\r\n\r\n            if(!developers){\r\n                return (\r\n                    <div className=\"container\">\r\n                         <h1 className=\"text-primary text-center loading\"> Loading Developers ....... </h1>\r\n                    </div>\r\n             ); \r\n            }else{\r\n                  return(\r\n                    <section className=\"container\">\r\n                        <h1 className=\"large text-primary\">\r\n                         Developers\r\n                        </h1>\r\n                        <p className=\"lead\">\r\n                        <i className=\"fab fa-connectdevelop\"></i>\r\n                        Browse And Connect With Developers\r\n                        </p>\r\n                        <div className=\"profiles\">\r\n                           {developers && developers.map(developer=>{\r\n\r\n                          \r\n                            return (\r\n                                       \r\n                                        <div className=\"profile bg-light p-2\"  key={developer.id}>\r\n                                            <img\r\n                                                className=\"round-img\"\r\n                                                src={developer.imageUrl}\r\n                                                alt={developer.handle}\r\n                                            />\r\n                                            <div>\r\n                                                <h1> {developer.handle} </h1>\r\n                                                <p> {developer.jobTitle} </p>\r\n                                                <p> {developer.location} </p>\r\n                                                <p className=\"text-primary\"> Joined at {showReadableDate(developer.createdAt)} </p>\r\n                                                <NavLink exact to={\"/profile/\"+developer.id} target=\"_parent\" className=\"btn btn-primary\">View Profile</NavLink>\r\n                                            </div>\r\n                                             {developer.skills !== undefined ?  <ul> {developer.skills.map((skill,i)=><li className=\"text-primary\" key={i} ><i className=\"fas fa-check\"></i> {skill} </li>)} </ul>:null  }\r\n                                            \r\n                                        </div>           \r\n                             \r\n                          );\r\n                          \r\n                        })}\r\n                     </div>\r\n                  </section>\r\n                );  \r\n            } \r\n         }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n     \r\n     const auth=state.firebase.auth;\r\n      let users=state.firestore.ordered.users;\r\n     let  profiles=state.firestore.ordered.profiles;\r\n     console.log(auth);\r\n     console.log(users);\r\n     console.log(profiles);\r\n     if(!(users && profiles)){\r\n        return {\r\n            auth\r\n         }\r\n     }else{\r\n         let developers = users.map(user=>{\r\n               let matchedProfile = profiles.filter(profile=>profile.userId===user.userId);\r\n                   matchedProfile  = matchedProfile? matchedProfile[0]:undefined;\r\n                   console.log(matchedProfile);\r\n                   if(matchedProfile){\r\n                        return {\r\n                            ...user,\r\n                            ...matchedProfile\r\n                            \r\n                        }\r\n                   }else{\r\n                       return {\r\n                           ...user\r\n                       }\r\n                   }\r\n               \r\n         });\r\n            //console.log(developers);\r\n         return {\r\n             auth,\r\n             developers\r\n         }\r\n     }\r\n    \r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,null),\r\n    firestoreConnect([\r\n        {collection:'users'},\r\n        {collection:'profiles'}\r\n      ])\r\n  )\r\n  (Developers);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink, Redirect} from 'react-router-dom';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nclass DeveloperDetails extends React.Component{\r\n\r\n\r\n      constructor(props){\r\n          super(props);\r\n          this.handleUrl=this.handleUrl.bind(this);\r\n      }\r\n      handleUrl(e,url){\r\n          e.preventDefault();\r\n         // console.log(url);\r\n\r\n          url.includes('https://')?window.location.href=url:window.location.href='https://'+url;\r\n          \r\n        }\r\n\r\n    render(){\r\n            let  { auth , developer } = this.props;\r\n            if(!auth.uid){\r\n                return <Redirect exact to=\"/\" />\r\n            }else{\r\n            \r\n                if(! developer ){\r\n                    return (\r\n                        <div className=\"container\">\r\n                            <h1 className=\"text-center text-primary loading\">Loading data.........</h1>\r\n                        </div>\r\n                    );\r\n                }else{\r\n                   \r\n                  \r\n                   \r\n                   let { educations , experiences , socialLinks } = developer;\r\n                   \r\n                    // console.log(experiences);\r\n                    // console.log(educations);\r\n                    //  console.log(developer);\r\n                \r\n\r\n\r\n\r\n                   return (\r\n                    <section className=\"container\">\r\n                    <NavLink exact to=\"/developers\" className=\"btn\">Back To Profiles</NavLink>\r\n                    <div className=\"profile-grid my-1\">\r\n                      <div className=\"profile-top bg-primary p-2\">\r\n                        <img\r\n                          className=\"round-img my-2\"\r\n                          src={developer.imageUrl}\r\n                        />\r\n                        <h1 className=\"large\"> {developer.handle} </h1>\r\n                        <p className=\"lead\"> {developer.jobTitle} </p>\r\n                        {/* <p> Joined At {showReadableDate(developer.createdAt)}   </p> */}\r\n                        <p> {developer.location} </p>\r\n                        <div className=\"icons my-1\">\r\n                          \r\n                        {\r\n                         socialLinks\r\n                           ?                  \r\n                            <span> \r\n                                <a  onClick={(e)=>this.handleUrl(e,developer.website)}>\r\n                                <i className=\"fas fa-globe fa-2x\"></i>\r\n                              </a>\r\n                              <a onClick={(e)=>this.handleUrl(e,socialLinks.twitter)}>\r\n                                <i className=\"fab fa-twitter fa-2x\"></i>\r\n                              </a>\r\n                              <a onClick={(e)=>this.handleUrl(e,developer.githubUsername)}>\r\n                                <i className=\"fab fa-github fa-2x\"></i>\r\n                              </a>\r\n                            \r\n                              <a onClick={(e)=>this.handleUrl(e,socialLinks.facebook)} >\r\n                                <i className=\"fab fa-facebook fa-2x\"></i>\r\n                              </a>\r\n                              <a  onClick={(e)=>this.handleUrl(e,socialLinks.linkedin)}>\r\n                                <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                              </a>\r\n                              <a  onClick={(e)=>this.handleUrl(e,socialLinks.instagram)}>\r\n                                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                              </a>\r\n                              <NavLink exact to={\"/developerPosts/\"+developer.userId} > <i className=\"fas fa-comment-alt fa-2x\"></i> </NavLink>                             \r\n                            </span> \r\n                             :\r\n                             <NavLink exact to={\"/developerPosts/\"+developer.userId} > <i className=\"fas fa-comment-alt fa-2x\"></i> </NavLink>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                    \r\n                      <div className=\"profile-about bg-light p-2\">\r\n                        <h2 className=\"text-primary\"> {developer.handle} bio</h2>\r\n                        <p>\r\n                         {developer.bio}\r\n                        </p>\r\n                        <div className=\"line\"></div>\r\n                        <h2 className=\"text-primary text-center\">Skill Set</h2>\r\n                       <div className=\"skills\">\r\n                           {developer.skills && developer.skills.map((skill,i)=>{\r\n                             return    <div className=\"p-1\" key={i}><i className=\"fas fa-check\"></i> {skill} </div>         \r\n                           })}\r\n                       \r\n                      \r\n                       </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"profile-exp bg-white p-2\">\r\n                        <h1 className=\"text-primary\">Experiences</h1>\r\n\r\n                        { experiences && experiences.map( experience =>{\r\n                           return (\r\n                            <div key={experience.id}>\r\n                                <h3> {experiences.company} </h3>\r\n                                 <p> {experience.fromDate}-  {experience.toDate} </p>\r\n                                <p><strong>Position : </strong> {experience.jobTitle} </p>\r\n                                <p><strong>Description : </strong> {experience.description} </p>\r\n                    \r\n                            </div>\r\n                           );\r\n                        })}\r\n                        \r\n                       \r\n                      </div>\r\n                        \r\n                        <div className=\"profile-edu bg-white p-2\">\r\n                          <h1 className=\"text-primary\">Education</h1>\r\n                          {educations && educations.map(education=>{\r\n                              return (\r\n                                <div key={education.id}>\r\n                                    <h3>{education.school} </h3>\r\n                                    <p> {education.fromDate}- {education.toDate} </p>\r\n                                    <p><strong>Degree : </strong> {education.degree} </p>\r\n                                    <p><strong>Field : </strong> {education.field} </p>\r\n                    \r\n                                    <p><strong>Description : </strong> {education.description} </p>\r\n                        \r\n                                </div>\r\n                              );\r\n                          })}\r\n                                                \r\n                        </div>                                                 \r\n                    </div>\r\n                  </section>\r\n                );    \r\n                }\r\n\r\n            }\r\n          \r\n    }\r\n}\r\n\r\n\r\n        \r\n    const mapStateToProps = (state,ownProps)=>{\r\n        const userId = ownProps.match.params.id;\r\n      \r\n        //console.log(userId);\r\n        let auth =state.firebase.auth;\r\n        let users = state.firestore.data.users;\r\n        let profiles  = state.firestore.data.profiles;\r\n        \r\n        let user = users?users[userId]:undefined;\r\n        let profile = profiles?profiles[userId]:undefined;           \r\n        let educations=state.firestore.ordered.educations;\r\n            educations= educations?educations.filter(education=>education.userId===userId):undefined;  \r\n                      \r\n       let experiences=state.firestore.ordered.experiences;\r\n           experiences = experiences?experiences.filter(experience=>experience.userId===userId):undefined;                 \r\n         \r\n           let developer = {};\r\n           //console.log(developer);\r\n\r\n           if(user){\r\n             developer={...user};\r\n          //   console.log(developer);\r\n           }\r\n           \r\n\r\n           if(profile){\r\n             developer={\r\n                  ...developer,\r\n                  ...profile\r\n                }\r\n           } \r\n\r\n           if(educations){\r\n             developer={\r\n               ...developer,\r\n               educations\r\n             }\r\n           }\r\n           if(experiences){\r\n             developer={\r\n               ...developer,\r\n               experiences\r\n             }\r\n           //  console.log(developer);\r\n           }\r\n\r\n          \r\n      \r\n\r\n\r\n        /**\r\n         *  developer = {\r\n         *             ...user,\r\n         *             ...profile,\r\n         *              educations:[{},{},{}] ,   \r\n         *              expriences:[{},{},{}] \r\n         *           };\r\n         * \r\n         * */ \r\n\r\n       \r\n\r\n        if( auth && developer ){\r\n          return {\r\n            auth,\r\n            developer    \r\n           };\r\n          }else  return { auth }\r\n          \r\n        \r\n        }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,null),\r\n    firestoreConnect([\r\n        {collection:'users'},\r\n        {collection:'profiles'},\r\n        {collection:'educations'},\r\n        {collection:'experiences'}\r\n\r\n    \r\n    ])\r\n  )\r\n  (DeveloperDetails);","import React from 'react';\r\nimport PostSummary from '../posts/PostSummary';\r\nimport AddPost from '../posts/AddPost';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nclass DeveloperPosts extends React.Component{\r\n \r\n  \r\n \r\n\r\n   render(){\r\n     //console.log('render');\r\n       const { completePosts ,  auth , developerId } = this.props; \r\n          \r\n       //console.log(auth);\r\n\r\n       if(!auth.uid){\r\n         return (<Redirect exact  to=\"/\"  />);\r\n       }else{\r\n         if(! completePosts ){\r\n            return (\r\n                     <div className=\"container\">\r\n                         <h2 className=\"text-primary  text-center loadin \">Loading Posts .....</h2>\r\n                    </div>\r\n                    );\r\n         }else{\r\n           console.log(completePosts);\r\n          return(\r\n            <section className=\"container\" >\r\n            <h1 className=\"large text-primary\">\r\n              Posts\r\n            </h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Welcome to the community</p>\r\n      \r\n            <div className=\"post-form\">\r\n             {auth.uid === developerId ? <AddPost props={this.props}/> : null }  \r\n            \r\n              <div className=\"posts\">       \r\n                {completePosts.length > 0 ?\r\n                 completePosts.map( post => <PostSummary key={post.postId} post={post} auth={auth} />) \r\n                 : <h1 className=\"text-center text-primary\"> There is no posts for this developer  </h1>\r\n                }\r\n              </div>\r\n            </div>\r\n          </section>\r\n           );\r\n  \r\n         }\r\n       }\r\n       \r\n   }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n      let auth =state.firebase.auth;\r\n      let developerId = ownProps.match.params.id;\r\n      let posts = state.firestore.ordered.posts;\r\n       \r\n      let users = state.firestore.data.users;\r\n      let comments =state.firestore.ordered.comments;\r\n      let reacts =state.firestore.ordered.reacts;\r\n     // console.log(auth);\r\n     // console.log(posts);\r\n     \r\n     if(posts && users && comments && reacts ){\r\n         // get Posts of one specific user\r\n         posts = posts.filter(post => post.userId === developerId);\r\n         let completePosts = posts.map( post =>{\r\n              // fetch comments belongst to this specific post \r\n           let    filteredComments = comments.filter(comment=>comment.postId === post.postId) \r\n                                 .map(comment=>{   \r\n                                  return {\r\n                                    ...comment,                                 \r\n                                    user:users[comment.userId] //add user object that is the owner of this comment\r\n                                  }\r\n                                });\r\n              \r\n            return {\r\n                body:post.body,\r\n                createdAt:post.createdAt,\r\n                postId:post.postId,\r\n                user:users[post.userId],\r\n                comments:filteredComments,\r\n                reacts:reacts.filter(react=>react.reactableId === post.postId)\r\n            }\r\n      });\r\n        //console.log(completePosts);\r\n        //console.log('All data are loaded');\r\n            return{\r\n                auth,\r\n                completePosts,\r\n                developerId\r\n              }\r\n          } else return { auth };\r\n\r\n      // the format of post we want to map to props\r\n      //  [\r\n      //    { postId ,\r\n      //        body , \r\n      //        userId ,\r\n      //        createdAt ,\r\n      //        postReacts:[\r\n     //                       {reactType,reactableId,reactorId,reactedId},\r\n     //                       {reactType,reactableId,reactorId,reactedId},\r\n     //                       {reactType,reactableId,reactorId,reactedId}\r\n    //                    ],\r\n      //        postUser : { userId , imageUrl  } ,\r\n      //        postComments: [\r\n      //                         {body, userHandle,userImg,createdAt},\r\n      //                         {body, userHandle,userImg,createdAt},\r\n      //                         {body, userHandle,userImg,createdAt}  \r\n      //                       ]\r\n           \r\n      //                       \r\n      //        \r\n      //     }\r\n      //  \r\n      // ]\r\n\r\n\r\n    \r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n       { collection:'posts'},\r\n       { collection:'users'},\r\n       { collection:'comments'},\r\n       { collection:'reacts'}\r\n    ])\r\n    \r\n)  ( DeveloperPosts);\r\n\r\n","import React from 'react';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {editPost} from '../../store/actions/postsActions';\r\nclass EditPost extends React.Component{\r\n  \r\n    constructor(props){\r\n        super(props);\r\n        const { post } = props;\r\n        console.log(post);\r\n        console.log(props);\r\n        this.state={\r\n            body: post?post.body:'',\r\n            postError:''   \r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        });\r\n        console.log(this.state.body);\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const { editPost , post } = this.props;\r\n        if(this.state.body.length < 5){\r\n            this.setState({\r\n                postError:'post length should be 5 characters length at least'\r\n            });\r\n        }else{\r\n            editPost({...post,body:this.state.body});\r\n            this.setState({\r\n                body:'',\r\n                postError:''\r\n            });\r\n\r\n            this.props.history.push('/posts');\r\n        }   \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        const post  = nextProps.post;\r\n        console.log(post);\r\n        this.mapPostToProps(post);\r\n    }\r\n    mapPostToProps(post){\r\n        this.setState({\r\n            body:post.body\r\n        })\r\n    }\r\n\r\n\r\n    // componentDidMount(){\r\n    //     const { post } = this.props;\r\n    //     console.log(post);\r\n    //     if(post){\r\n    //         this.setState({\r\n    //             body:post.body\r\n    //         })\r\n    //     }\r\n    // }\r\n    \r\n\r\n\r\n    render(){\r\n\r\n        const { post } = this.props;\r\n\r\n          //console.log(post);\r\n          if(post){\r\n\r\n              return (\r\n                  <div className=\"container\">\r\n                     <form className=\"form my-1\" onSubmit={this.handleSubmit}>\r\n                         <p className=\"text-danger my-1\"> {this.state.postError} </p>\r\n                         <textarea cols=\"30\" rows=\"5\" value={this.state.body} placeholder=\"Create a post\" id='body' onChange={ (e) =>this.handleChange(e) }>  </textarea>\r\n                         <input type=\"submit\" value=\"Submit\" className=\"btn btn-dark my-1\" />\r\n                     </form>          \r\n                  </div>\r\n             );\r\n          }else{\r\n              return (\r\n                  <div className=\"container\">\r\n                       <h2 className=\"text-primary text-center loading\"> Loading post ......</h2>\r\n                  </div> \r\n              );\r\n          }\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state ,ownProps )=>{\r\n    const auth = state.firebase.auth;\r\n    const postId= ownProps.match.params.id;\r\n    const posts = state.firestore.data.posts;\r\n    const post = posts ? posts[postId]:undefined;\r\n    // console.log(posts);\r\n    // console.log(post);\r\n\r\n    if(auth && post ){\r\n        return{\r\n            auth,\r\n            post\r\n        }\r\n    }else if(auth){\r\n        return {\r\n            auth\r\n        }\r\n    }else return {};\r\n}\r\nconst mapDispatchToProps = (dispatch,ownProps)=>{\r\n    ////console.log('add post');\r\n    // const  postId = ownProps.match.params.id;\r\n    // console.log(postId); \r\n    return{\r\n         editPost: (post)=>dispatch(editPost(post))\r\n    }\r\n}\r\n\r\n\r\nexport default   compose(\r\n                    connect(mapStateToProps,mapDispatchToProps),\r\n                    firestoreConnect([{collection:'posts'}])\r\n                    ) (EditPost);","import React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport './styles/App.scss';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport { BrowserRouter , Switch , Route} from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PostDetails from './components/posts/PostDetails';\nimport Posts from './components/posts/Posts';\nimport EditProfile from './components/dashboard/EditProfile';\nimport AddExperience from './components/dashboard/AddExperience';\nimport AddEducation from './components/dashboard/AddEducation';\nimport EditProfileImage from './components/dashboard/EditProfileImage';\nimport NotFoundPage from './components/layout/NotFoundPage';\nimport HomePage from './components/layout/HomePage';\nimport Developers from './components/profiles/Developers';\nimport DeveloperDetails from './components/profiles/DeveloperDetails';\nimport DeveloperPosts from './components/profiles/DeveloperPosts';\nimport EditPost from './components/posts/EditPost';\n\n\nfunction App() {\n  return (\n    <BrowserRouter> \n      <div className=\"App\">\n        <Navbar />\n         <Switch>\n            <Route exact path='/' component={HomePage}  />\n\n            <Route exact path='/dashboard' component={Dashboard}  />\n            <Route exact path='/signin' component={SignIn} />\n            <Route exact path='/signup' component={SignUp} />\n            <Route exact path=\"/editProfile/:id\"  component={EditProfile}  /> \n            <Route exact path=\"/addExperience/:id\"  component={AddExperience} />\n            <Route exact path=\"/addEducation/:id\"  component={AddEducation} />\n            <Route exact path=\"/editProfileImage/:id\" component={EditProfileImage}  />\n            <Route exact path=\"/developers\"  component={Developers}/>\n            <Route exact path=\"/profile/:id\"  component={DeveloperDetails}/> \n            <Route exaxt path=\"/developerPosts/:id\" component={DeveloperPosts} />\n \n\n            <Route exact path=\"/posts\" component={Posts} />\n            <Route exact path=\"/post/:id\" component={PostDetails}  />\n            <Route exact path=\"/editPost/:id\" component={EditPost}  />\n\n            <Route path=\"*\" component={NotFoundPage} />\n         </Switch>\n      </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {   \r\n    SIGNUP_SUCCESS , \r\n    SIGNUP_ERROR , \r\n    SIGNIN_SUCCESS ,\r\n    SIGNIN_ERROR ,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_ERROR ,\r\n    ACCOUNT_DELETE_SUCCESS,\r\n    ACCOUNT_DELETE_ERROR \r\n   } from './../actions/actions';\r\n\r\n\r\n\r\nconst initState={\r\n    authError:null,\r\n    deleteAccountError:null\r\n}\r\nconst authReducer = ( state= initState , action ) =>{\r\n    switch(action.type){\r\n        case SIGNUP_SUCCESS:\r\n            console.log('sign up successfully');\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case SIGNUP_ERROR:\r\n            console.log('sign up error');\r\n            return {\r\n                ...state,\r\n                authError:action.payload\r\n            }   \r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }   \r\n        case LOGOUT_ERROR:\r\n            console.log('sign out successfully');\r\n            return {\r\n                ...state,\r\n                authError:action.payload\r\n            }\r\n        case SIGNIN_SUCCESS:\r\n            console.log('sign in success');  \r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }  \r\n        case SIGNIN_ERROR:\r\n            console.log('sign in error');\r\n            console.log(action.payload);\r\n            return{\r\n                ...state,\r\n                authError:action.payload\r\n            }  \r\n        case ACCOUNT_DELETE_SUCCESS:\r\n            console.log('account deleted successfully');\r\n            return  state;\r\n        case ACCOUNT_DELETE_ERROR:\r\n            console.log('account deleting error');\r\n            return {\r\n                ...state,\r\n                deleteAccountError:action.payload\r\n            }              \r\n        default:\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }    \r\n    }\r\n}\r\nexport  default authReducer ;\r\n\r\n\r\n","import {  \r\n    EDIT_PROFILEIMAGE_SUCCESS , \r\n    EDIT_PROFILEIMAGE_ERROR , \r\n    EDIT_PROFILE_SUCCESS , \r\n    EDIT_PROFILE_ERROR , \r\n    ADD_EXPERIENCE_SUCCESS , \r\n    ADD_EXPERIENCE_ERROR , \r\n    DELETE_EXPERIENCE_SUCCESS ,\r\n    DELETE_EXPERIENCE_ERROR , \r\n    ADD_EDUCATION_SUCCESS , \r\n    ADD_EDUCATION_ERROR , \r\n    DELETE_EDUCATION_SUCCESS ,\r\n    DELETE_EDUCATION_ERROR \r\n} \r\nfrom './../../actions/actions';\r\n\r\nconst initState = {\r\n    editProfileErr:null,\r\n    addExperienceErr:null,\r\n    addEducationErr:null,\r\n    editProfileImageErr:null\r\n }\r\n\r\n const profileReducer=(state=initState,action)=>{\r\n   switch(action.type){\r\n       case EDIT_PROFILE_SUCCESS:\r\n           console.log('edit profile  from  reducers');\r\n           return state;\r\n       case EDIT_PROFILE_ERROR:\r\n           return {\r\n               ...state,\r\n               editProfileErr:'edit profile error'\r\n            };  \r\n        case ADD_EXPERIENCE_SUCCESS:\r\n            console.log('add experience successfully from reducers')\r\n            return state;\r\n        case ADD_EXPERIENCE_ERROR:\r\n            console.log('add experience error from reducers')\r\n\r\n            return {\r\n                ...state,\r\n                addExperienceErr:'edit exeperince error'\r\n            }  \r\n      \r\n        case EDIT_PROFILEIMAGE_SUCCESS:\r\n            console.log('edit profile image success');\r\n            return state;\r\n\r\n        case EDIT_PROFILEIMAGE_ERROR:\r\n            console.log('edit profile image error');\r\n            return {\r\n                ...state,\r\n                editProfileImageErr: action.payload\r\n            };\r\n    \r\n\r\n        case ADD_EDUCATION_SUCCESS:\r\n            return state;\r\n\r\n        case ADD_EDUCATION_ERROR:\r\n            return {\r\n                ...state,\r\n                addEducationErr:'add education Error'\r\n            }\r\n\r\n        case DELETE_EDUCATION_SUCCESS:\r\n            console.log('Education element wase deleted successfully');\r\n             return state;\r\n        \r\n       case DELETE_EDUCATION_ERROR:\r\n           console.log('delete education error form reducer');\r\n                return {\r\n                    ...state,\r\n                    deleteEducationErr:'delete education error'\r\n                }\r\n        case DELETE_EXPERIENCE_SUCCESS:\r\n            console.log('experience  was deleted successfully from reducers');\r\n                return state;\r\n        \r\n        case DELETE_EXPERIENCE_ERROR:\r\n            console.log('delete experience error form reducer');\r\n                return {\r\n                    ...state,\r\n                    deleteEducationErr:'delete education error'\r\n                    }  \r\n        default :\r\n           return state;      \r\n   }\r\n}\r\n\r\nexport default profileReducer;","import {  \r\n  ADD_POST_SUCCESS ,\r\n  ADD_POST_ERROR ,\r\n  DELETE_POST_SUCCESS , \r\n  DELETE_POST_ERROR, \r\n  EDIT_POST_SUCCESS ,\r\n  EDIT_POST_ERROR\r\n } from './../../actions/actions';\r\n\r\n\r\n\r\nconst initState = {\r\n   addPostError:null,\r\n   deletePostError:null,\r\n   editPostError:null\r\n};\r\n\r\nconst  postReducer  =  ( state= initState , action )=>{\r\n        switch(action.type){\r\n          case ADD_POST_SUCCESS:\r\n            return  state;\r\n          case ADD_POST_ERROR:\r\n            return {\r\n              ...state,\r\n               addPostError:action.payload\r\n            }; \r\n          case DELETE_POST_SUCCESS:\r\n            return state;\r\n          case DELETE_POST_ERROR:\r\n            return {\r\n              ...state,\r\n              deletePostError:action.payload\r\n            }  \r\n\r\n          case EDIT_POST_SUCCESS:\r\n              return state;\r\n           case EDIT_POST_ERROR:\r\n             return {\r\n               ...state,\r\n                editPostError:action.payload\r\n             }    \r\n          default:\r\n            return state;  \r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default postReducer;","\r\nimport {\r\n  ADD_COMMENT_SUCCESS ,\r\n  ADD_COMMENT_ERROR,\r\n  DELETE_COMMENT_SUCCESS , \r\n  DELETE_COMMENT_ERROR \r\n}  from './../../actions/actions';\r\n\r\n\r\n const  initState = {\r\n    addCommentError:null,\r\n    deleteCommentError:null\r\n}\r\nconst commentReducer = (state=initState,action) => {\r\n    switch(action.type){\r\n        case ADD_COMMENT_SUCCESS:\r\n          return  state;\r\n        case ADD_COMMENT_ERROR:\r\n          return {\r\n            ...state,\r\n             addCommentError:action.payload\r\n          }; \r\n          case DELETE_COMMENT_SUCCESS:\r\n            return  state;\r\n          case DELETE_COMMENT_ERROR:\r\n            return {\r\n              ...state,\r\n               deleteCommentError:action.payload\r\n            }; \r\n        default:\r\n          return state;  \r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default commentReducer;","\r\nimport {  \r\n  ADD_REACT_SUCCESS,\r\n  ADD_REACT_ERROR , \r\n  DELETE_REACT_SUCCESS ,\r\n  DELETE_REACT_ERROR\r\n} from './../../actions/actions';\r\n\r\nconst  initState = {\r\n    addReactError:null,\r\n    deleteReactError:null\r\n}\r\nconst reactReducer = (state=initState,action) => {\r\n    switch(action.type){\r\n        case ADD_REACT_SUCCESS:\r\n          return  state;\r\n        case ADD_REACT_ERROR:\r\n          return {\r\n            ...state,\r\n             addReactError:action.payload\r\n          }; \r\n        case DELETE_REACT_SUCCESS:\r\n            return state;\r\n        case DELETE_REACT_ERROR:\r\n            return {\r\n                ...state,\r\n                deleteReactError:action.payload\r\n            }    \r\n        default:\r\n          return state;  \r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default reactReducer;","import { READ_NOTIFICATION_SUCCESS } from './../../actions/actions';\r\n\r\n\r\nconst initState = {readNotificationError:null};\r\n\r\nconst  notificationReducer  =  ( state= initState , action )=>{\r\n        switch(action.type){\r\n          case READ_NOTIFICATION_SUCCESS:\r\n              console.log('notification was read sucessfully');\r\n            return  state; \r\n          default:\r\n            return state;  \r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default notificationReducer;","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport profileReducer from './dataReducers/profileReducer';\r\nimport postReducer from './dataReducers/postReducer';\r\nimport commentReducer from './dataReducers/commentReducer';\r\nimport reactReducer from './dataReducers/reactReducer';\r\nimport notificationReducer from './dataReducers/notificationReducer';\r\n\r\n\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({ \r\n          auth:authReducer,\r\n          firestore:firestoreReducer,\r\n          firebase:firebaseReducer,\r\n          profiles:profileReducer,\r\n          posts:postReducer,\r\n          comments:commentReducer,\r\n          reacts:reactReducer,\r\n          notificationReducer\r\n      });\r\n\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import configurations\n import fbConfig from './config/fbConfig';\n import  firebase from 'firebase/app';\n \n import {Provider,useSelector } from 'react-redux';\n\n import {createStore , applyMiddleware , compose} from 'redux';\n import rootReducer from './store/reducers/rootReducer';\n import thunk from 'redux-thunk';\n import {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from \"react-redux-firebase\";\n\n// wait users to be loaded then render \nconsole.log(isLoaded);\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>  <h1 className=\"text-center text-primary loading\"> Loading ..... </h1> </div>;\n  return children\n}\n\n\n//\n\nconst store = createStore(\n        rootReducer,\n        compose(\n          applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n          reduxFirestore(firebase, fbConfig),\n          window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n\n);\n\n\n\n\n\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n}\n\n\nconst rrfProps = {\n  firebase,\n  config: {\n      ...fbConfig,\n      ...profileSpecificProps,\n    } ,   \n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\n\n\nReactDOM.render(\n  \n  <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        {/* <BrowserRouter> */}\n          <AuthIsLoaded>\n               <App/>  { /* Rest of App Components */}\n          </AuthIsLoaded>\n        {/* </BrowserRouter> */}\n      </ReactReduxFirebaseProvider>\n    </Provider>\n,\ndocument.getElementById('root')\n);\n\n\n\n\n\n// ReactDOM.render(\n  \n//     <Provider store={store}>\n//     <ReactReduxFirebaseProvider {...rrfProps}>   \n//       <App />\n//     </ReactReduxFirebaseProvider>\n//   </Provider>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}